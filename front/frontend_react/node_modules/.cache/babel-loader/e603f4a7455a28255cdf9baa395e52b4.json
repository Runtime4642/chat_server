{"ast":null,"code":"import _objectSpread from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { createAction, handleActions } from 'redux-actions';\nimport { Map, List, fromJS } from 'immutable';\nimport { pender } from 'redux-pender';\nimport * as api from 'lib/api';\nimport { message } from 'antd';\nconst INITIALIZE = 'worktime/INITIALIZE';\nconst CHANGE_INPUT = 'worktime/CHANGE_INPUT';\nconst WRITE_WORK_TIME = 'worktime/WRITE_WORK_TIME';\nconst WORK_TIME_LIST = 'worktime/WORK_TIME_LIST';\nconst GET_WORK_TIME_DATA = 'worktime/GET_WORK_TIME_DATA';\nconst EDIT_WORK_TIME_DATA = 'worktime/EDIT_WORK_TIME_DATA';\nconst REMOVE_WORK_TIME_DATA = 'worktime/REMOVE_WORK_TIME_DATA';\nexport const initialize = createAction(INITIALIZE);\nexport const changeInput = createAction(CHANGE_INPUT);\nexport const writeWorkTime = createAction(WRITE_WORK_TIME, api.writeWorkTime);\nexport const getWorkTimeList = createAction(WORK_TIME_LIST, api.getWorkTimeList);\nexport const getWorkTimeData = createAction(GET_WORK_TIME_DATA, api.getWorkTimeData);\nexport const editWorkTimeData = createAction(EDIT_WORK_TIME_DATA, api.editWorkTimeData);\nexport const removeWorkTimeData = createAction(REMOVE_WORK_TIME_DATA, api.removeWorkTimeData);\nconst initialState = Map({\n  start: '00:00',\n  end: '00:00',\n  use: 'true',\n  newStart: '00:00',\n  newEnd: '00:00',\n  newUse: 'true',\n  no: '',\n  tables: List(),\n  modal: false,\n  editDisabled: true,\n  changeView: 'table'\n});\nexport default handleActions(_objectSpread({\n  [INITIALIZE]: (state, action) => initialState,\n  [CHANGE_INPUT]: (state, action) => {\n    const _action$payload = action.payload,\n          name = _action$payload.name,\n          value = _action$payload.value;\n    return state.set(name, value);\n  }\n}, pender({\n  type: WRITE_WORK_TIME,\n  onSuccess: (state, action) => {\n    message.config({\n      top: 100,\n      duration: 2\n    });\n    message.info(action.payload.data.data);\n    const _action$payload$data = action.payload.data,\n          start = _action$payload$data.start,\n          end = _action$payload$data.end,\n          use = _action$payload$data.use;\n    return state.set('start', start).set('end', end).set('use', use);\n  }\n}), {}, pender({\n  type: WORK_TIME_LIST,\n  onSuccess: (state, action) => {\n    //   //console.log(action.payload);\n    const tables = action.payload.data.data;\n    return state.set('tables', fromJS(tables));\n  }\n}), {}, pender({\n  type: GET_WORK_TIME_DATA,\n  onSuccess: (state, action) => {\n    const _action$payload$data$ = action.payload.data.data,\n          start = _action$payload$data$.start,\n          end = _action$payload$data$.end,\n          use = _action$payload$data$.use;\n    return state.set('start', start).set('end', end).set('use', use);\n  }\n}), {}, pender({\n  type: EDIT_WORK_TIME_DATA,\n  onSuccess: (state, action) => {\n    message.config({\n      top: 100,\n      duration: 2\n    });\n    message.info(action.payload.data.data);\n    return state.set('changeView', state.worktime.changeView);\n  }\n}), {}, pender({\n  type: REMOVE_WORK_TIME_DATA,\n  onSuccess: (state, action) => {\n    message.config({\n      top: 100,\n      duration: 2\n    });\n    message.info(action.payload.data.data);\n    return state.set('changeView', state.worktime.changeView);\n  }\n})), initialState);","map":{"version":3,"sources":["F:/JAVA_WORKSPACE/frontend_react-20191018T023535Z-001/frontend_react/src/store/modules/worktime.js"],"names":["createAction","handleActions","Map","List","fromJS","pender","api","message","INITIALIZE","CHANGE_INPUT","WRITE_WORK_TIME","WORK_TIME_LIST","GET_WORK_TIME_DATA","EDIT_WORK_TIME_DATA","REMOVE_WORK_TIME_DATA","initialize","changeInput","writeWorkTime","getWorkTimeList","getWorkTimeData","editWorkTimeData","removeWorkTimeData","initialState","start","end","use","newStart","newEnd","newUse","no","tables","modal","editDisabled","changeView","state","action","payload","name","value","set","type","onSuccess","config","top","duration","info","data","worktime"],"mappings":"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","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\r\n\r\nimport { Map, List, fromJS } from 'immutable';\r\nimport { pender } from 'redux-pender';\r\n\r\nimport * as api from 'lib/api';\r\nimport {  message } from 'antd';\r\nconst INITIALIZE = 'worktime/INITIALIZE';\r\nconst CHANGE_INPUT = 'worktime/CHANGE_INPUT';\r\nconst WRITE_WORK_TIME = 'worktime/WRITE_WORK_TIME';\r\nconst WORK_TIME_LIST = 'worktime/WORK_TIME_LIST';\r\nconst GET_WORK_TIME_DATA = 'worktime/GET_WORK_TIME_DATA';\r\nconst EDIT_WORK_TIME_DATA = 'worktime/EDIT_WORK_TIME_DATA';\r\nconst REMOVE_WORK_TIME_DATA = 'worktime/REMOVE_WORK_TIME_DATA';\r\n\r\nexport const initialize = createAction(INITIALIZE);\r\nexport const changeInput = createAction(CHANGE_INPUT);\r\nexport const writeWorkTime = createAction(WRITE_WORK_TIME, api.writeWorkTime);\r\nexport const getWorkTimeList = createAction(WORK_TIME_LIST, api.getWorkTimeList);\r\nexport const getWorkTimeData = createAction(GET_WORK_TIME_DATA, api.getWorkTimeData);\r\nexport const editWorkTimeData = createAction(EDIT_WORK_TIME_DATA, api.editWorkTimeData);\r\nexport const removeWorkTimeData = createAction(REMOVE_WORK_TIME_DATA, api.removeWorkTimeData);\r\n\r\nconst initialState = Map({\r\n    start: '00:00',\r\n    end: '00:00',\r\n    use: 'true',\r\n    newStart: '00:00',\r\n    newEnd: '00:00',\r\n    newUse: 'true',\r\n    no: '',\r\n    tables: List(),\r\n    modal: false,\r\n    editDisabled: true,\r\n    changeView: 'table'\r\n});\r\n\r\nexport default handleActions({\r\n    [INITIALIZE]: (state, action) => initialState,\r\n    [CHANGE_INPUT]: (state, action) => {\r\n        const { name, value } = action.payload;\r\n        return state.set(name, value);\r\n    },\r\n    ...pender({\r\n        type: WRITE_WORK_TIME,\r\n        onSuccess: (state, action) => {\r\n            message.config( {top: 100, duration: 2});\r\n            message.info(action.payload.data.data);\r\n            const { start, end, use } = action.payload.data;\r\n            return state.set('start', start)\r\n                        .set('end', end)\r\n                        .set('use', use);\r\n        }\r\n    }),\r\n    ...pender({\r\n        type: WORK_TIME_LIST,\r\n        onSuccess: (state, action) => {\r\n         //   //console.log(action.payload);\r\n\r\n            const { data: tables } = action.payload.data;\r\n\r\n            return state.set('tables', fromJS(tables));\r\n        }\r\n    }),\r\n    ...pender({\r\n        type: GET_WORK_TIME_DATA,\r\n        onSuccess: (state, action) => {\r\n            const { start, end, use } = action.payload.data.data;\r\n            return state.set('start', start)\r\n                        .set('end', end)\r\n                        .set('use', use);\r\n        }\r\n    }),\r\n    ...pender({\r\n        type: EDIT_WORK_TIME_DATA,\r\n        onSuccess: (state, action) => {\r\n            message.config( {top: 100, duration: 2});\r\n            message.info(action.payload.data.data);\r\n            return state.set('changeView', state.worktime.changeView);\r\n        }\r\n    }),\r\n    ...pender({\r\n        type: REMOVE_WORK_TIME_DATA,\r\n        onSuccess: (state, action) => {\r\n            message.config( {top: 100, duration: 2});\r\n            message.info(action.payload.data.data);\r\n            return state.set('changeView', state.worktime.changeView);\r\n        }\r\n    })\r\n}, initialState);"]},"metadata":{},"sourceType":"module"}