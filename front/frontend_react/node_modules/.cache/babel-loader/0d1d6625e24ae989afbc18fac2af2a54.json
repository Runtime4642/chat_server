{"ast":null,"code":"import _regeneratorRuntime from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\src\\\\containers\\\\modal\\\\RecordModalContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport RecordModal from 'components/modal/RecordModal';\nimport * as recordActions from 'store/modules/record';\nimport * as paginationList from 'store/modules/pagination';\n\nvar RecordModalContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RecordModalContainer, _Component);\n\n  function RecordModalContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RecordModalContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RecordModalContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleChangeInput = function (_ref) {\n      var name = _ref.name,\n          value = _ref.value;\n      var RecordActions = _this.props.RecordActions;\n      RecordActions.changeInput({\n        name: name,\n        value: value\n      });\n    };\n\n    _this.handleGetModal =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(no) {\n        var _this$props, RecordActions, token;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$props = _this.props, RecordActions = _this$props.RecordActions, token = _this$props.token;\n\n                if (no === '') {\n                  no = 0;\n                }\n\n                _context.prev = 2;\n                _context.next = 5;\n                return RecordActions.getRecordData(no, token);\n\n              case 5:\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](2);\n                console.log(_context.t0);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 7]]);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(RecordModalContainer, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      if (nextProps.no !== this.props.no) {\n        this.handleGetModal(nextProps.no);\n      }\n\n      return true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          visible = _this$props2.visible,\n          day = _this$props2.day,\n          actor = _this$props2.actor,\n          id = _this$props2.id,\n          recordType = _this$props2.recordType,\n          recordTypeEn = _this$props2.recordTypeEn,\n          content = _this$props2.content,\n          contentEn = _this$props2.contentEn,\n          read = _this$props2.read,\n          insertUserId = _this$props2.insertUserId,\n          loading = _this$props2.loading,\n          language = _this$props2.language;\n      if (loading) return null;\n      return React.createElement(RecordModal, {\n        visible: visible,\n        day: day,\n        actor: actor,\n        id: id,\n        recordType: recordType,\n        recordTypeEn: recordTypeEn,\n        content: content,\n        contentEn: contentEn,\n        read: read,\n        insertUserId: insertUserId,\n        language: language,\n        onChangeInput: this.handleChangeInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return RecordModalContainer;\n}(Component);\n\nexport default connect(function (state) {\n  return {\n    visible: state.record.get('modal'),\n    no: state.record.get('no'),\n    day: state.record.get('day'),\n    actor: state.record.get('actor'),\n    id: state.record.get('id'),\n    recordType: state.record.get('recordType'),\n    recordTypeEn: state.record.get('recordTypeEn'),\n    content: state.record.get('content'),\n    contentEn: state.record.get('contentEn'),\n    read: state.record.get('read'),\n    insertUserId: state.record.get('insertUserId'),\n    token: state.login.token,\n    activePage: state.pagination.get('activePage'),\n    loading: state.pender.pending['list/GET_RECORD_DATA'],\n    language: state.language.language\n  };\n}, function (dispatch) {\n  return {\n    RecordActions: bindActionCreators(recordActions, dispatch),\n    PaginationActions: bindActionCreators(paginationList, dispatch)\n  };\n})(RecordModalContainer);","map":{"version":3,"sources":["F:/JAVA_WORKSPACE/frontend_react-20191018T023535Z-001/frontend_react/src/containers/modal/RecordModalContainer.js"],"names":["React","Component","connect","bindActionCreators","RecordModal","recordActions","paginationList","RecordModalContainer","handleChangeInput","name","value","RecordActions","props","changeInput","handleGetModal","no","token","getRecordData","console","log","nextProps","nextState","visible","day","actor","id","recordType","recordTypeEn","content","contentEn","read","insertUserId","loading","language","state","record","get","login","activePage","pagination","pender","pending","dispatch","PaginationActions"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport RecordModal from 'components/modal/RecordModal';\r\nimport * as recordActions from 'store/modules/record';\r\nimport * as paginationList from 'store/modules/pagination';\r\n\r\nclass RecordModalContainer extends Component {\r\n\r\n    handleChangeInput = ({name, value}) => {\r\n        const { RecordActions } = this.props;\r\n\r\n        RecordActions.changeInput({name, value});\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n\r\n        if(nextProps.no !== this.props.no ){\r\n            this.handleGetModal(nextProps.no);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    handleGetModal = async (no) => {\r\n        const { RecordActions, token } = this.props;\r\n\r\n        if(no === ''){\r\n            no = 0;\r\n        }\r\n\r\n        try {\r\n            await RecordActions.getRecordData(no, token);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { visible, day, actor, id, recordType, recordTypeEn, content, contentEn, read, insertUserId, loading, language } = this.props;\r\n\r\n        if(loading) return null;\r\n\r\n        return (\r\n            <RecordModal visible={visible} day={day} actor={actor} id={id} recordType={recordType} recordTypeEn={recordTypeEn} content={content} contentEn={contentEn}\r\n                         read={read} insertUserId={insertUserId} language={language} onChangeInput={this.handleChangeInput}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        visible: state.record.get('modal'),\r\n        no: state.record.get('no'),\r\n        day: state.record.get('day'),\r\n        actor: state.record.get('actor'),\r\n        id: state.record.get('id'),\r\n        recordType: state.record.get('recordType'),\r\n        recordTypeEn: state.record.get('recordTypeEn'),\r\n        content: state.record.get('content'),\r\n        contentEn: state.record.get('contentEn'),\r\n        read: state.record.get('read'),\r\n        insertUserId: state.record.get('insertUserId'),\r\n        token: state.login.token,\r\n        activePage: state.pagination.get('activePage'),\r\n        loading: state.pender.pending['list/GET_RECORD_DATA'],\r\n        language: state.language.language\r\n    }),\r\n    (dispatch) => ({\r\n        RecordActions: bindActionCreators(recordActions, dispatch),\r\n        PaginationActions: bindActionCreators(paginationList, dispatch),\r\n    })\r\n)(RecordModalContainer);"]},"metadata":{},"sourceType":"module"}