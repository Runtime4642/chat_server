{"ast":null,"code":"import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport penderMiddleware from 'redux-pender';\nimport * as modules from './modules';\nimport ReduxThunk from 'redux-thunk';\nvar reducers = combineReducers(modules);\nvar middlewares = [penderMiddleware()];\nvar logger = createLogger(); //개발 모드일 때만 Redux Devtools를 적용합니다.\n\nvar isDev = process.env.NODE_ENV === 'development';\nvar devtools = isDev && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nvar composeEnhancers = devtools || compose;\nvar configure = createStore(reducers, composeEnhancers(applyMiddleware.apply(void 0, [ReduxThunk].concat(middlewares))));\nexport default configure;","map":{"version":3,"sources":["F:/JAVA_WORKSPACE/frontend_react-20191018T023535Z-001/frontend_react/src/store/configure.js"],"names":["createStore","applyMiddleware","compose","combineReducers","createLogger","penderMiddleware","modules","ReduxThunk","reducers","middlewares","logger","isDev","process","env","NODE_ENV","devtools","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","composeEnhancers","configure"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,gBAAP,MAA6B,cAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AAEA,IAAMC,QAAQ,GAAGL,eAAe,CAACG,OAAD,CAAhC;AACA,IAAMG,WAAW,GAAG,CAACJ,gBAAgB,EAAjB,CAApB;AACA,IAAMK,MAAM,GAAGN,YAAY,EAA3B,C,CAEA;;AACA,IAAMO,KAAK,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAvC;AACA,IAAMC,QAAQ,GAAGJ,KAAK,IAAIK,MAAM,CAACC,oCAAjC;AACA,IAAMC,gBAAgB,GAAGH,QAAQ,IAAIb,OAArC;AAEA,IAAMiB,SAAS,GAAGnB,WAAW,CAC3BQ,QAD2B,EAE3BU,gBAAgB,CAACjB,eAAe,MAAf,UAAgBM,UAAhB,SAA+BE,WAA/B,EAAD,CAFW,CAA7B;AAKA,eAAeU,SAAf","sourcesContent":["import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport penderMiddleware from 'redux-pender';\r\nimport * as modules from './modules';\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nconst reducers = combineReducers(modules);\r\nconst middlewares = [penderMiddleware()];\r\nconst logger = createLogger();\r\n\r\n//개발 모드일 때만 Redux Devtools를 적용합니다.\r\nconst isDev = process.env.NODE_ENV === 'development';\r\nconst devtools = isDev && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\nconst composeEnhancers = devtools || compose;\r\n\r\nconst configure = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(ReduxThunk, ...middlewares))\r\n);\r\n\r\nexport default configure;"]},"metadata":{},"sourceType":"module"}