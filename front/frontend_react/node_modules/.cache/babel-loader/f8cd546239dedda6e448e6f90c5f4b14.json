{"ast":null,"code":"import _objectDestructuringEmpty from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectDestructuringEmpty\";\nvar _jsxFileName = \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\src\\\\containers\\\\chat\\\\ChatContainer.js\";\nimport React, { Component } from 'react';\nimport Chat from 'components/chat/chat'; //import {connect} from \"react-redux\";\n\nclass ChatContainer extends Component {\n  render() {\n    _objectDestructuringEmpty(this.props);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Chat, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    })) // <Check starttime={starttime} endtime={endtime} language = {language} isNight={isNight} time={time} visible={visible} endTime={endTime}\n    //        isGoOff={isGoOff} goto={goto} gooff={gooff} preGoTo={preGoTo} preGoOff={preGoOff} preHoliDay={preHoliDay}\n    //        onGoTo={this.handleGoTo} onGoOff={this.handleGoOff} onChangeInput={this.convertState.bind(this)} onHandleState={this.handleState}/>\n    ;\n  }\n\n}\n\nexport default ChatContainer;\n/*export default connect(\r\n    (state) => ({\r\n        // loginUserNo:state.login.no,\r\n        // goto: state.commute.get(\"goto\"),\r\n        // gooff: state.commute.get(\"gooff\"),\r\n        // preGoTo: state.commute.get(\"preGoTo\"),\r\n        // preGoOff: state.commute.get(\"preGoOff\"),\r\n        // preHoliDay: state.holiday.get(\"preHoliDay\"),\r\n        // no: state.list.get('no'),\r\n        // isGoOff: state.commute.get('isGoOff'),\r\n        // isNight: state.commute.get('isNight'),\r\n        // endTime: state.commute.get('endTime'),\r\n        // time: state.commute.get('time'),\r\n        // cnt : state.commute.get('cnt'),\r\n        // loading: state.pender.pending['commute/GET_END_TIME'],\r\n        // token: state.login.token,\r\n        // language: state.language.language,\r\n        // starttime: state.time.get('starttime'),  \r\n        // endtime: state.time.get('endtime'),\r\n        // searchFromDate: state.list.get('searchFromDate'),\r\n        // searchToDate: state.list.get('searchToDate'),\r\n        // searchState: state.list.get('searchState'),\r\n        // changeView: state.list.get('changeView'),\r\n        // activePage: state.pagination.get('activePage'),\r\n        // totalWorkTime:state.commute.get('totalWorkTime')\r\n    }),\r\n    (dispatch) => ({\r\n        // CommuteActions: bindActionCreators(commuteActions, dispatch),\r\n        // TimeActions: bindActionCreators(timeActions, dispatch),\r\n        // ListActions: bindActionCreators(listActions, dispatch),\r\n        // GetCalList: bindActionCreators(getCalList, dispatch),\r\n        // PaginationActions: bindActionCreators(paginationList, dispatch),\r\n        // StateActions: bindActionCreators(stateActions, dispatch),\r\n        // HoliDayActions: bindActionCreators(holidayActions, dispatch)\r\n    })\r\n)(ChatContainer);*/","map":{"version":3,"sources":["F:/JAVA_WORKSPACE/frontend_react-20191018T023535Z-001/frontend_react/src/containers/chat/ChatContainer.js"],"names":["React","Component","Chat","ChatContainer","render","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,sBAAjB,C,CACA;;AAGA,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AAElCG,EAAAA,MAAM,GAAE;AAAA,8BACO,KAAKC,KADZ;;AAEJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADJ,CAIQ;AACA;AACA;AANR;AAQH;;AAZiC;;AActC,eAAeF,aAAf;AAEA","sourcesContent":["import React, { Component } from 'react';\r\nimport Chat from 'components/chat/chat';\r\n//import {connect} from \"react-redux\";\r\n\r\n\r\nclass ChatContainer extends Component {\r\n\r\n    render(){\r\n        const {} = this.props;\r\n        return(\r\n            <div>\r\n            <Chat/>\r\n            </div>\r\n                // <Check starttime={starttime} endtime={endtime} language = {language} isNight={isNight} time={time} visible={visible} endTime={endTime}\r\n                //        isGoOff={isGoOff} goto={goto} gooff={gooff} preGoTo={preGoTo} preGoOff={preGoOff} preHoliDay={preHoliDay}\r\n                //        onGoTo={this.handleGoTo} onGoOff={this.handleGoOff} onChangeInput={this.convertState.bind(this)} onHandleState={this.handleState}/>\r\n        );\r\n    }\r\n}\r\nexport default ChatContainer;\r\n\r\n/*export default connect(\r\n    (state) => ({\r\n        // loginUserNo:state.login.no,\r\n        // goto: state.commute.get(\"goto\"),\r\n        // gooff: state.commute.get(\"gooff\"),\r\n        // preGoTo: state.commute.get(\"preGoTo\"),\r\n        // preGoOff: state.commute.get(\"preGoOff\"),\r\n        // preHoliDay: state.holiday.get(\"preHoliDay\"),\r\n        // no: state.list.get('no'),\r\n        // isGoOff: state.commute.get('isGoOff'),\r\n        // isNight: state.commute.get('isNight'),\r\n        // endTime: state.commute.get('endTime'),\r\n        // time: state.commute.get('time'),\r\n        // cnt : state.commute.get('cnt'),\r\n        // loading: state.pender.pending['commute/GET_END_TIME'],\r\n        // token: state.login.token,\r\n        // language: state.language.language,\r\n        // starttime: state.time.get('starttime'),  \r\n        // endtime: state.time.get('endtime'),\r\n        // searchFromDate: state.list.get('searchFromDate'),\r\n        // searchToDate: state.list.get('searchToDate'),\r\n        // searchState: state.list.get('searchState'),\r\n        // changeView: state.list.get('changeView'),\r\n        // activePage: state.pagination.get('activePage'),\r\n        // totalWorkTime:state.commute.get('totalWorkTime')\r\n    }),\r\n    (dispatch) => ({\r\n        // CommuteActions: bindActionCreators(commuteActions, dispatch),\r\n        // TimeActions: bindActionCreators(timeActions, dispatch),\r\n        // ListActions: bindActionCreators(listActions, dispatch),\r\n        // GetCalList: bindActionCreators(getCalList, dispatch),\r\n        // PaginationActions: bindActionCreators(paginationList, dispatch),\r\n        // StateActions: bindActionCreators(stateActions, dispatch),\r\n        // HoliDayActions: bindActionCreators(holidayActions, dispatch)\r\n    })\r\n)(ChatContainer);*/"]},"metadata":{},"sourceType":"module"}