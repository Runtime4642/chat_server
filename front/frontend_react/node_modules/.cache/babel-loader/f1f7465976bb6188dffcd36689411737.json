{"ast":null,"code":"import _regeneratorRuntime from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\src\\\\containers\\\\list\\\\CommuteStateContainer.js\";\nimport React, { Component } from 'react';\nimport State from 'components/list/State';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as stateActions from 'store/modules/state';\n\nclass CommuteStateContainer extends Component {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.getStateList = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var StateActions, _this$props, token, auth, loginUserNo, keyNo, search;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            StateActions = _this.props.StateActions;\n            _this$props = _this.props, token = _this$props.token, auth = _this$props.auth, loginUserNo = _this$props.loginUserNo;\n            keyNo = null;\n\n            if (sessionStorage.getItem(\"statekeyNo\") !== \"define\") {\n              keyNo = sessionStorage.getItem(\"statekeyNo\");\n              sessionStorage.removeItem(\"statekeyNo\");\n              sessionStorage.setItem(\"statekeyNo\", \"define\");\n            }\n\n            _context.prev = 4;\n\n            if (!(auth === \"ROLE_ADMIN\")) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.next = 8;\n            return StateActions.getCommuteStateList(token);\n\n          case 8:\n            _context.next = 14;\n            break;\n\n          case 10:\n            search = {\n              searchUserNo: loginUserNo,\n              select: true\n            };\n\n            if (!(keyNo === null)) {\n              _context.next = 14;\n              break;\n            }\n\n            _context.next = 14;\n            return StateActions.getCommuteSearchStateList(search, token);\n\n          case 14:\n            _context.next = 19;\n            break;\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](4);\n            console.log(_context.t0);\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[4, 16]]);\n    }));\n  }\n\n  componentWillMount() {\n    this.getStateList();\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          tables = _this$props2.tables,\n          loading = _this$props2.loading,\n          changeView = _this$props2.changeView,\n          language = _this$props2.language;\n    if (changeView !== 'table') return null;\n    if (loading) return null;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(State, {\n      language: language,\n      tables: tables,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default connect(state => ({\n  tables: state.state.get('tables'),\n  changeView: state.state.get('changeView'),\n  loading: state.pender.pending['state/COMMUTE_STATE_LIST'],\n  token: state.login.token,\n  auth: state.login.auth,\n  loginUserNo: state.login.no,\n  language: state.language.language\n}), dispatch => ({\n  StateActions: bindActionCreators(stateActions, dispatch)\n}))(CommuteStateContainer);","map":{"version":3,"sources":["F:/JAVA_WORKSPACE/frontend_react-20191018T023535Z-001/frontend_react/src/containers/list/CommuteStateContainer.js"],"names":["React","Component","State","bindActionCreators","connect","stateActions","CommuteStateContainer","getStateList","StateActions","props","token","auth","loginUserNo","keyNo","sessionStorage","getItem","removeItem","setItem","getCommuteStateList","search","searchUserNo","select","getCommuteSearchStateList","console","log","componentWillMount","render","tables","loading","changeView","language","state","get","pender","pending","login","no","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,YAAZ,MAA8B,qBAA9B;;AAEA,MAAMC,qBAAN,SAAoCL,SAApC,CAA8C;AAAA;AAAA;;AAAA;AAAA;AAAA,SAE1CM,YAF0C,yEAE3B;AAAA;;AAAA;AAAA;AAAA;AACJC,YAAAA,YADI,GACY,KAAI,CAACC,KADjB,CACJD,YADI;AAAA,0BAEwB,KAAI,CAACC,KAF7B,EAEJC,KAFI,eAEJA,KAFI,EAEGC,IAFH,eAEGA,IAFH,EAESC,WAFT,eAESA,WAFT;AAGPC,YAAAA,KAHO,GAGC,IAHD;;AAIX,gBAAGC,cAAc,CAACC,OAAf,CAAuB,YAAvB,MAAyC,QAA5C,EAAsD;AAClDF,cAAAA,KAAK,GAAGC,cAAc,CAACC,OAAf,CAAuB,YAAvB,CAAR;AACAD,cAAAA,cAAc,CAACE,UAAf,CAA0B,YAA1B;AACAF,cAAAA,cAAc,CAACG,OAAf,CAAuB,YAAvB,EAAqC,QAArC;AACH;;AARU;;AAAA,kBAWJN,IAAI,KAAK,YAXL;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAYGH,YAAY,CAACU,mBAAb,CAAiCR,KAAjC,CAZH;;AAAA;AAAA;AAAA;;AAAA;AAeGS,YAAAA,MAfH,GAeY;AACXC,cAAAA,YAAY,EAAER,WADH;AAEXS,cAAAA,MAAM,EAAE;AAFG,aAfZ;;AAAA,kBAmBAR,KAAK,KAAK,IAnBV;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAoBOL,YAAY,CAACc,yBAAb,CAAuCH,MAAvC,EAA+CT,KAA/C,CApBP;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAwBPa,YAAAA,OAAO,CAACC,GAAR;;AAxBO;AAAA;AAAA;AAAA;AAAA;AAAA,KAF2B;AAAA;;AA8B1CC,EAAAA,kBAAkB,GAAG;AACjB,SAAKlB,YAAL;AACH;;AAEDmB,EAAAA,MAAM,GAAG;AAAA,yBAC2C,KAAKjB,KADhD;AAAA,UACGkB,MADH,gBACGA,MADH;AAAA,UACWC,OADX,gBACWA,OADX;AAAA,UACoBC,UADpB,gBACoBA,UADpB;AAAA,UACgCC,QADhC,gBACgCA,QADhC;AAGL,QAAGD,UAAU,KAAK,OAAlB,EAA2B,OAAO,IAAP;AAC3B,QAAGD,OAAH,EAAY,OAAO,IAAP;AAEZ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,QAAQ,EAAEE,QAAjB;AAA2B,MAAA,MAAM,EAAEH,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AA7CyC;;AAgD9C,eAAevB,OAAO,CACjB2B,KAAD,KAAY;AACRJ,EAAAA,MAAM,EAAEI,KAAK,CAACA,KAAN,CAAYC,GAAZ,CAAgB,QAAhB,CADA;AAERH,EAAAA,UAAU,EAAEE,KAAK,CAACA,KAAN,CAAYC,GAAZ,CAAgB,YAAhB,CAFJ;AAGRJ,EAAAA,OAAO,EAAEG,KAAK,CAACE,MAAN,CAAaC,OAAb,CAAqB,0BAArB,CAHD;AAIRxB,EAAAA,KAAK,EAAEqB,KAAK,CAACI,KAAN,CAAYzB,KAJX;AAKRC,EAAAA,IAAI,EAAEoB,KAAK,CAACI,KAAN,CAAYxB,IALV;AAMRC,EAAAA,WAAW,EAAEmB,KAAK,CAACI,KAAN,CAAYC,EANjB;AAORN,EAAAA,QAAQ,EAAEC,KAAK,CAACD,QAAN,CAAeA;AAPjB,CAAZ,CADkB,EAUjBO,QAAD,KAAe;AACX7B,EAAAA,YAAY,EAAEL,kBAAkB,CAACE,YAAD,EAAegC,QAAf;AADrB,CAAf,CAVkB,CAAP,CAab/B,qBAba,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport State from 'components/list/State';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport * as stateActions from 'store/modules/state';\r\n\r\nclass CommuteStateContainer extends Component {\r\n\r\n    getStateList = async() => {\r\n        const {StateActions} = this.props;\r\n        const {token, auth, loginUserNo} = this.props;\r\n        let keyNo = null;\r\n        if(sessionStorage.getItem(\"statekeyNo\") !== \"define\") {\r\n            keyNo = sessionStorage.getItem(\"statekeyNo\");\r\n            sessionStorage.removeItem(\"statekeyNo\");\r\n            sessionStorage.setItem(\"statekeyNo\", \"define\");\r\n        }\r\n\r\n        try {\r\n            if(auth === \"ROLE_ADMIN\") {\r\n                await StateActions.getCommuteStateList(token);\r\n            }\r\n            else{\r\n                const search = {\r\n                    searchUserNo: loginUserNo,\r\n                    select: true\r\n                }\r\n                if(keyNo === null) {\r\n                    await StateActions.getCommuteSearchStateList(search, token);\r\n                }\r\n            }\r\n        } catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.getStateList();\r\n    }\r\n\r\n    render() {\r\n        const { tables, loading, changeView, language} =this.props;\r\n\r\n        if(changeView !== 'table') return null;\r\n        if(loading) return null;\r\n\r\n        return (\r\n            <div>\r\n                <State language={language} tables={tables}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        tables: state.state.get('tables'),\r\n        changeView: state.state.get('changeView'),\r\n        loading: state.pender.pending['state/COMMUTE_STATE_LIST'],\r\n        token: state.login.token,\r\n        auth: state.login.auth,\r\n        loginUserNo: state.login.no,\r\n        language: state.language.language\r\n    }),\r\n    (dispatch) => ({\r\n        StateActions: bindActionCreators(stateActions, dispatch)\r\n    })\r\n)(CommuteStateContainer);"]},"metadata":{},"sourceType":"module"}