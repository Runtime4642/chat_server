{"ast":null,"code":"import _regeneratorRuntime from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\src\\\\containers\\\\workAttitude\\\\WorkAttitudePaginationContainer.js\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Pagination from 'components/list/Pagination';\nimport * as paginationActions from 'store/modules/pagination';\nimport * as workAttitudeActions from 'store/modules/workattitude';\nimport * as listActions from 'store/modules/workattitudecalendarlist';\n\nvar BreakTimePaginationContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BreakTimePaginationContainer, _Component);\n\n  function BreakTimePaginationContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BreakTimePaginationContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BreakTimePaginationContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handlePageChange = function (pageNumber) {\n      var _this$props = _this.props,\n          activePage = _this$props.activePage,\n          PaginationActions = _this$props.PaginationActions;\n      PaginationActions.pageChange({\n        activePage: activePage,\n        pageNumber: pageNumber\n      });\n\n      _this.handleList(pageNumber);\n    };\n\n    _this.handleList =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(pageNumber) {\n        var _this$props2, WorkAttitudeActions, searchFromDate, searchToDate, searchUserNo, name, searchWorkAttitude, _this$props3, token, language, search;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$props2 = _this.props, WorkAttitudeActions = _this$props2.WorkAttitudeActions, searchFromDate = _this$props2.searchFromDate, searchToDate = _this$props2.searchToDate, searchUserNo = _this$props2.searchUserNo, name = _this$props2.name, searchWorkAttitude = _this$props2.searchWorkAttitude;\n                _this$props3 = _this.props, token = _this$props3.token, language = _this$props3.language;\n\n                if (!(searchFromDate === '' && searchToDate === '' && searchUserNo === '' && searchWorkAttitude === '')) {\n                  _context.next = 13;\n                  break;\n                }\n\n                _context.prev = 3;\n                _context.next = 6;\n                return WorkAttitudeActions.getWorkAttitudeList('', pageNumber, token, language);\n\n              case 6:\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](3);\n                console.log(_context.t0);\n\n              case 11:\n                _context.next = 22;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                search = {\n                  searchWorkAttitude: searchWorkAttitude,\n                  searchFromDate: searchFromDate,\n                  searchToDate: searchToDate,\n                  searchUserNo: searchUserNo\n                };\n                _context.next = 17;\n                return WorkAttitudeActions.getWorkAttitudeList(search, pageNumber, token, language);\n\n              case 17:\n                _context.next = 22;\n                break;\n\n              case 19:\n                _context.prev = 19;\n                _context.t1 = _context[\"catch\"](13);\n                console.log(_context.t1);\n\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[3, 8], [13, 19]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handlePage =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var _this$props4, PaginationActions, auth, token, keyNo;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$props4 = _this.props, PaginationActions = _this$props4.PaginationActions, auth = _this$props4.auth, token = _this$props4.token;\n              keyNo = null;\n\n              if (sessionStorage.getItem(\"pagekeyNo\") !== \"define\") {\n                keyNo = sessionStorage.getItem(\"pagekeyNo\");\n                sessionStorage.removeItem(\"pagekeyNo\");\n                sessionStorage.setItem(\"pagekeyNo\", \"define\");\n              }\n\n              _context2.prev = 3;\n\n              if (!(keyNo === null && auth === \"ROLE_ADMIN\")) {\n                _context2.next = 7;\n                break;\n              }\n\n              _context2.next = 7;\n              return PaginationActions.getWorkAttitudeTotal('', token);\n\n            case 7:\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](3);\n              console.log(_context2.t0);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[3, 9]]);\n    }));\n    return _this;\n  }\n\n  _createClass(BreakTimePaginationContainer, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.handlePage();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var PaginationActions = this.props.PaginationActions;\n      PaginationActions.initialize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          activePage = _this$props5.activePage,\n          totalCount = _this$props5.totalCount,\n          changeView = _this$props5.changeView;\n      if (changeView !== 'table') return null;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Pagination, {\n        activePage: activePage,\n        totalCount: totalCount,\n        onChange: this.handlePageChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return BreakTimePaginationContainer;\n}(Component);\n\nexport default connect(function (state) {\n  return {\n    activePage: state.pagination.get(\"activePage\"),\n    totalCount: state.pagination.get(\"totalCount\"),\n    changeView: state.workattitude.get('changeView'),\n    searchWorkAttitude: state.workattitude.get('searchWorkAttitude'),\n    searchFromDate: state.workattitude.get('searchFromDate'),\n    searchToDate: state.workattitude.get('searchToDate'),\n    searchUserNo: state.workattitude.get('searchUserNo'),\n    token: state.login.token,\n    auth: state.login.auth,\n    language: state.language.language\n  };\n}, function (dispatch) {\n  return {\n    PaginationActions: bindActionCreators(paginationActions, dispatch),\n    WorkAttitudeActions: bindActionCreators(workAttitudeActions, dispatch),\n    ListActions: bindActionCreators(listActions, dispatch)\n  };\n})(BreakTimePaginationContainer);","map":{"version":3,"sources":["F:/JAVA_WORKSPACE/frontend_react-20191018T023535Z-001/frontend_react/src/containers/workAttitude/WorkAttitudePaginationContainer.js"],"names":["React","Component","bindActionCreators","connect","Pagination","paginationActions","workAttitudeActions","listActions","BreakTimePaginationContainer","handlePageChange","pageNumber","props","activePage","PaginationActions","pageChange","handleList","WorkAttitudeActions","searchFromDate","searchToDate","searchUserNo","name","searchWorkAttitude","token","language","getWorkAttitudeList","console","log","search","handlePage","auth","keyNo","sessionStorage","getItem","removeItem","setItem","getWorkAttitudeTotal","initialize","totalCount","changeView","state","pagination","get","workattitude","login","dispatch","ListActions"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport Pagination from 'components/list/Pagination';\r\nimport * as paginationActions from 'store/modules/pagination';\r\nimport * as workAttitudeActions from 'store/modules/workattitude';\r\nimport * as listActions from 'store/modules/workattitudecalendarlist';\r\n\r\n\r\nclass BreakTimePaginationContainer extends Component {\r\n\r\n    handlePageChange = (pageNumber) => {\r\n        const { activePage, PaginationActions } = this.props;\r\n\r\n        PaginationActions.pageChange({activePage, pageNumber});\r\n        this.handleList(pageNumber);\r\n    }\r\n\r\n    handleList = async(pageNumber) => {\r\n\r\n        const { WorkAttitudeActions, searchFromDate, searchToDate, searchUserNo, name, searchWorkAttitude } = this.props;\r\n        const { token, language } = this.props;\r\n        if(searchFromDate === '' && searchToDate === '' && searchUserNo === '' && searchWorkAttitude === '') {\r\n            try{\r\n                await WorkAttitudeActions.getWorkAttitudeList('', pageNumber, token, language);\r\n            } catch(e){\r\n                console.log(e);\r\n            }\r\n        }\r\n        else{\r\n            try{\r\n                const search = {\r\n                    searchWorkAttitude, searchFromDate, searchToDate, searchUserNo\r\n                }\r\n\r\n                await WorkAttitudeActions.getWorkAttitudeList(search, pageNumber, token, language);\r\n            } catch(e){\r\n                console.log(e);\r\n            }\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    handlePage = async() => {\r\n        const { PaginationActions, auth, token } = this.props;\r\n        let keyNo = null;\r\n        if(sessionStorage.getItem(\"pagekeyNo\") !== \"define\") {\r\n            keyNo = sessionStorage.getItem(\"pagekeyNo\");\r\n            sessionStorage.removeItem(\"pagekeyNo\");\r\n            sessionStorage.setItem(\"pagekeyNo\", \"define\");\r\n        }\r\n        try{\r\n            // KJS: 알림 리스트 클릭시 Storage의 \"keyNo\"값이 \"define\"이 아닌 다른 값으로 변경됩니다.\r\n            if(keyNo === null && auth === \"ROLE_ADMIN\") {\r\n                await PaginationActions.getWorkAttitudeTotal('', token);\r\n            }\r\n        } catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.handlePage();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { PaginationActions } = this.props;\r\n\r\n        PaginationActions.initialize();\r\n    }\r\n\r\n    render() {\r\n        const { activePage, totalCount,changeView } = this.props;\r\n        if(changeView !== 'table') return null;\r\n        return (\r\n            <div>\r\n                <Pagination activePage={activePage} totalCount={totalCount} onChange={this.handlePageChange}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        activePage: state.pagination.get(\"activePage\"),\r\n        totalCount: state.pagination.get(\"totalCount\"),\r\n        changeView: state.workattitude.get('changeView'),\r\n        searchWorkAttitude: state.workattitude.get('searchWorkAttitude'),\r\n        searchFromDate: state.workattitude.get('searchFromDate'),\r\n        searchToDate: state.workattitude.get('searchToDate'),\r\n        searchUserNo: state.workattitude.get('searchUserNo'),\r\n        token: state.login.token,\r\n        auth: state.login.auth,\r\n        language: state.language.language\r\n    }),\r\n    (dispatch) => ({\r\n        PaginationActions: bindActionCreators(paginationActions, dispatch),\r\n        WorkAttitudeActions: bindActionCreators(workAttitudeActions, dispatch),\r\n        ListActions: bindActionCreators(listActions, dispatch)\r\n    })\r\n)(BreakTimePaginationContainer);"]},"metadata":{},"sourceType":"module"}