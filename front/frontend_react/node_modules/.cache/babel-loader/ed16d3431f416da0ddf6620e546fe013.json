{"ast":null,"code":"import _defineProperty from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\n\nvar _objectSpread2;\n\nimport { createAction, handleActions } from 'redux-actions';\nimport { Map, fromJS } from 'immutable';\nimport { pender } from 'redux-pender';\nimport * as api from '../../lib/api';\nvar INITIALIZE = 'pagination/INITIALIZE';\nvar GET_PAGE = 'pagination/GET_PAGE';\nvar GET_SEARCH_PAGE = 'pagination/GET_SEARCH_PAGE';\nvar PAGE_CHANGE = 'pagination/PAGE_CHANGE';\nvar GET_WORKTIME_TOTAL = 'worktime/GET_WORKTIME_TOATAL';\nvar GET_BREAKTIME_TOTAL = 'breaktime/GET_BREAKTIME_TOTAL';\nvar GET_HOLIDAY_TOTAL = 'holiday/GET_HOLIDAY_TOTAL';\nvar GET_RECORD_TOTAL = 'record/GET_RECORD_TOTAL';\nvar GET_WORK_ATTITUDE_TOTAL = 'workattitude/GET_WORK_ATTITUDE_TOTAL';\nvar GET_SEARCH_RECORD_PAGE = 'record/GET_SEARCH_RECORD_PAGE';\nexport var initialize = createAction(INITIALIZE);\nexport var pageChange = createAction(PAGE_CHANGE);\nexport var getPage = createAction(GET_PAGE, api.getPage);\nexport var getSearchPage = createAction(GET_SEARCH_PAGE, api.getSearchPage);\nexport var getWorkTimeTotal = createAction(GET_WORKTIME_TOTAL, api.getWorkTimeTotal);\nexport var getBreakTimeTotal = createAction(GET_BREAKTIME_TOTAL, api.getBreakTimeTotal);\nexport var getHoliDayTotal = createAction(GET_HOLIDAY_TOTAL, api.getHoliDayTotal);\nexport var getRecordTotal = createAction(GET_RECORD_TOTAL, api.getRecordTotal);\nexport var getWorkAttitudeTotal = createAction(GET_WORK_ATTITUDE_TOTAL, api.getWorkAttitudeTotal);\nexport var getSearchRecordPage = createAction(GET_SEARCH_RECORD_PAGE, api.getSearchRecordPage);\nvar initialState = Map({\n  activePage: 1,\n  totalCount: 0\n});\nexport default handleActions(_objectSpread((_objectSpread2 = {}, _defineProperty(_objectSpread2, INITIALIZE, function (state, action) {\n  return initialState;\n}), _defineProperty(_objectSpread2, PAGE_CHANGE, function (state, action) {\n  var _action$payload = action.payload,\n      activePage = _action$payload.activePage,\n      pageNumber = _action$payload.pageNumber; //console.log(\"page change : \" + activePage + \" \" + pageNumber);\n\n  return state.set('activePage', pageNumber);\n}), _objectSpread2), pender({\n  type: GET_PAGE,\n  onSuccess: function onSuccess(state, action) {\n    //console.log(\"페이징 : \" + action.payload);\n    var totalCount = action.payload.data.data; //console.log(\"totalCount : \" + totalCount);\n\n    return state.set('totalCount', fromJS(totalCount));\n  }\n}), pender({\n  type: GET_SEARCH_PAGE,\n  onSuccess: function onSuccess(state, action) {\n    //console.log(\"GET_SEARCH_PAGE : \" + action.payload);\n    var totalCount = action.payload.data.data; //console.log(\"totalCount : \" + totalCount);\n\n    return state.set('totalCount', fromJS(totalCount));\n  }\n}), pender({\n  type: GET_WORKTIME_TOTAL,\n  onSuccess: function onSuccess(state, action) {\n    //console.log(\"GET_WORKTIME_TOTAL : \" + action.payload);\n    var totalCount = action.payload.data.data; //console.log(\"totalCount : \" + totalCount);\n\n    return state.set('totalCount', fromJS(totalCount));\n  }\n}), pender({\n  type: GET_BREAKTIME_TOTAL,\n  onSuccess: function onSuccess(state, action) {\n    //console.log(\"GET_BREAKTIME_TOTAL : \" + action.payload);\n    var totalCount = action.payload.data.data; //console.log(\"totalCount : \" + totalCount);\n\n    return state.set('totalCount', fromJS(totalCount));\n  }\n}), pender({\n  type: GET_HOLIDAY_TOTAL,\n  onSuccess: function onSuccess(state, action) {\n    //console.log(\"GET_HOLIDAY_TOTAL : \" + action.payload);\n    var totalCount = action.payload.data.data; //console.log(\"totalCount : \" + totalCount);\n\n    return state.set('totalCount', fromJS(totalCount));\n  }\n}), pender({\n  type: GET_RECORD_TOTAL,\n  onSuccess: function onSuccess(state, action) {\n    //console.log(\"GET_RECORD_TOTAL : \" + action.payload);\n    var totalCount = action.payload.data.data; //console.log(\"totalCount : \" + totalCount);\n\n    return state.set('totalCount', fromJS(totalCount));\n  }\n}), pender({\n  type: GET_WORK_ATTITUDE_TOTAL,\n  onSuccess: function onSuccess(state, action) {\n    //console.log(\"GET_WORK_ATTITUDE_TOTAL : \" + action.payload);\n    var totalCount = action.payload.data.data; //console.log(\"totalCount : \" + totalCount);\n\n    return state.set(\"totalCount\", fromJS(totalCount));\n  }\n}), pender({\n  type: GET_SEARCH_RECORD_PAGE,\n  onSuccess: function onSuccess(state, action) {\n    //console.log(\"GET_SERARH_RECORD_PAGE : \" + action.payload);\n    var totalCount = action.payload.data.data; //console.log(\"totalCount : \" + totalCount);\n\n    return state.set(\"totalCount\", fromJS(totalCount));\n  }\n})), initialState);","map":{"version":3,"sources":["F:/JAVA_WORKSPACE/frontend_react-20191018T023535Z-001/frontend_react/src/store/modules/pagination.js"],"names":["createAction","handleActions","Map","fromJS","pender","api","INITIALIZE","GET_PAGE","GET_SEARCH_PAGE","PAGE_CHANGE","GET_WORKTIME_TOTAL","GET_BREAKTIME_TOTAL","GET_HOLIDAY_TOTAL","GET_RECORD_TOTAL","GET_WORK_ATTITUDE_TOTAL","GET_SEARCH_RECORD_PAGE","initialize","pageChange","getPage","getSearchPage","getWorkTimeTotal","getBreakTimeTotal","getHoliDayTotal","getRecordTotal","getWorkAttitudeTotal","getSearchRecordPage","initialState","activePage","totalCount","state","action","payload","pageNumber","set","type","onSuccess","data"],"mappings":"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","sourcesContent":["import {createAction, handleActions} from 'redux-actions';\r\n\r\nimport {Map, fromJS} from 'immutable';\r\nimport {pender} from 'redux-pender';\r\n\r\nimport * as api from '../../lib/api';\r\n\r\nconst INITIALIZE = 'pagination/INITIALIZE';\r\nconst GET_PAGE = 'pagination/GET_PAGE';\r\nconst GET_SEARCH_PAGE = 'pagination/GET_SEARCH_PAGE';\r\nconst PAGE_CHANGE = 'pagination/PAGE_CHANGE';\r\nconst GET_WORKTIME_TOTAL = 'worktime/GET_WORKTIME_TOATAL';\r\nconst GET_BREAKTIME_TOTAL = 'breaktime/GET_BREAKTIME_TOTAL';\r\nconst GET_HOLIDAY_TOTAL = 'holiday/GET_HOLIDAY_TOTAL';\r\nconst GET_RECORD_TOTAL = 'record/GET_RECORD_TOTAL';\r\nconst GET_WORK_ATTITUDE_TOTAL = 'workattitude/GET_WORK_ATTITUDE_TOTAL';\r\nconst GET_SEARCH_RECORD_PAGE = 'record/GET_SEARCH_RECORD_PAGE';\r\n\r\nexport const initialize = createAction(INITIALIZE);\r\nexport const pageChange = createAction(PAGE_CHANGE);\r\nexport const getPage = createAction(GET_PAGE, api.getPage);\r\nexport const getSearchPage = createAction(GET_SEARCH_PAGE, api.getSearchPage);\r\nexport const getWorkTimeTotal = createAction(GET_WORKTIME_TOTAL, api.getWorkTimeTotal);\r\nexport const getBreakTimeTotal = createAction(GET_BREAKTIME_TOTAL, api.getBreakTimeTotal);\r\nexport const getHoliDayTotal = createAction(GET_HOLIDAY_TOTAL, api.getHoliDayTotal);\r\nexport const getRecordTotal = createAction(GET_RECORD_TOTAL, api.getRecordTotal);\r\nexport const getWorkAttitudeTotal = createAction(GET_WORK_ATTITUDE_TOTAL, api.getWorkAttitudeTotal);\r\nexport const getSearchRecordPage = createAction(GET_SEARCH_RECORD_PAGE, api.getSearchRecordPage);\r\n\r\nconst initialState = Map({\r\n    activePage: 1,\r\n    totalCount: 0\r\n});\r\n\r\nexport default handleActions({\r\n    [INITIALIZE]: (state, action) => initialState,\r\n    [PAGE_CHANGE]: (state, action) => {\r\n        const {activePage, pageNumber} = action.payload;\r\n\r\n        //console.log(\"page change : \" + activePage + \" \" + pageNumber);\r\n\r\n        return state.set('activePage', pageNumber);\r\n    },\r\n    ...pender({\r\n        type:GET_PAGE,\r\n        onSuccess: (state, action) => {\r\n            //console.log(\"페이징 : \" + action.payload);\r\n\r\n            const totalCount = action.payload.data.data;\r\n            //console.log(\"totalCount : \" + totalCount);\r\n\r\n            return state.set('totalCount', fromJS(totalCount));\r\n        }\r\n    }),\r\n    ...pender({\r\n        type: GET_SEARCH_PAGE,\r\n        onSuccess: (state, action) => {\r\n            //console.log(\"GET_SEARCH_PAGE : \" + action.payload);\r\n\r\n            const totalCount = action.payload.data.data;\r\n            //console.log(\"totalCount : \" + totalCount);\r\n\r\n            return state.set('totalCount', fromJS(totalCount));\r\n        }\r\n    }),\r\n    ...pender({\r\n        type: GET_WORKTIME_TOTAL,\r\n        onSuccess: (state, action) => {\r\n            //console.log(\"GET_WORKTIME_TOTAL : \" + action.payload);\r\n\r\n            const totalCount = action.payload.data.data;\r\n            //console.log(\"totalCount : \" + totalCount);\r\n\r\n            return state.set('totalCount', fromJS(totalCount));\r\n        }\r\n    }),\r\n    ...pender({\r\n        type: GET_BREAKTIME_TOTAL,\r\n        onSuccess: (state, action) => {\r\n            //console.log(\"GET_BREAKTIME_TOTAL : \" + action.payload);\r\n\r\n            const totalCount = action.payload.data.data;\r\n            //console.log(\"totalCount : \" + totalCount);\r\n\r\n            return state.set('totalCount', fromJS(totalCount));\r\n        }\r\n    }),\r\n    ...pender({\r\n        type: GET_HOLIDAY_TOTAL,\r\n        onSuccess: (state, action) => {\r\n            //console.log(\"GET_HOLIDAY_TOTAL : \" + action.payload);\r\n\r\n            const totalCount = action.payload.data.data;\r\n            //console.log(\"totalCount : \" + totalCount);\r\n\r\n            return state.set('totalCount', fromJS(totalCount));\r\n        }\r\n    }),\r\n    ...pender({\r\n        type: GET_RECORD_TOTAL,\r\n        onSuccess: (state, action) => {\r\n            //console.log(\"GET_RECORD_TOTAL : \" + action.payload);\r\n\r\n            const totalCount = action.payload.data.data;\r\n            //console.log(\"totalCount : \" + totalCount);\r\n\r\n            return state.set('totalCount', fromJS(totalCount));\r\n        }\r\n    }),\r\n    ...pender({\r\n        type: GET_WORK_ATTITUDE_TOTAL,\r\n        onSuccess: (state, action) => {\r\n            //console.log(\"GET_WORK_ATTITUDE_TOTAL : \" + action.payload);\r\n\r\n            const totalCount = action.payload.data.data;\r\n            //console.log(\"totalCount : \" + totalCount);\r\n\r\n            return state.set(\"totalCount\", fromJS(totalCount));\r\n        }\r\n    }),\r\n    ...pender({\r\n        type: GET_SEARCH_RECORD_PAGE,\r\n        onSuccess: (state, action) => {\r\n            //console.log(\"GET_SERARH_RECORD_PAGE : \" + action.payload);\r\n\r\n            const totalCount = action.payload.data.data;\r\n            //console.log(\"totalCount : \" + totalCount);\r\n\r\n            return state.set(\"totalCount\", fromJS(totalCount));\r\n        }\r\n    })\r\n}, initialState)\r\n\r\n"]},"metadata":{},"sourceType":"module"}