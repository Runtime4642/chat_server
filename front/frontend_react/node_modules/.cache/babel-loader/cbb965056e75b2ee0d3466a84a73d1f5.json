{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.Props = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _dec, _class;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _pick = require('lodash/pick');\n\nvar _pick2 = _interopRequireDefault(_pick);\n\nvar _omit = require('lodash/omit');\n\nvar _omit2 = _interopRequireDefault(_omit);\n\nvar _some = require('lodash/some');\n\nvar _some2 = _interopRequireDefault(_some);\n\nvar _tcombReact = require('tcomb-react');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction warn(warning) {\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn(warning); // eslint-disable-line no-console\n  }\n}\n\nvar Props = exports.Props = {\n  children: _tcombReact.t.ReactChildren,\n  column: _tcombReact.t.maybe(_tcombReact.t.Boolean),\n  vAlignContent: _tcombReact.t.maybe(_tcombReact.t.enums.of(['top', 'center', 'bottom'])),\n  hAlignContent: _tcombReact.t.maybe(_tcombReact.t.enums.of(['left', 'center', 'right'])),\n  marginLeft: _tcombReact.t.maybe(_tcombReact.t.union([_tcombReact.t.String, _tcombReact.t.Number])),\n  marginTop: _tcombReact.t.maybe(_tcombReact.t.union([_tcombReact.t.String, _tcombReact.t.Number])),\n  marginRight: _tcombReact.t.maybe(_tcombReact.t.union([_tcombReact.t.String, _tcombReact.t.Number])),\n  marginBottom: _tcombReact.t.maybe(_tcombReact.t.union([_tcombReact.t.String, _tcombReact.t.Number])),\n  grow: _tcombReact.t.maybe(_tcombReact.t.union([_tcombReact.t.Boolean, _tcombReact.t.Number])),\n  shrink: _tcombReact.t.maybe(_tcombReact.t.union([_tcombReact.t.Boolean, _tcombReact.t.Number])),\n  basis: _tcombReact.t.maybe(_tcombReact.t.union([_tcombReact.t.String, _tcombReact.t.Number])),\n  wrap: _tcombReact.t.maybe(_tcombReact.t.Boolean),\n  height: _tcombReact.t.maybe(_tcombReact.t.union([_tcombReact.t.String, _tcombReact.t.Number])),\n  width: _tcombReact.t.maybe(_tcombReact.t.union([_tcombReact.t.String, _tcombReact.t.Number])),\n  className: _tcombReact.t.maybe(_tcombReact.t.String),\n  style: _tcombReact.t.maybe(_tcombReact.t.Object)\n};\n/** React component to abstract over flexbox\n * @param children - flexView content\n * @param column - flex-direction: column\n * @param vAlignContent - align content vertically\n * @param hAlignContent - align content horizontally\n * @param marginLeft - margin-left property (\"auto\" to align self right)\n * @param marginTop - margin-top property (\"auto\" to align self bottom)\n * @param marginRight - margin-right property (\"auto\" to align self left)\n * @param marginBottom - margin-bottom property (\"auto\" to align self top)\n * @param grow property (for parent primary axis)\n * @param shrink - flex-shrink property\n * @param basis - flex-basis property\n * @param wrap - wrap content\n * @param height - height property (for parent secondary axis)\n * @param width - width property (for parent secondary axis)\n */\n\nvar FlexView = (_dec = (0, _tcombReact.props)(Props, {\n  strict: false\n}), _dec(_class = function (_React$Component) {\n  _inherits(FlexView, _React$Component);\n\n  function FlexView() {\n    _classCallCheck(this, FlexView);\n\n    return _possibleConstructorReturn(this, (FlexView.__proto__ || Object.getPrototypeOf(FlexView)).apply(this, arguments));\n  }\n\n  _createClass(FlexView, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.logWarnings();\n    }\n  }, {\n    key: 'logWarnings',\n    value: function logWarnings() {\n      var _props = this.props,\n          basis = _props.basis,\n          shrink = _props.shrink,\n          grow = _props.grow,\n          hAlignContent = _props.hAlignContent,\n          vAlignContent = _props.vAlignContent,\n          children = _props.children,\n          column = _props.column;\n\n      if (basis === 'auto') {\n        warn('basis is \"auto\" by default: forcing it to \"auto\"  will leave \"shrink:true\" as default');\n      }\n\n      if ((shrink === false || shrink === 0) && (grow === true || typeof grow === 'number' && grow > 0)) {\n        warn('passing both \"grow\" and \"shrink={false}\" is a no-op!');\n      }\n\n      if (process.env.NODE_ENV !== 'production' && !_tcombReact.t.Nil.is(children) && !column && hAlignContent === 'center') {\n        var atLeastOneChildHasHMarginAuto = (0, _some2.default)([].concat(children), function (child) {\n          var _ref = _tcombReact.t.Object.is(child) ? child : {},\n              _ref$props = _ref.props,\n              props = _ref$props === undefined ? {} : _ref$props;\n\n          var _props$style = props.style,\n              style = _props$style === undefined ? {} : _props$style;\n          var marginLeft = style.marginLeft || props.marginLeft;\n          var marginRight = style.marginRight || props.marginRight;\n          return marginLeft === 'auto' && marginRight === 'auto';\n        });\n        atLeastOneChildHasHMarginAuto && warn('In a row with hAlignContent=\"center\" there should be no child with marginLeft and marginRight set to \"auto\"\\nhttps://github.com/buildo/react-flexview/issues/30');\n      }\n\n      if (process.env.NODE_ENV !== 'production' && !_tcombReact.t.Nil.is(children) && column && vAlignContent === 'center') {\n        var atLeastOneChildHasVMarginAuto = (0, _some2.default)([].concat(children), function (child) {\n          var _ref2 = _tcombReact.t.Object.is(child) ? child : {},\n              _ref2$props = _ref2.props,\n              props = _ref2$props === undefined ? {} : _ref2$props;\n\n          var _props$style2 = props.style,\n              style = _props$style2 === undefined ? {} : _props$style2;\n          var marginTop = style.marginTop || props.marginTop;\n          var marginBottom = style.marginBottom || props.marginBottom;\n          return marginTop === 'auto' && marginBottom === 'auto';\n        });\n        atLeastOneChildHasVMarginAuto && warn('In a column with vAlignContent=\"center\" there should be no child with marginTop and marginBottom set to \"auto\"\\nhttps://github.com/buildo/react-flexview/issues/30');\n      }\n    }\n  }, {\n    key: 'getGrow',\n    value: function getGrow() {\n      var grow = this.props.grow;\n\n      if (typeof grow === 'number') {\n        return grow;\n      } else if (grow) {\n        return 1;\n      }\n\n      return 0; // default\n    }\n  }, {\n    key: 'getShrink',\n    value: function getShrink() {\n      var _props2 = this.props,\n          shrink = _props2.shrink,\n          basis = _props2.basis;\n\n      if (typeof shrink === 'number') {\n        return shrink;\n      } else if (shrink) {\n        return 1;\n      } else if (shrink === false) {\n        return 0;\n      }\n\n      if (basis && basis !== 'auto') {\n        return 0;\n      }\n\n      return 1; // default\n    }\n  }, {\n    key: 'getBasis',\n    value: function getBasis() {\n      var basis = this.props.basis;\n\n      if (basis) {\n        var suffix = _tcombReact.t.Number.is(basis) || String(parseInt(basis, 10)) === basis ? 'px' : '';\n        return basis + suffix;\n      }\n\n      return 'auto'; // default\n    }\n  }, {\n    key: 'getFlexStyle',\n    value: function getFlexStyle() {\n      var grow = this.getGrow();\n      var shrink = this.getShrink();\n      var basis = this.getBasis();\n      var values = grow + ' ' + shrink + ' ' + basis;\n      return {\n        WebkitBoxFlex: values,\n        MozBoxFlex: values,\n        msFlex: values,\n        WebkitFlex: values,\n        flex: values\n      };\n    }\n  }, {\n    key: 'getStyle',\n    value: function getStyle() {\n      var style = (0, _pick2.default)(this.props, ['width', 'height', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom']);\n      return _extends({}, this.getFlexStyle(), style, this.props.style);\n    }\n  }, {\n    key: 'getContentAlignmentClasses',\n    value: function getContentAlignmentClasses() {\n      var vPrefix = this.props.column ? 'justify-content-' : 'align-content-';\n      var hPrefix = this.props.column ? 'align-content-' : 'justify-content-';\n      var vAlignContentClasses = {\n        top: vPrefix + 'start',\n        center: vPrefix + 'center',\n        bottom: vPrefix + 'end'\n      };\n      var hAlignContentClasses = {\n        left: hPrefix + 'start',\n        center: hPrefix + 'center',\n        right: hPrefix + 'end'\n      };\n      var vAlignContent = vAlignContentClasses[this.props.vAlignContent];\n      var hAlignContent = hAlignContentClasses[this.props.hAlignContent];\n      return (0, _classnames2.default)(vAlignContent, hAlignContent);\n    }\n  }, {\n    key: 'getClasses',\n    value: function getClasses() {\n      var direction = this.props.column && 'flex-column';\n      var contentAlignment = this.getContentAlignmentClasses();\n      var wrap = this.props.wrap && 'flex-wrap';\n      return (0, _classnames2.default)('react-flex-view', direction, contentAlignment, wrap, this.props.className);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var className = this.getClasses();\n      var style = this.getStyle();\n      var props = (0, _omit2.default)(this.props, Object.keys(Props));\n      return _react2.default.createElement('div', _extends({\n        className: className,\n        style: style\n      }, props), this.props.children);\n    }\n  }]);\n\n  return FlexView;\n}(_react2.default.Component)) || _class);\nexports.default = FlexView;","map":null,"metadata":{},"sourceType":"script"}