{"ast":null,"code":"import _regeneratorRuntime from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\src\\\\containers\\\\service\\\\BreakTimeContainer.js\";\nimport React, { Component } from 'react';\nimport BreakTime from 'components/service/BreakTime';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as breaktimeActions from 'store/modules/breaktime';\nimport * as paginationActions from 'store/modules/pagination';\nimport locale from 'locale';\n\nclass BreakTimeContainer extends Component {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n\n    this.handleChangeInput = ({\n      name,\n      value\n    }) => {\n      const BreakTimeActions = this.props.BreakTimeActions;\n      BreakTimeActions.changeInput({\n        name,\n        value\n      });\n    };\n\n    this.handleSubmit = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _this$props, start, end, use, description, activePage, BreakTimeActions, PaginationActions, _this$props2, token, language, breaktime, pageNumber;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _this$props = _this.props, start = _this$props.start, end = _this$props.end, use = _this$props.use, description = _this$props.description, activePage = _this$props.activePage, BreakTimeActions = _this$props.BreakTimeActions, PaginationActions = _this$props.PaginationActions;\n            _this$props2 = _this.props, token = _this$props2.token, language = _this$props2.language;\n            breaktime = {\n              start,\n              end,\n              use,\n              description\n            };\n            pageNumber = 1;\n            PaginationActions.pageChange({\n              activePage,\n              pageNumber\n            });\n            _context.prev = 5;\n            _context.next = 8;\n            return BreakTimeActions.writeBreakTime(breaktime, token, language);\n\n          case 8:\n            _context.next = 10;\n            return BreakTimeActions.getBreakTimeList(pageNumber, token);\n\n          case 10:\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](5);\n            console.log(_context.t0);\n\n          case 15:\n            _this.handleState('newStart', '00:00');\n\n            _this.handleState('newEnd', '00:00');\n\n            _this.handleState('newDescription', '');\n\n            _this.handleState('newUse', 'true');\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[5, 12]]);\n    }));\n  }\n\n  componentDidMount() {\n    const _this$props3 = this.props,\n          BreakTimeActions = _this$props3.BreakTimeActions,\n          language = _this$props3.language;\n    document.title = locale.breakTimeTitle[language]; // BreakTimeActions.initialize(); // 에디터를 초기화합니다.\n  }\n\n  componenetWillMount() {}\n\n  shouldComponentUpdate(nextProps, nextState) {\n    document.title = locale.breakTimeTitle[nextProps.language];\n    return true;\n  }\n\n  handleState(name, value) {\n    const BreakTimeActions = this.props.BreakTimeActions;\n    BreakTimeActions.changeInput({\n      name,\n      value\n    });\n  }\n\n  render() {\n    const handleChangeInput = this.handleChangeInput,\n          handleSubmit = this.handleSubmit;\n    const _this$props4 = this.props,\n          start = _this$props4.start,\n          end = _this$props4.end,\n          use = _this$props4.use,\n          description = _this$props4.description,\n          language = _this$props4.language;\n    return /*#__PURE__*/React.createElement(BreakTime, {\n      start: start,\n      end: end,\n      use: use,\n      description: description,\n      onChangeInput: handleChangeInput,\n      onSubmit: handleSubmit,\n      language: language,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default connect(state => ({\n  start: state.breaktime.get('newStart'),\n  end: state.breaktime.get('newEnd'),\n  use: state.breaktime.get('newUse'),\n  description: state.breaktime.get('newDescription'),\n  activePage: state.pagination.get('activePage'),\n  token: state.login.token,\n  language: state.language.language\n}), dispatch => ({\n  BreakTimeActions: bindActionCreators(breaktimeActions, dispatch),\n  PaginationActions: bindActionCreators(paginationActions, dispatch)\n}))(BreakTimeContainer);","map":{"version":3,"sources":["F:/JAVA_WORKSPACE/frontend_react-20191018T023535Z-001/frontend_react/src/containers/service/BreakTimeContainer.js"],"names":["React","Component","BreakTime","bindActionCreators","connect","breaktimeActions","paginationActions","locale","BreakTimeContainer","handleChangeInput","name","value","BreakTimeActions","props","changeInput","handleSubmit","start","end","use","description","activePage","PaginationActions","token","language","breaktime","pageNumber","pageChange","writeBreakTime","getBreakTimeList","console","log","handleState","componentDidMount","document","title","breakTimeTitle","componenetWillMount","shouldComponentUpdate","nextProps","nextState","render","state","get","pagination","login","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport BreakTime from 'components/service/BreakTime';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport * as breaktimeActions from 'store/modules/breaktime';\r\nimport * as paginationActions from 'store/modules/pagination';\r\nimport locale from 'locale';\r\n\r\nclass BreakTimeContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        const {BreakTimeActions, language} = this.props;\r\n        document.title = locale.breakTimeTitle[language];\r\n        // BreakTimeActions.initialize(); // 에디터를 초기화합니다.\r\n    }\r\n\r\n    componenetWillMount() {\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        document.title = locale.breakTimeTitle[nextProps.language];\r\n\r\n        return true;\r\n    }\r\n\r\n    handleChangeInput = ({name, value}) => {\r\n        const {BreakTimeActions} = this.props;\r\n        BreakTimeActions.changeInput({name, value});\r\n    }\r\n\r\n    handleState(name, value){\r\n        const { BreakTimeActions } = this.props;\r\n\r\n        BreakTimeActions.changeInput({name, value});\r\n    }\r\n\r\n    handleSubmit = async () => {\r\n\r\n        const {start, end, use, description, activePage, BreakTimeActions, PaginationActions} = this.props;\r\n        const { token,language } = this.props;\r\n        const breaktime = {\r\n            start,\r\n            end,\r\n            use,\r\n            description\r\n        }\r\n\r\n        const pageNumber = 1;\r\n\r\n        PaginationActions.pageChange({activePage, pageNumber});\r\n\r\n        try {\r\n            await BreakTimeActions.writeBreakTime(breaktime, token,language);\r\n            await BreakTimeActions.getBreakTimeList(pageNumber, token);\r\n            // BreakTimeActions.initialize(); // 에디터를 초기화합니다.\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n\r\n        this.handleState('newStart', '00:00');\r\n        this.handleState('newEnd', '00:00');\r\n        this.handleState('newDescription', '');\r\n        this.handleState('newUse', 'true');\r\n    }\r\n\r\n    render() {\r\n        const {handleChangeInput, handleSubmit} = this;\r\n        const {start, end, use, description, language} = this.props;\r\n        return (\r\n            <BreakTime\r\n                start={start}\r\n                end={end}\r\n                use={use}\r\n                description={description}\r\n                onChangeInput={handleChangeInput}\r\n                onSubmit={handleSubmit}\r\n                language={language}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        start: state.breaktime.get('newStart'),\r\n        end: state.breaktime.get('newEnd'),\r\n        use: state.breaktime.get('newUse'),\r\n        description: state.breaktime.get('newDescription'),\r\n        activePage: state.pagination.get('activePage'),\r\n        token: state.login.token,\r\n        language: state.language.language\r\n    }),\r\n    (dispatch) => ({\r\n        BreakTimeActions: bindActionCreators(breaktimeActions, dispatch),\r\n        PaginationActions: bindActionCreators(paginationActions, dispatch)\r\n    })\r\n)(BreakTimeContainer);"]},"metadata":{},"sourceType":"module"}