{"ast":null,"code":"import _regeneratorRuntime from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\src\\\\containers\\\\workAttitude\\\\WorkAttitudeListContainer.js\";\nimport React, { Component } from 'react';\nimport WorkAttitudeList from 'components/workAttitude/WorkAttitudeList';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as listActions from 'store/modules/workattitudecalendarlist';\nimport * as workAttitudeActions from 'store/modules/workattitude';\nimport * as paginationActions from 'store/modules/pagination';\nimport * as getCalList from 'store/modules/workattitudecalendarlist';\nimport * as stateActions from 'store/modules/state';\nimport locale from 'locale';\n\nvar WorkAttitudeListContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WorkAttitudeListContainer, _Component);\n\n  function WorkAttitudeListContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WorkAttitudeListContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WorkAttitudeListContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.getList =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _this$props, WorkAttitudeActions, activePage, language, _this$props2, token, auth, loginUserNo, GetCalList, PaginationActions, date, dateString, search, pageNumber;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$props = _this.props, WorkAttitudeActions = _this$props.WorkAttitudeActions, activePage = _this$props.activePage, language = _this$props.language;\n              _this$props2 = _this.props, token = _this$props2.token, auth = _this$props2.auth, loginUserNo = _this$props2.loginUserNo, GetCalList = _this$props2.GetCalList, PaginationActions = _this$props2.PaginationActions;\n              _context.prev = 2;\n\n              if (!(auth === \"ROLE_ADMIN\")) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 6;\n              return WorkAttitudeActions.getWorkAttitudeList('', activePage, token, language);\n\n            case 6:\n              _context.next = 18;\n              break;\n\n            case 8:\n              date = new Date();\n              dateString = new Date(date.getTime() - date.getTimezoneOffset() * 60000).toISOString().split(\"T\")[0].substring(0, 7);\n              search = {\n                searchFromDate: dateString,\n                searchUserNo: loginUserNo,\n                searchWorkAttitude: \"전체\"\n              };\n              pageNumber = 1; //리스트\n\n              _context.next = 14;\n              return PaginationActions.getWorkAttitudeTotal(search, token);\n\n            case 14:\n              _context.next = 16;\n              return WorkAttitudeActions.getWorkAttitudeList(search, pageNumber, token, language);\n\n            case 16:\n              _context.next = 18;\n              return GetCalList.getList(search, token, true);\n\n            case 18:\n              _context.next = 23;\n              break;\n\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](2);\n              console.log(_context.t0);\n\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 20]]);\n    }));\n\n    _this.getAlarmSearchList =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(keyNo) {\n        var _this$props3, WorkAttitudeActions, PaginationActions, token, language, StateActions, pageNumber, search;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this$props3 = _this.props, WorkAttitudeActions = _this$props3.WorkAttitudeActions, PaginationActions = _this$props3.PaginationActions, token = _this$props3.token, language = _this$props3.language, StateActions = _this$props3.StateActions;\n                pageNumber = 1;\n                search = {\n                  keyNo: keyNo\n                };\n                _context2.prev = 3;\n                _context2.next = 6;\n                return StateActions.getWorkAttitudeSearchStateList(search, token);\n\n              case 6:\n                _context2.next = 8;\n                return PaginationActions.getWorkAttitudeTotal(search, token);\n\n              case 8:\n                _context2.next = 10;\n                return WorkAttitudeActions.getWorkAttitudeList(search, pageNumber, token, language);\n\n              case 10:\n                _context2.next = 15;\n                break;\n\n              case 12:\n                _context2.prev = 12;\n                _context2.t0 = _context2[\"catch\"](3);\n                console.log(_context2.t0);\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[3, 12]]);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.updateRead = function (no) {\n      var _this$props4 = _this.props,\n          token = _this$props4.token,\n          auth = _this$props4.auth,\n          WorkAttitudeActions = _this$props4.WorkAttitudeActions;\n      var recordType = \"근태\";\n      WorkAttitudeActions.updateRead(no, auth, recordType, token);\n    };\n\n    _this.handleChangeInput = function (_ref3) {\n      var name = _ref3.name,\n          value = _ref3.value;\n\n      if (name === 'no') {\n        _this.updateRead(value);\n      }\n\n      var WorkAttitudeActions = _this.props.WorkAttitudeActions;\n      WorkAttitudeActions.changeInput({\n        name: name,\n        value: value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(WorkAttitudeListContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var keyNo = null;\n      var language = this.props.language;\n\n      if (sessionStorage.getItem(\"listkeyNo\") !== \"define\") {\n        keyNo = sessionStorage.getItem(\"listkeyNo\");\n        sessionStorage.removeItem(\"listkeyNo\");\n        sessionStorage.setItem(\"listkeyNo\", \"define\");\n      }\n\n      if (keyNo !== null) {\n        this.getAlarmSearchList(keyNo);\n      } else {\n        this.getList();\n      }\n\n      document.title = locale.workAttitudeListTitle[language];\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      document.title = locale.workAttitudeListTitle[nextProps.language];\n      return true;\n    } // (list, calendar)리스트 클릭시 updateRead액션 발생\n    // MongoDB의 key_no와 no가 일치하면 read true로 update\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          tables = _this$props5.tables,\n          loading = _this$props5.loading,\n          badge = _this$props5.badge,\n          changeView = _this$props5.changeView,\n          language = _this$props5.language;\n      var handleChangeInput = this.handleChangeInput;\n      if (loading && tables <= 0) return null;\n      if (changeView !== 'table') return null;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(WorkAttitudeList, {\n        tables: tables,\n        badge: badge,\n        language: language,\n        handleChangeInput: handleChangeInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return WorkAttitudeListContainer;\n}(Component);\n\nexport default connect(function (state) {\n  return {\n    changeView: state.workattitude.get('changeView'),\n    no: state.workattitude.get('no'),\n    tables: state.workattitude.get('tables'),\n    badge: state.workattitude.get('badge'),\n    loading: state.pender.pending['workattitude/WORK_ATTITUDE_LIST'],\n    activePage: state.pagination.get('activePage'),\n    token: state.login.token,\n    language: state.language.language,\n    auth: state.login.auth,\n    loginUserNo: state.login.no\n  };\n}, function (dispatch) {\n  return {\n    WorkAttitudeActions: bindActionCreators(workAttitudeActions, dispatch),\n    ListActions: bindActionCreators(listActions, dispatch),\n    PaginationActions: bindActionCreators(paginationActions, dispatch),\n    GetCalList: bindActionCreators(getCalList, dispatch),\n    StateActions: bindActionCreators(stateActions, dispatch)\n  };\n})(WorkAttitudeListContainer);","map":{"version":3,"sources":["F:/JAVA_WORKSPACE/frontend_react-20191018T023535Z-001/frontend_react/src/containers/workAttitude/WorkAttitudeListContainer.js"],"names":["React","Component","WorkAttitudeList","bindActionCreators","connect","listActions","workAttitudeActions","paginationActions","getCalList","stateActions","locale","WorkAttitudeListContainer","getList","props","WorkAttitudeActions","activePage","language","token","auth","loginUserNo","GetCalList","PaginationActions","getWorkAttitudeList","date","Date","dateString","getTime","getTimezoneOffset","toISOString","split","substring","search","searchFromDate","searchUserNo","searchWorkAttitude","pageNumber","getWorkAttitudeTotal","console","log","getAlarmSearchList","keyNo","StateActions","getWorkAttitudeSearchStateList","updateRead","no","recordType","handleChangeInput","name","value","changeInput","sessionStorage","getItem","removeItem","setItem","document","title","workAttitudeListTitle","nextProps","nextState","tables","loading","badge","changeView","state","workattitude","get","pender","pending","pagination","login","dispatch","ListActions"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport WorkAttitudeList from 'components/workAttitude/WorkAttitudeList';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport * as listActions from 'store/modules/workattitudecalendarlist';\r\nimport * as workAttitudeActions from 'store/modules/workattitude';\r\nimport * as paginationActions from 'store/modules/pagination';\r\nimport * as getCalList from 'store/modules/workattitudecalendarlist';\r\nimport * as stateActions from 'store/modules/state';\r\nimport locale from 'locale';\r\n\r\n\r\nclass WorkAttitudeListContainer extends Component{\r\n\r\n    getList = async() => {\r\n        const { WorkAttitudeActions, activePage, language } = this.props;\r\n        const { token ,auth,loginUserNo,GetCalList, PaginationActions} = this.props;\r\n\r\n        try{if(auth===\"ROLE_ADMIN\"){\r\n            await WorkAttitudeActions.getWorkAttitudeList('', activePage, token, language);\r\n        }\r\n        else{\r\n            let date = new Date();\r\n            let dateString = new Date(date.getTime() - (date.getTimezoneOffset() * 60000 ))\r\n                                .toISOString()\r\n                                .split(\"T\")[0].substring(0,7);\r\n\r\n\r\n                const search = {\r\n                    searchFromDate:dateString,\r\n                    searchUserNo:loginUserNo,\r\n                    searchWorkAttitude:\"전체\"\r\n                }\r\n\r\n                const pageNumber = 1;\r\n\r\n                //리스트\r\n                await PaginationActions.getWorkAttitudeTotal(search, token);\r\n                await WorkAttitudeActions.getWorkAttitudeList(search, pageNumber, token, language);\r\n                //달력\r\n                await GetCalList.getList(search, token, true);\r\n        }\r\n        } catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    getAlarmSearchList = async(keyNo) => {\r\n        const { WorkAttitudeActions, PaginationActions, token, language, StateActions } = this.props;\r\n        const pageNumber = 1\r\n\r\n        const search = {\r\n            keyNo\r\n        }\r\n\r\n        try {\r\n            await StateActions.getWorkAttitudeSearchStateList(search, token);\r\n            await PaginationActions.getWorkAttitudeTotal(search, token);\r\n            await WorkAttitudeActions.getWorkAttitudeList(search, pageNumber, token, language);\r\n        } catch(e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let keyNo = null;\r\n        const {language} = this.props;\r\n        if(sessionStorage.getItem(\"listkeyNo\") !== \"define\") {\r\n            keyNo = sessionStorage.getItem(\"listkeyNo\");\r\n            sessionStorage.removeItem(\"listkeyNo\");\r\n            sessionStorage.setItem(\"listkeyNo\", \"define\");\r\n        }\r\n        if(keyNo !== null) {\r\n            this.getAlarmSearchList(keyNo);\r\n        } else {\r\n            this.getList();\r\n        }\r\n        document.title = locale.workAttitudeListTitle[language];\r\n    }\r\n  \r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        document.title = locale.workAttitudeListTitle[nextProps.language];\r\n        return true;\r\n    }\r\n\r\n    // (list, calendar)리스트 클릭시 updateRead액션 발생\r\n    // MongoDB의 key_no와 no가 일치하면 read true로 update\r\n    updateRead = (no) => {\r\n        const { token, auth, WorkAttitudeActions } = this.props;\r\n        const recordType = \"근태\";\r\n        WorkAttitudeActions.updateRead(no, auth, recordType, token);\r\n    }\r\n    \r\n    handleChangeInput = ({name, value}) => {\r\n        if(name === 'no') {\r\n            this.updateRead(value);\r\n        }\r\n        const { WorkAttitudeActions } = this.props;\r\n        WorkAttitudeActions.changeInput({name, value});\r\n    }\r\n\r\n    render() {\r\n        const { tables, loading, badge,changeView, language } = this.props;\r\n        const { handleChangeInput } = this;\r\n        \r\n        if(loading && tables <= 0) return null;\r\n        if(changeView !== 'table') return null;\r\n        return (\r\n            <div>\r\n                <WorkAttitudeList tables={tables} badge={badge} language={language} handleChangeInput={handleChangeInput}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        changeView: state.workattitude.get('changeView'),\r\n        no: state.workattitude.get('no'),\r\n        tables: state.workattitude.get('tables'),\r\n        badge: state.workattitude.get('badge'),\r\n        loading: state.pender.pending['workattitude/WORK_ATTITUDE_LIST'],\r\n        activePage: state.pagination.get('activePage'),\r\n        token: state.login.token,\r\n        language: state.language.language,\r\n        auth: state.login.auth,\r\n        loginUserNo: state.login.no\r\n    }), \r\n    (dispatch) => ({\r\n        WorkAttitudeActions: bindActionCreators(workAttitudeActions, dispatch),\r\n        ListActions: bindActionCreators(listActions, dispatch),\r\n        PaginationActions: bindActionCreators(paginationActions, dispatch),\r\n        GetCalList: bindActionCreators(getCalList, dispatch),\r\n        StateActions: bindActionCreators(stateActions, dispatch)\r\n    })\r\n)(WorkAttitudeListContainer);"]},"metadata":{},"sourceType":"module"}