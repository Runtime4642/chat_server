{"ast":null,"code":"var _jsxFileName = \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\src\\\\components\\\\Header\\\\Notice\\\\NoticeList.js\";\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { noticeupdateRead } from \"./NoticeListState\";\nimport { CircularProgress, MenuItem } from \"@material-ui/core\";\nimport { Typography } from 'components/Wrappers';\nimport classNames from \"classnames\";\nimport UserAvatar from 'components/UserAvatar';\nimport { Divider } from 'antd';\nimport { click } from 'store/modules/alarm';\n\nclass NoticeList extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  } // 클릭 시 현재 데이터 storage에 저장\n\n\n  handleClick(e, keyNo, day, actor, recordType) {\n    const _this$props = this.props,\n          noticeupdateRead = _this$props.noticeupdateRead,\n          token = _this$props.token,\n          auth = _this$props.auth,\n          click = _this$props.click;\n\n    if (sessionStorage.getItem(\"listkeyNo\") && sessionStorage.getItem(\"statekeyNo\") && sessionStorage.getItem(\"pagekeyNo\")) {\n      sessionStorage.removeItem(\"listkeyNo\");\n      sessionStorage.removeItem(\"statekeyNo\");\n      sessionStorage.removeItem(\"pagekeyNo\");\n\n      if (!sessionStorage.getItem(\"listkeyNo\") && !sessionStorage.getItem(\"statekeyNo\") && !sessionStorage.getItem(\"pagekeyNo\")) {\n        sessionStorage.setItem(\"listkeyNo\", keyNo);\n        sessionStorage.setItem(\"statekeyNo\", keyNo);\n        sessionStorage.setItem(\"pagekeyNo\", keyNo);\n        noticeupdateRead(keyNo, auth, recordType, token);\n      }\n    }\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          tables = _this$props2.tables,\n          isInit = _this$props2.isInit,\n          isLoading = _this$props2.isLoading,\n          language = _this$props2.language;\n    const Notice = tables.map((table, index) => {\n      const _table$toJS = table.toJS(),\n            keyNo = _table$toJS.keyNo,\n            day = _table$toJS.day,\n            actor = _table$toJS.actor,\n            content = _table$toJS.content,\n            contentEn = _table$toJS.contentEn,\n            recordType = _table$toJS.recordType;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Divider, {\n        style: {\n          margin: '8px 0'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(NavLink, {\n        onClick: e => {\n          this.handleClick(e, keyNo, day, actor, recordType);\n        },\n        to: recordType.includes(\"근태 신청\") || recordType.includes(\"근태 수정\") ? \"/app/workAttitude\" : recordType.includes(\"출퇴근 수정\") ? \"/app/commute\" : '#',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        key: index,\n        className: styles.messageNotification,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.messageNotificationSide,\n        style: {\n          width: 48\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(UserAvatar, {\n        color: \"success\",\n        name: recordType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Typography, {\n        size: \"sm\",\n        color: \"textSecondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 33\n        }\n      }, day.substr(5, 10))), /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames(styles.messageNotificationSide, styles.messageNotificationBodySide),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        weight: \"medium\",\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 37\n        }\n      }, actor), /*#__PURE__*/React.createElement(Typography, {\n        color: \"textSecondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 37\n        }\n      }, language === \"en\" ? contentEn : content)))));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, //통신중이며 store 값이 초기화되지 않았으면, 로딩바생성\n    isInit === false && isLoading === true ? /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 26,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }) : //통신 성공했으며, 값이 초기화되면, 알람리스트 개수 비교\n    sessionStorage.getItem(\"alarmnum\") !== tables.size && //알림리스트 개수가 변경되지 않았을 경우 \n    sessionStorage.getItem(\"alarmnum\") !== '0' ? //알림 리스트 개수가 0이 아니면 알림 list 출력\n    Notice : // 알림 리스트 개수가 0개\n    null);\n  }\n\n}\n\nexport default connect(state => ({\n  isInit: state.notice.isInit,\n  isLoading: state.notice.isLoading,\n  tables: state.notice.tables,\n  error: state.notice.error,\n  token: state.login.token,\n  isReading: state.notice.isReading,\n  language: state.language.language,\n  auth: state.login.auth\n}), {\n  noticeupdateRead,\n  click\n})(NoticeList);\n\nconst styles = theme => ({\n  messageNotification: {\n    height: \"auto\",\n    display: \"flex\",\n    alignItems: \"center\",\n    \"&:hover, &:focus\": {\n      backgroundColor: theme.palette.background.light\n    }\n  },\n  messageNotificationSide: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    marginRight: theme.spacing.unit * 2\n  },\n  messageNotificationBodySide: {\n    alignItems: \"flex-start\",\n    marginRight: 0\n  }\n});","map":{"version":3,"sources":["F:/JAVA_WORKSPACE/frontend_react-20191018T023535Z-001/frontend_react/src/components/Header/Notice/NoticeList.js"],"names":["React","Component","NavLink","connect","noticeupdateRead","CircularProgress","MenuItem","Typography","classNames","UserAvatar","Divider","click","NoticeList","constructor","props","handleClick","bind","e","keyNo","day","actor","recordType","token","auth","sessionStorage","getItem","removeItem","setItem","render","tables","isInit","isLoading","language","Notice","map","table","index","toJS","content","contentEn","margin","includes","styles","messageNotification","messageNotificationSide","width","substr","messageNotificationBodySide","size","state","notice","error","login","isReading","theme","height","display","alignItems","backgroundColor","palette","background","light","flexDirection","marginRight","spacing","unit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { noticeupdateRead } from \"./NoticeListState\";\r\nimport { CircularProgress, MenuItem } from \"@material-ui/core\";\r\nimport { Typography } from 'components/Wrappers';\r\nimport classNames from \"classnames\";\r\nimport UserAvatar from 'components/UserAvatar';\r\nimport { Divider } from 'antd';\r\nimport { click } from 'store/modules/alarm';\r\n\r\nclass NoticeList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    // 클릭 시 현재 데이터 storage에 저장\r\n    handleClick(e, keyNo, day, actor, recordType) {\r\n        const { noticeupdateRead, token, auth, click } = this.props;\r\n        if(sessionStorage.getItem(\"listkeyNo\") && sessionStorage.getItem(\"statekeyNo\") && sessionStorage.getItem(\"pagekeyNo\")){\r\n            sessionStorage.removeItem(\"listkeyNo\");\r\n            sessionStorage.removeItem(\"statekeyNo\");\r\n            sessionStorage.removeItem(\"pagekeyNo\");\r\n            if(!sessionStorage.getItem(\"listkeyNo\") && !sessionStorage.getItem(\"statekeyNo\") && !sessionStorage.getItem(\"pagekeyNo\"))\r\n            {\r\n                sessionStorage.setItem(\"listkeyNo\", keyNo);\r\n                sessionStorage.setItem(\"statekeyNo\", keyNo);\r\n                sessionStorage.setItem(\"pagekeyNo\", keyNo);\r\n                noticeupdateRead(keyNo, auth, recordType, token);\r\n            }\r\n        }\r\n    }\r\n\r\n   render() {\r\n    const { tables, isInit, isLoading, language } = this.props;\r\n    \r\n    const Notice = tables.map(\r\n        (table, index) => {\r\n            const{ keyNo, day, actor, content, contentEn, recordType } = table.toJS();\r\n            \r\n            return (\r\n                <div key={index} >\r\n                    <Divider style={{margin: '8px 0'}} />\r\n                    <NavLink\r\n                     onClick={(e) => {this.handleClick(e, keyNo, day, actor, recordType)}} \r\n                        to={\r\n                        (recordType.includes(\"근태 신청\") || recordType.includes(\"근태 수정\")) ?\r\n                        \"/app/workAttitude\" : recordType.includes(\"출퇴근 수정\") ?\r\n                        \"/app/commute\" : '#'\r\n                        }>\r\n                        <MenuItem key={index} className={styles.messageNotification} >\r\n                            <div className={styles.messageNotificationSide} style={{width: 48}}>\r\n                            <UserAvatar color={\"success\"} name={recordType} />\r\n                                <Typography size=\"sm\" color=\"textSecondary\">\r\n                                    {day.substr(5,10)}\r\n                                </Typography>\r\n                            </div>\r\n                            <div\r\n                                className={classNames(\r\n                                    styles.messageNotificationSide,\r\n                                    styles.messageNotificationBodySide\r\n                                )}>\r\n                                    <Typography weight=\"medium\" gutterBottom>\r\n                                        {actor}\r\n                                    </Typography>\r\n                                    <Typography color=\"textSecondary\">\r\n                                        {language === \"en\" ? contentEn : content}\r\n                                    </Typography>     \r\n                            </div>\r\n                        </MenuItem>\r\n                    </NavLink>    \r\n                </div>\r\n            );\r\n        }\r\n    );\r\n        return (\r\n            <div>\r\n                {\r\n                    //통신중이며 store 값이 초기화되지 않았으면, 로딩바생성\r\n                    (isInit === false && isLoading === true) ? \r\n                    <CircularProgress size={26} /> :\r\n                        //통신 성공했으며, 값이 초기화되면, 알람리스트 개수 비교\r\n                        sessionStorage.getItem(\"alarmnum\") !== tables.size &&\r\n                            //알림리스트 개수가 변경되지 않았을 경우 \r\n                            sessionStorage.getItem(\"alarmnum\") !== '0' ?\r\n                                //알림 리스트 개수가 0이 아니면 알림 list 출력\r\n                                Notice :\r\n                                // 알림 리스트 개수가 0개\r\n                                null\r\n                    \r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        isInit: state.notice.isInit,\r\n        isLoading: state.notice.isLoading,\r\n        tables: state.notice.tables,\r\n        error: state.notice.error,\r\n        token: state.login.token,\r\n        isReading: state.notice.isReading,\r\n        language: state.language.language,\r\n        auth: state.login.auth\r\n    }),\r\n    { noticeupdateRead, click }\r\n)(NoticeList);\r\n\r\nconst styles = theme => ({\r\n    messageNotification: {\r\n        height: \"auto\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        \"&:hover, &:focus\": {\r\n          backgroundColor: theme.palette.background.light\r\n        }\r\n    },\r\n    messageNotificationSide: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      marginRight: theme.spacing.unit * 2\r\n    },\r\n    messageNotificationBodySide: {\r\n      alignItems: \"flex-start\",\r\n      marginRight: 0\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}