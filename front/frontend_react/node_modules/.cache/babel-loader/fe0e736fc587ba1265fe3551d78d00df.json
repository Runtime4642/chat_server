{"ast":null,"code":"import _classCallCheck from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\src\\\\components\\\\Header\\\\Time\\\\TimeList.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport * as commuteActions from \"store/modules/commute\";\nimport * as headerActions from \"store/modules/Header\";\nimport * as timeActions from \"store/modules/time\";\nimport { bindActionCreators } from \"redux\";\nimport locale from \"locale\";\nvar timer = null;\nvar ary = [];\n\nvar TimeList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TimeList, _Component);\n\n  function TimeList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TimeList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TimeList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      timeset: \" \"\n    };\n\n    _this.getTime = function () {\n      var hour = moment().format(\"HH\");\n      var minute = moment().format(\"mm\");\n      var second = moment().format(\"ss\");\n      var timeset = \"\".concat(hour > 9 ? hour : \"0\".concat(hour), \":\").concat(minute > 9 ? minute : \"0\".concat(minute), \":\").concat(second > 9 ? second : \"0\".concat(second));\n\n      _this.setState({\n        timeset: timeset\n      });\n    };\n\n    _this.tick = function () {\n      var _this$props = _this.props,\n          endTime = _this$props.endTime,\n          preGoTo = _this$props.preGoTo,\n          preGoOff = _this$props.preGoOff,\n          preHoliDay = _this$props.preHoliDay,\n          language = _this$props.language;\n\n      _this.convertState('time', new Date());\n\n      var now = moment(new Date().getFullYear() + '-' + (new Date().getMonth() + 1) + '-' + new Date().getDate() + \" \" + new Date().getHours() + \":\" + new Date().getMinutes() + \":\" + new Date().getSeconds(), 'YYYY-MM-DD HH:mm:ss');\n      var end = moment(new Date().getFullYear() + '-' + (new Date().getMonth() + 1) + '-' + new Date().getDate() + \" \" + endTime, 'YYYY-MM-DD HH:mm:ss');\n      var night = moment(new Date().getFullYear() + '-' + (new Date().getMonth() + 1) + '-' + (new Date().getDate() + 1) + \" \" + \"00:00:00\", 'YYYY-MM-DD HH:mm:ss');\n\n      if (!preGoTo && preGoOff) {\n        _this.convertState('preGoTo', true);\n      }\n\n      if (now.isoWeekday() === 1 || preHoliDay === true) {\n        _this.convertState('preGoTo', true);\n\n        _this.convertState('preGoOff', true);\n      }\n\n      if (now.isAfter(night)) {\n        //console.log(\"same\");\n        _this.convertState('isNight', true);\n      }\n\n      if (now.isAfter(end)) {\n        //console.log(\"after\");\n        _this.convertState('isGoOff', true);\n\n        _this.convertState('isNigiht', false);\n      }\n\n      if (now.isBefore(end)) {\n        //console.log(\"before\");\n        _this.convertState('isGoOff', false);\n\n        _this.convertState(\"isNight\", false);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(TimeList, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      var cnt = 0;\n      var _this$props2 = this.props,\n          auth = _this$props2.auth,\n          CommuteActions = _this$props2.CommuteActions,\n          token = _this$props2.token,\n          loginUserNo = _this$props2.loginUserNo,\n          TimeActions = _this$props2.TimeActions;\n      var name = \"goto\";\n      var value = false;\n      CommuteActions.changeInput({\n        name: name,\n        value: value\n      });\n      name = \"gooff\";\n      value = false;\n      CommuteActions.changeInput({\n        name: name,\n        value: value\n      });\n      name = \"starttime\";\n      value = \"\";\n      TimeActions.changeInput({\n        name: name,\n        value: value\n      });\n      name = \"endtime\";\n      value = \"\";\n      TimeActions.changeInput({\n        name: name,\n        value: value\n      });\n\n      if (auth === 'ROLE_USER') {\n        timer = setInterval(function () {\n          var _this2$props = _this2.props,\n              endtime = _this2$props.endtime,\n              starttime = _this2$props.starttime,\n              goto = _this2$props.goto,\n              gooff = _this2$props.gooff;\n          cnt++;\n\n          if (starttime === \"\" && goto) {\n            TimeActions.getStartTime(loginUserNo, token);\n          } // //console.log(goto);\n          // //console.log(starttime);\n          // //console.log(endtime);\n          // //console.log(gooff);\n\n\n          if (starttime !== \"\" && endtime === \"\" && gooff) {\n            TimeActions.getTotalWorkTime(loginUserNo, token);\n            TimeActions.getTodayCommuteEndTime(loginUserNo, token);\n            clearInterval(timer);\n          }\n\n          CommuteActions.changeInput({\n            name: 'cnt',\n            value: cnt\n          });\n\n          _this2.tick(); // //console.log(\"인터벌~\");\n\n\n          if (!sessionStorage.getItem(\"id_token\")) {\n            clearInterval(timer);\n          }\n        }, 1000);\n      }\n    }\n  }, {\n    key: \"convertState\",\n    value: function convertState(name, value) {\n      var CommuteActions = this.props.CommuteActions;\n      CommuteActions.stateChange({\n        name: name,\n        value: value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var state = 0; //지각여부\n\n      var late = false;\n      var now = moment().format('HH:mm:ss');\n      var _this$props3 = this.props,\n          totalWorkTime = _this$props3.totalWorkTime,\n          starttime = _this$props3.starttime,\n          time1 = _this$props3.time1,\n          endtime = _this$props3.endtime,\n          goto = _this$props3.goto,\n          breakTimeList = _this$props3.breakTimeList,\n          language = _this$props3.language,\n          CommuteActions = _this$props3.CommuteActions; //console.log(language);\n      ////console.log(starttime);\n      // //console.log(goto);\n      // //console.log(\"랜더\")\n      //console.log(time1);\n\n      var breaktimeboolean = false;\n      var gotoBreakTime = false;\n      var timeset;\n\n      if (starttime === \"\") {\n        timeset = '00:00:00';\n      } else if (starttime !== \"\") {\n        var selectstarttime = moment(time1, \"HH:mm:ss\");\n        var pushnow = moment(now, \"HH:mm:ss\");\n        var pushstarttime = moment(starttime, \"HH:mm:ss\");\n        var timediff = selectstarttime.diff(pushnow, \"seconds\"); // 출근해야하는시간 - 현재시간    양수이면 근무시간 0 출력 음수이면 계산\n\n        var timediff2 = selectstarttime.diff(pushstarttime, \"seconds\"); // 출근해야하는시간 - 출근시간  양수이면 정상출근 음수이면 지각\n        // 정상 출근이면   출근시간 = 출근해야하는시간 \n        // 지각 이면 출근시간 = 출근한 시간\n        // //console.log(timediff);\n\n        if (timediff > 0) {\n          timeset = \"00:00:00\"; //console.log(\"@@\");\n        } else {\n          var secondsDiff; //정상 출근\n\n          if (timediff2 >= 0) {\n            late = false;\n            secondsDiff = pushnow.diff(selectstarttime, \"seconds\");\n          } //지각 출근\n          else {\n              late = true;\n              secondsDiff = pushnow.diff(pushstarttime, \"seconds\");\n            }\n\n          var total = 0;\n          var breakTime = moment(\"00:00\", \"HH:mm:ss\");\n          if (breakTimeList !== \"\" && ary.length === 0) breakTimeList.map(function (items, index) {\n            // console.log(items);\n            ary.push({\n              description: items.description,\n              start: moment(items.start, \"HH:mm:ss\"),\n              end: moment(items.end, \"HH:mm:ss\"),\n              time: moment(items.end, \"HH:mm:ss\").diff(moment(items.start, \"HH:mm:ss\"), \"seconds\")\n            });\n          }); //console.log(ary);\n          // let state=0;\n\n          var breakStartTime = 0;\n          var gotoBreakTimeEnd = 0;\n\n          if (ary.length !== 0) {\n            ary.map(function (items, index) {\n              var statediff = items.start.diff(pushnow, \"seconds\");\n              var statediff2 = items.end.diff(pushnow, \"seconds\"); //출근을 휴게시간 도중에 했을때\n\n              if (items.start.diff(pushstarttime) <= 0 && items.end.diff(pushstarttime) >= 0) {\n                //state=2;\n                gotoBreakTimeEnd = items.end;\n                pushstarttime = items.end;\n                gotoBreakTime = true;\n                console.log(\"@@@\");\n              } //else\n              //휴게시간 지나간\n\n\n              if (statediff2 < 0) {\n                // console.log(\"지나간 휴게시간:\"+items.description);\n                //state=0;\n                //출근시간 이후의 breaktime만\n                if (statediff < 0 && items.start.diff(pushstarttime) > 0) breakTime = breakTime.add(items.time, \"seconds\");\n              } //휴게시간\n              else if (statediff <= 0 && statediff2 >= 0) {\n                  console.log(\"현재는 휴게시간:\" + items.description);\n                  state = 1;\n                  breakStartTime = items.start;\n                } //아직 시간 안된 휴게시간\n              //     else if( statediff>0){\n              //         console.log(\"앞으로의 휴게시간:\"+items.description);\n              //         state=2;\n              //    }\n\n            });\n            var selectTime;\n            if (late) selectTime = pushstarttime;else if (late && gotoBreakTime) selectTime = gotoBreakTimeEnd;else selectTime = selectstarttime;\n\n            if (state === 0) {\n              console.log(\"state0\");\n              total = pushnow.diff(selectTime, \"seconds\"); //console.log(total);\n\n              var _latehour = Math.floor(total / 3600);\n\n              var _latemin = Math.floor((total - _latehour * 3600) / 60);\n\n              var _latesec = total - _latehour * 3600 - _latemin * 60;\n\n              timeset = \"\".concat(_latehour > 9 ? _latehour : \"0\".concat(_latehour), \":\").concat(_latemin > 9 ? _latemin : \"0\".concat(_latemin), \":\").concat(_latesec > 9 ? _latesec : \"0\".concat(_latesec));\n              total = moment(timeset, \"HH:mm:ss\").diff(breakTime); //console.log(total);\n            } else if (state === 1) {\n              console.log(gotoBreakTime);\n              console.log(late);\n              console.log(\"state1\");\n              total = breakStartTime.diff(selectTime, \"seconds\");\n              if (total <= 0) total = 0;else {\n                var _latehour2 = Math.floor(total / 3600);\n\n                var _latemin2 = Math.floor((total - _latehour2 * 3600) / 60);\n\n                var _latesec2 = total - _latehour2 * 3600 - _latemin2 * 60;\n\n                timeset = \"\".concat(_latehour2 > 9 ? _latehour2 : \"0\".concat(_latehour2), \":\").concat(_latemin2 > 9 ? _latemin2 : \"0\".concat(_latemin2), \":\").concat(_latesec2 > 9 ? _latesec2 : \"0\".concat(_latesec2));\n                total = moment(timeset, \"HH:mm:ss\").diff(breakTime);\n              } // console.log(total);\n            } else if (state === 2) {\n              console.log(\"State2\");\n              total = pushnow.diff(gotoBreakTimeEnd, \"seconds\"); //// console.log(total);\n              // console.log(total);  \n\n              if (total <= 0) {\n                total = 0;\n                breaktimeboolean = true;\n              } else {\n                var _latehour3 = Math.floor(total / 3600);\n\n                var _latemin3 = Math.floor((total - _latehour3 * 3600) / 60);\n\n                var _latesec3 = total - _latehour3 * 3600 - _latemin3 * 60;\n\n                timeset = \"\".concat(_latehour3 > 9 ? _latehour3 : \"0\".concat(_latehour3), \":\").concat(_latemin3 > 9 ? _latemin3 : \"0\".concat(_latemin3), \":\").concat(_latesec3 > 9 ? _latesec3 : \"0\".concat(_latesec3));\n                total = moment(timeset, \"HH:mm:ss\").diff(breakTime); // console.log(total);  \n              }\n\n              if (total <= 0) total = 0;\n            } //         if(state==2){\n            //         total=pushnow.diff(pushstarttime, \"seconds\")\n            //         const latehour = Math.floor(total / 3600)\n            //     const latemin = Math.floor((total - (latehour * 3600)) / 60)\n            //     const latesec = (total - (latehour * 3600) - (latemin * 60))\n            //     timeset = `${latehour > 9 ? latehour : `0${latehour}`}:${latemin > 9 ? latemin : `0${latemin}`}:${latesec > 9 ? latesec : `0${latesec}`}`;\n            //     total=moment(timeset, \"HH:mm:ss\").diff(breakTime);     \n            //     console.log(total);\n            // }\n            // console.log(breakTime);\n\n          } //휴게시간이 존재x\n          else {\n              total = pushnow.diff(secondsDiff, \"seconds\");\n            } // console.log(total/1000);\n          //if(state!==2)\n\n\n          total = total / 1000;\n          var latehour = Math.floor(total / 3600);\n          var latemin = Math.floor((total - latehour * 3600) / 60);\n          var latesec = total - latehour * 3600 - latemin * 60;\n          timeset = \"\".concat(latehour > 9 ? latehour : \"0\".concat(latehour), \":\").concat(latemin > 9 ? latemin : \"0\".concat(latemin), \":\").concat(latesec > 9 ? latesec : \"0\".concat(latesec));\n          CommuteActions.changeInput({\n            name: \"totalWorkTime\",\n            value: timeset\n          });\n        }\n      } //     let secondsDiff;\n      //   //  //console.log(timediff2);\n      //     if (timediff2 > 0) {\n      //         const startdt = moment(now, \"HH:mm:ss\");\n      //         const enddt = moment(time1, \"HH:mm:ss\");\n      //         secondsDiff = startdt.diff(enddt, \"seconds\");\n      //     } else {\n      //         const startdt = moment(now, \"HH:mm:ss\");\n      //         const enddt = moment(starttime, \"HH:mm:ss\");\n      //         secondsDiff = startdt.diff(enddt, \"seconds\");\n      //     }\n      //     const latehour = Math.floor(secondsDiff / 3600)\n      //     const latemin = Math.floor((secondsDiff - (latehour * 3600)) / 60)\n      //     const latesec = (secondsDiff - (latehour * 3600) - (latemin * 60))\n      //     if (secondsDiff < 0) {\n      //         timeset = \"00:00:00\"\n      //     } else {\n      //         //   //console.log(\"@@@@\");\n      //         timeset = `${latehour > 9 ? latehour : `0${latehour}`}:${latemin > 9 ? latemin : `0${latemin}`}:${latesec > 9 ? latesec : `0${latesec}`}`;\n      //         }\n      //     }\n      // }\n\n\n      if (endtime === \"\" && state == 1 || state == 2 && breaktimeboolean) return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, timeset, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, locale.timeset[language])));else if (endtime === \"\" && (state == 0 || state == 2)) return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, timeset);else return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, totalWorkTime);\n    }\n  }]);\n\n  return TimeList;\n}(Component);\n\nexport default connect(function (state) {\n  return {\n    loginUserNo: state.login.no,\n    token: state.login.token,\n    auth: state.login.auth,\n    no: state.list.get(\"no\"),\n    lasttime: state.commute.get(\"lasttime\"),\n    cnt: state.commute.get('cnt'),\n    preGoTo: state.commute.get(\"preGoTo\"),\n    preGoOff: state.commute.get(\"preGoOff\"),\n    preHoliDay: state.holiday.get(\"preHoliDay\"),\n    goto: state.commute.get(\"goto\"),\n    gooff: state.commute.get(\"gooff\"),\n    endTime: state.commute.get(\"endTime\"),\n    totalWorkTime: state.time.get(\"totalWorkTime\"),\n    starttime: state.time.get(\"starttime\"),\n    time: state.time.get(\"time\"),\n    start: state.time.get(\"start\"),\n    end: state.time.get(\"end\"),\n    time1: state.time.get(\"time1\"),\n    endtime: state.time.get(\"endtime\"),\n    breakTimeList: state.time.get(\"breakTimeList\"),\n    language: state.language.language\n  };\n}, function (dispatch) {\n  return {\n    CommuteActions: bindActionCreators(commuteActions, dispatch),\n    HeaderActions: bindActionCreators(headerActions, dispatch),\n    TimeActions: bindActionCreators(timeActions, dispatch)\n  };\n})(TimeList);","map":{"version":3,"sources":["F:/JAVA_WORKSPACE/frontend_react-20191018T023535Z-001/frontend_react/src/components/Header/Time/TimeList.js"],"names":["React","Component","connect","moment","commuteActions","headerActions","timeActions","bindActionCreators","locale","timer","ary","TimeList","state","timeset","getTime","hour","format","minute","second","setState","tick","props","endTime","preGoTo","preGoOff","preHoliDay","language","convertState","Date","now","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","end","night","isoWeekday","isAfter","isBefore","cnt","auth","CommuteActions","token","loginUserNo","TimeActions","name","value","changeInput","setInterval","endtime","starttime","goto","gooff","getStartTime","getTotalWorkTime","getTodayCommuteEndTime","clearInterval","sessionStorage","getItem","stateChange","late","totalWorkTime","time1","breakTimeList","breaktimeboolean","gotoBreakTime","selectstarttime","pushnow","pushstarttime","timediff","diff","timediff2","secondsDiff","total","breakTime","length","map","items","index","push","description","start","time","breakStartTime","gotoBreakTimeEnd","statediff","statediff2","console","log","add","selectTime","latehour","Math","floor","latemin","latesec","login","no","list","get","lasttime","commute","holiday","dispatch","HeaderActions"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,KAAKC,cAAZ,MAAgC,uBAAhC;AACA,OAAO,KAAKC,aAAZ,MAA+B,sBAA/B;AACA,OAAO,KAAKC,WAAZ,MAA6B,oBAA7B;AACA,SAAQC,kBAAR,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,IAAIC,KAAK,GAAG,IAAZ;AACA,IAAIC,GAAG,GAAE,EAAT;;IACMC,Q;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,OAAO,EAAE;AADL,K;;UAGRC,O,GAAU,YAAM;AACZ,UAAMC,IAAI,GAAGZ,MAAM,GAAGa,MAAT,CAAgB,IAAhB,CAAb;AACA,UAAMC,MAAM,GAAGd,MAAM,GAAGa,MAAT,CAAgB,IAAhB,CAAf;AACA,UAAME,MAAM,GAAGf,MAAM,GAAGa,MAAT,CAAgB,IAAhB,CAAf;AACA,UAAMH,OAAO,aAAME,IAAI,GAAG,CAAP,GAAWA,IAAX,cAAsBA,IAAtB,CAAN,cAAsCE,MAAM,GAAG,CAAT,GAAaA,MAAb,cAA0BA,MAA1B,CAAtC,cAA4EC,MAAM,GAAG,CAAT,GAAaA,MAAb,cAA0BA,MAA1B,CAA5E,CAAb;;AACA,YAAKC,QAAL,CAAc;AACVN,QAAAA,OAAO,EAAPA;AADU,OAAd;AAGH,K;;UAsDDO,I,GAAO,YAAM;AAAA,wBACkD,MAAKC,KADvD;AAAA,UACFC,OADE,eACFA,OADE;AAAA,UACOC,OADP,eACOA,OADP;AAAA,UACgBC,QADhB,eACgBA,QADhB;AAAA,UAC0BC,UAD1B,eAC0BA,UAD1B;AAAA,UACsCC,QADtC,eACsCA,QADtC;;AAGT,YAAKC,YAAL,CAAkB,MAAlB,EAA0B,IAAIC,IAAJ,EAA1B;;AAEA,UAAMC,GAAG,GAAG1B,MAAM,CAAC,IAAIyB,IAAJ,GAAWE,WAAX,KAA2B,GAA3B,IAAkC,IAAIF,IAAJ,GAAWG,QAAX,KAAwB,CAA1D,IAA+D,GAA/D,GAAsE,IAAIH,IAAJ,GAAWI,OAAX,EAAtE,GAA8F,GAA9F,GAAoG,IAAIJ,IAAJ,GAAWK,QAAX,EAApG,GAA4H,GAA5H,GAAkI,IAAIL,IAAJ,GAAWM,UAAX,EAAlI,GAA4J,GAA5J,GAAkK,IAAIN,IAAJ,GAAWO,UAAX,EAAnK,EAA4L,qBAA5L,CAAlB;AACA,UAAMC,GAAG,GAAGjC,MAAM,CAAC,IAAIyB,IAAJ,GAAWE,WAAX,KAA2B,GAA3B,IAAkC,IAAIF,IAAJ,GAAWG,QAAX,KAAwB,CAA1D,IAA+D,GAA/D,GAAsE,IAAIH,IAAJ,GAAWI,OAAX,EAAtE,GAA8F,GAA9F,GAAoGV,OAArG,EAA8G,qBAA9G,CAAlB;AACA,UAAMe,KAAK,GAAGlC,MAAM,CAAC,IAAIyB,IAAJ,GAAWE,WAAX,KAA2B,GAA3B,IAAkC,IAAIF,IAAJ,GAAWG,QAAX,KAAwB,CAA1D,IAA+D,GAA/D,IAAsE,IAAIH,IAAJ,GAAWI,OAAX,KAAuB,CAA7F,IAAkG,GAAlG,GAAwG,UAAzG,EAAqH,qBAArH,CAApB;;AAGA,UAAI,CAACT,OAAD,IAAYC,QAAhB,EAA0B;AACtB,cAAKG,YAAL,CAAkB,SAAlB,EAA6B,IAA7B;AACH;;AAED,UAAKE,GAAG,CAACS,UAAJ,OAAqB,CAAtB,IAA6Bb,UAAU,KAAK,IAAhD,EAAuD;AACnD,cAAKE,YAAL,CAAkB,SAAlB,EAA6B,IAA7B;;AACA,cAAKA,YAAL,CAAkB,UAAlB,EAA8B,IAA9B;AACH;;AAED,UAAIE,GAAG,CAACU,OAAJ,CAAYF,KAAZ,CAAJ,EAAwB;AACpB;AACA,cAAKV,YAAL,CAAkB,SAAlB,EAA6B,IAA7B;AACH;;AAED,UAAIE,GAAG,CAACU,OAAJ,CAAYH,GAAZ,CAAJ,EAAsB;AAClB;AACA,cAAKT,YAAL,CAAkB,SAAlB,EAA6B,IAA7B;;AACA,cAAKA,YAAL,CAAkB,UAAlB,EAA8B,KAA9B;AACH;;AAED,UAAIE,GAAG,CAACW,QAAJ,CAAaJ,GAAb,CAAJ,EAAuB;AACnB;AACA,cAAKT,YAAL,CAAkB,SAAlB,EAA6B,KAA7B;;AACA,cAAKA,YAAL,CAAkB,SAAlB,EAA6B,KAA7B;AACH;AACJ,K;;;;;;;yCAvFoB;AAAA;;AACjB,UAAIc,GAAG,GAAG,CAAV;AADiB,yBAE+C,KAAKpB,KAFpD;AAAA,UAEVqB,IAFU,gBAEVA,IAFU;AAAA,UAEJC,cAFI,gBAEJA,cAFI;AAAA,UAEYC,KAFZ,gBAEYA,KAFZ;AAAA,UAEmBC,WAFnB,gBAEmBA,WAFnB;AAAA,UAEgCC,WAFhC,gBAEgCA,WAFhC;AAGjB,UAAIC,IAAI,GAAG,MAAX;AACA,UAAIC,KAAK,GAAG,KAAZ;AACAL,MAAAA,cAAc,CAACM,WAAf,CAA2B;AAACF,QAAAA,IAAI,EAAJA,IAAD;AAAOC,QAAAA,KAAK,EAALA;AAAP,OAA3B;AACAD,MAAAA,IAAI,GAAG,OAAP;AACAC,MAAAA,KAAK,GAAG,KAAR;AACAL,MAAAA,cAAc,CAACM,WAAf,CAA2B;AAACF,QAAAA,IAAI,EAAJA,IAAD;AAAOC,QAAAA,KAAK,EAALA;AAAP,OAA3B;AACAD,MAAAA,IAAI,GAAG,WAAP;AACAC,MAAAA,KAAK,GAAG,EAAR;AACAF,MAAAA,WAAW,CAACG,WAAZ,CAAwB;AAACF,QAAAA,IAAI,EAAJA,IAAD;AAAOC,QAAAA,KAAK,EAALA;AAAP,OAAxB;AACAD,MAAAA,IAAI,GAAG,SAAP;AACAC,MAAAA,KAAK,GAAG,EAAR;AACAF,MAAAA,WAAW,CAACG,WAAZ,CAAwB;AAACF,QAAAA,IAAI,EAAJA,IAAD;AAAOC,QAAAA,KAAK,EAALA;AAAP,OAAxB;;AAEA,UAAIN,IAAI,KAAK,WAAb,EAA0B;AACtBjC,QAAAA,KAAK,GAAGyC,WAAW,CAAC,YAAM;AAAA,6BACoB,MAAI,CAAC7B,KADzB;AAAA,cACf8B,OADe,gBACfA,OADe;AAAA,cACNC,SADM,gBACNA,SADM;AAAA,cACKC,IADL,gBACKA,IADL;AAAA,cACWC,KADX,gBACWA,KADX;AAGtBb,UAAAA,GAAG;;AACH,cAAIW,SAAS,KAAK,EAAd,IAAoBC,IAAxB,EAA8B;AAC1BP,YAAAA,WAAW,CAACS,YAAZ,CAAyBV,WAAzB,EAAsCD,KAAtC;AACH,WANqB,CAOtB;AACA;AACA;AACA;;;AACA,cAAIQ,SAAS,KAAK,EAAd,IAAoBD,OAAO,KAAK,EAAhC,IAAsCG,KAA1C,EAAiD;AAC7CR,YAAAA,WAAW,CAACU,gBAAZ,CAA6BX,WAA7B,EAA0CD,KAA1C;AACAE,YAAAA,WAAW,CAACW,sBAAZ,CAAmCZ,WAAnC,EAAgDD,KAAhD;AACAc,YAAAA,aAAa,CAACjD,KAAD,CAAb;AACH;;AAEDkC,UAAAA,cAAc,CAACM,WAAf,CAA2B;AAACF,YAAAA,IAAI,EAAE,KAAP;AAAcC,YAAAA,KAAK,EAAEP;AAArB,WAA3B;;AACA,UAAA,MAAI,CAACrB,IAAL,GAlBsB,CAmBvB;;;AACC,cAAI,CAACuC,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAL,EAAyC;AAErCF,YAAAA,aAAa,CAACjD,KAAD,CAAb;AAEH;AACJ,SAzBkB,EAyBhB,IAzBgB,CAAnB;AA0BH;AACJ;;;iCAEYsC,I,EAAMC,K,EAAO;AAAA,UACfL,cADe,GACG,KAAKtB,KADR,CACfsB,cADe;AAGtBA,MAAAA,cAAc,CAACkB,WAAf,CAA2B;AAACd,QAAAA,IAAI,EAAJA,IAAD;AAAOC,QAAAA,KAAK,EAALA;AAAP,OAA3B;AACH;;;6BAuCQ;AACL,UAAIpC,KAAK,GAAC,CAAV,CADK,CAEL;;AACA,UAAIkD,IAAI,GAAC,KAAT;AACA,UAAIjC,GAAG,GAAG1B,MAAM,GAAGa,MAAT,CAAgB,UAAhB,CAAV;AAJK,yBAK0F,KAAKK,KAL/F;AAAA,UAKE0C,aALF,gBAKEA,aALF;AAAA,UAKiBX,SALjB,gBAKiBA,SALjB;AAAA,UAK4BY,KAL5B,gBAK4BA,KAL5B;AAAA,UAKmCb,OALnC,gBAKmCA,OALnC;AAAA,UAK4CE,IAL5C,gBAK4CA,IAL5C;AAAA,UAKiDY,aALjD,gBAKiDA,aALjD;AAAA,UAK+DvC,QAL/D,gBAK+DA,QAL/D;AAAA,UAKwEiB,cALxE,gBAKwEA,cALxE,EAML;AACA;AACD;AACA;AACA;;AACA,UAAIuB,gBAAgB,GAAC,KAArB;AACA,UAAIC,aAAa,GAAC,KAAlB;AAEC,UAAItD,OAAJ;;AACA,UAAIuC,SAAS,KAAK,EAAlB,EAAsB;AAClBvC,QAAAA,OAAO,GAAG,UAAV;AACH,OAFD,MAEO,IAAIuC,SAAS,KAAK,EAAlB,EAAsB;AAEzB,YAAMgB,eAAe,GAAGjE,MAAM,CAAC6D,KAAD,EAAQ,UAAR,CAA9B;AACA,YAAMK,OAAO,GAAGlE,MAAM,CAAC0B,GAAD,EAAM,UAAN,CAAtB;AACA,YAAIyC,aAAa,GAAGnE,MAAM,CAACiD,SAAD,EAAY,UAAZ,CAA1B;AACA,YAAMmB,QAAQ,GAAGH,eAAe,CAACI,IAAhB,CAAqBH,OAArB,EAA8B,SAA9B,CAAjB,CALyB,CAKwC;;AACjE,YAAMI,SAAS,GAAGL,eAAe,CAACI,IAAhB,CAAqBF,aAArB,EAAoC,SAApC,CAAlB,CANyB,CAMwC;AACA;AACD;AAChE;;AACA,YAAIC,QAAQ,GAAG,CAAf,EAAkB;AACd1D,UAAAA,OAAO,GAAG,UAAV,CADc,CAEd;AACH,SAHD,MAGO;AAEH,cAAI6D,WAAJ,CAFG,CAGH;;AACA,cAAID,SAAS,IAAE,CAAf,EACA;AACIX,YAAAA,IAAI,GAAC,KAAL;AACAY,YAAAA,WAAW,GAACL,OAAO,CAACG,IAAR,CAAaJ,eAAb,EAA8B,SAA9B,CAAZ;AACH,WAJD,CAKA;AALA,eAOA;AACIN,cAAAA,IAAI,GAAC,IAAL;AACAY,cAAAA,WAAW,GAACL,OAAO,CAACG,IAAR,CAAaF,aAAb,EAA4B,SAA5B,CAAZ;AACH;;AAED,cAAIK,KAAK,GAAC,CAAV;AACA,cAAIC,SAAS,GAACzE,MAAM,CAAC,OAAD,EAAU,UAAV,CAApB;AAIA,cAAG8D,aAAa,KAAG,EAAhB,IAAsBvD,GAAG,CAACmE,MAAJ,KAAa,CAAtC,EACAZ,aAAa,CAACa,GAAd,CAAkB,UAACC,KAAD,EAAOC,KAAP,EAAe;AAC7B;AACCtE,YAAAA,GAAG,CAACuE,IAAJ,CAAS;AACLC,cAAAA,WAAW,EAACH,KAAK,CAACG,WADb;AAELC,cAAAA,KAAK,EAAChF,MAAM,CAAC4E,KAAK,CAACI,KAAP,EAAc,UAAd,CAFP;AAGL/C,cAAAA,GAAG,EAACjC,MAAM,CAAC4E,KAAK,CAAC3C,GAAP,EAAY,UAAZ,CAHL;AAILgD,cAAAA,IAAI,EAACjF,MAAM,CAAC4E,KAAK,CAAC3C,GAAP,EAAY,UAAZ,CAAN,CAA8BoC,IAA9B,CAAmCrE,MAAM,CAAC4E,KAAK,CAACI,KAAP,EAAc,UAAd,CAAzC,EAAmE,SAAnE;AAJA,aAAT;AAMJ,WARD,EAtBG,CA+BH;AACA;;AACC,cAAIE,cAAc,GAAC,CAAnB;AACA,cAAIC,gBAAgB,GAAC,CAArB;;AACD,cAAG5E,GAAG,CAACmE,MAAJ,KAAa,CAAhB,EACA;AACInE,YAAAA,GAAG,CAACoE,GAAJ,CAAQ,UAACC,KAAD,EAAOC,KAAP,EAAe;AACpB,kBAAMO,SAAS,GAAGR,KAAK,CAACI,KAAN,CAAYX,IAAZ,CAAiBH,OAAjB,EAA0B,SAA1B,CAAlB;AACA,kBAAMmB,UAAU,GAAGT,KAAK,CAAC3C,GAAN,CAAUoC,IAAV,CAAeH,OAAf,EAAwB,SAAxB,CAAnB,CAFoB,CAIpB;;AACA,kBAAGU,KAAK,CAACI,KAAN,CAAYX,IAAZ,CAAiBF,aAAjB,KAAiC,CAAjC,IAAsCS,KAAK,CAAC3C,GAAN,CAAUoC,IAAV,CAAeF,aAAf,KAA+B,CAAxE,EAA0E;AACtE;AACAgB,gBAAAA,gBAAgB,GAAGP,KAAK,CAAC3C,GAAzB;AACAkC,gBAAAA,aAAa,GAACS,KAAK,CAAC3C,GAApB;AACA+B,gBAAAA,aAAa,GAAC,IAAd;AACAsB,gBAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACH,eAXmB,CAYpB;AACA;;;AACA,kBAAGF,UAAU,GAAC,CAAd,EAAgB;AAChB;AACC;AACA;AACA,oBAAGD,SAAS,GAAC,CAAV,IAAeR,KAAK,CAACI,KAAN,CAAYX,IAAZ,CAAiBF,aAAjB,IAAgC,CAAlD,EACAM,SAAS,GAACA,SAAS,CAACe,GAAV,CAAcZ,KAAK,CAACK,IAApB,EAAyB,SAAzB,CAAV;AACC,eANF,CAQC;AARD,mBASK,IAAGG,SAAS,IAAE,CAAX,IAAgBC,UAAU,IAAE,CAA/B,EAAiC;AACvCC,kBAAAA,OAAO,CAACC,GAAR,CAAY,cAAYX,KAAK,CAACG,WAA9B;AACCtE,kBAAAA,KAAK,GAAC,CAAN;AACAyE,kBAAAA,cAAc,GAACN,KAAK,CAACI,KAArB;AACC,iBA3BmB,CA6BnB;AACJ;AACA;AACA;AAEA;;AACC,aAnCD;AAoCA,gBAAIS,UAAJ;AACA,gBAAG9B,IAAH,EACI8B,UAAU,GAAEtB,aAAZ,CADJ,KAEK,IAAGR,IAAI,IAAEK,aAAT,EACDyB,UAAU,GAACN,gBAAX,CADC,KAGAM,UAAU,GAAExB,eAAZ;;AACL,gBAAGxD,KAAK,KAAG,CAAX,EAAa;AACT6E,cAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACJf,cAAAA,KAAK,GAACN,OAAO,CAACG,IAAR,CAAaoB,UAAb,EAAyB,SAAzB,CAAN,CAFa,CAGb;;AACA,kBAAMC,SAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWpB,KAAK,GAAG,IAAnB,CAAjB;;AACJ,kBAAMqB,QAAO,GAAGF,IAAI,CAACC,KAAL,CAAW,CAACpB,KAAK,GAAIkB,SAAQ,GAAG,IAArB,IAA8B,EAAzC,CAAhB;;AACA,kBAAMI,QAAO,GAAItB,KAAK,GAAIkB,SAAQ,GAAG,IAApB,GAA6BG,QAAO,GAAG,EAAxD;;AACAnF,cAAAA,OAAO,aAAMgF,SAAQ,GAAG,CAAX,GAAeA,SAAf,cAA8BA,SAA9B,CAAN,cAAkDG,QAAO,GAAG,CAAV,GAAcA,QAAd,cAA4BA,QAA5B,CAAlD,cAA2FC,QAAO,GAAG,CAAV,GAAcA,QAAd,cAA4BA,QAA5B,CAA3F,CAAP;AACAtB,cAAAA,KAAK,GAACxE,MAAM,CAACU,OAAD,EAAU,UAAV,CAAN,CAA4B2D,IAA5B,CAAiCI,SAAjC,CAAN,CARiB,CASjB;AAEK,aAXD,MAYK,IAAGhE,KAAK,KAAG,CAAX,EAAa;AACd6E,cAAAA,OAAO,CAACC,GAAR,CAAYvB,aAAZ;AACAsB,cAAAA,OAAO,CAACC,GAAR,CAAY5B,IAAZ;AACA2B,cAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAEAf,cAAAA,KAAK,GAACU,cAAc,CAACb,IAAf,CAAoBoB,UAApB,EAAgC,SAAhC,CAAN;AACA,kBAAGjB,KAAK,IAAE,CAAV,EACAA,KAAK,GAAC,CAAN,CADA,KAEI;AACR,oBAAMkB,UAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWpB,KAAK,GAAG,IAAnB,CAAjB;;AACA,oBAAMqB,SAAO,GAAGF,IAAI,CAACC,KAAL,CAAW,CAACpB,KAAK,GAAIkB,UAAQ,GAAG,IAArB,IAA8B,EAAzC,CAAhB;;AACA,oBAAMI,SAAO,GAAItB,KAAK,GAAIkB,UAAQ,GAAG,IAApB,GAA6BG,SAAO,GAAG,EAAxD;;AACAnF,gBAAAA,OAAO,aAAMgF,UAAQ,GAAG,CAAX,GAAeA,UAAf,cAA8BA,UAA9B,CAAN,cAAkDG,SAAO,GAAG,CAAV,GAAcA,SAAd,cAA4BA,SAA5B,CAAlD,cAA2FC,SAAO,GAAG,CAAV,GAAcA,SAAd,cAA4BA,SAA5B,CAA3F,CAAP;AACAtB,gBAAAA,KAAK,GAACxE,MAAM,CAACU,OAAD,EAAU,UAAV,CAAN,CAA4B2D,IAA5B,CAAiCI,SAAjC,CAAN;AACK,eAda,CAgBnB;AAEE,aAlBI,MAmBA,IAAGhE,KAAK,KAAG,CAAX,EAAa;AACd6E,cAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAf,cAAAA,KAAK,GAACN,OAAO,CAACG,IAAR,CAAac,gBAAb,EAA+B,SAA/B,CAAN,CAFc,CAGf;AACA;;AACC,kBAAGX,KAAK,IAAE,CAAV,EAAY;AACZA,gBAAAA,KAAK,GAAC,CAAN;AACAT,gBAAAA,gBAAgB,GAAC,IAAjB;AACC,eAHD,MAKA;AACC,oBAAM2B,UAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWpB,KAAK,GAAG,IAAnB,CAAjB;;AACL,oBAAMqB,SAAO,GAAGF,IAAI,CAACC,KAAL,CAAW,CAACpB,KAAK,GAAIkB,UAAQ,GAAG,IAArB,IAA8B,EAAzC,CAAhB;;AACA,oBAAMI,SAAO,GAAItB,KAAK,GAAIkB,UAAQ,GAAG,IAApB,GAA6BG,SAAO,GAAG,EAAxD;;AACAnF,gBAAAA,OAAO,aAAMgF,UAAQ,GAAG,CAAX,GAAeA,UAAf,cAA8BA,UAA9B,CAAN,cAAkDG,SAAO,GAAG,CAAV,GAAcA,SAAd,cAA4BA,SAA5B,CAAlD,cAA2FC,SAAO,GAAG,CAAV,GAAcA,SAAd,cAA4BA,SAA5B,CAA3F,CAAP;AACAtB,gBAAAA,KAAK,GAACxE,MAAM,CAACU,OAAD,EAAU,UAAV,CAAN,CAA4B2D,IAA5B,CAAiCI,SAAjC,CAAN,CALI,CAML;AACM;;AACD,kBAAGD,KAAK,IAAE,CAAV,EACAA,KAAK,GAAC,CAAN;AACH,aA/FL,CAgGJ;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAE4B,WA/GvB,CAgHA;AAhHA,eAiHI;AACAA,cAAAA,KAAK,GAACN,OAAO,CAACG,IAAR,CAAaE,WAAb,EAA0B,SAA1B,CAAN;AACH,aAtJE,CAuJJ;AACA;;;AACCC,UAAAA,KAAK,GAAGA,KAAK,GAAE,IAAf;AAEA,cAAMkB,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWpB,KAAK,GAAG,IAAnB,CAAjB;AACA,cAAMqB,OAAO,GAAGF,IAAI,CAACC,KAAL,CAAW,CAACpB,KAAK,GAAIkB,QAAQ,GAAG,IAArB,IAA8B,EAAzC,CAAhB;AACA,cAAMI,OAAO,GAAItB,KAAK,GAAIkB,QAAQ,GAAG,IAApB,GAA6BG,OAAO,GAAG,EAAxD;AACAnF,UAAAA,OAAO,aAAMgF,QAAQ,GAAG,CAAX,GAAeA,QAAf,cAA8BA,QAA9B,CAAN,cAAkDG,OAAO,GAAG,CAAV,GAAcA,OAAd,cAA4BA,OAA5B,CAAlD,cAA2FC,OAAO,GAAG,CAAV,GAAcA,OAAd,cAA4BA,OAA5B,CAA3F,CAAP;AAEAtD,UAAAA,cAAc,CAACM,WAAf,CAA2B;AACvBF,YAAAA,IAAI,EAAC,eADkB;AAEvBC,YAAAA,KAAK,EAACnC;AAFiB,WAA3B;AAIH;AACJ,OAnMI,CAoMD;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACJ;AACA;AAEA;;;AACA,UAAIsC,OAAO,KAAK,EAAZ,IAAgBvC,KAAK,IAAE,CAAvB,IAA2BA,KAAK,IAAE,CAAP,IAAUsD,gBAAzC,EACI,OAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMrD,OAAN,EAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd,EAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKL,MAAM,CAACK,OAAP,CAAea,QAAf,CAAL,CAAL,CAAnB,CAAR,CADJ,KAEK,IAAIyB,OAAO,KAAK,EAAZ,KAAiBvC,KAAK,IAAE,CAAP,IAAUA,KAAK,IAAE,CAAlC,CAAJ,EACD,OAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMC,OAAN,CAAR,CADC,KAGD,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMkD,aAAN,CAAP;AACP;;;;EA7UkB9D,S;;AAgVvB,eAAeC,OAAO,CAClB,UAAAU,KAAK;AAAA,SAAK;AACNiC,IAAAA,WAAW,EAAEjC,KAAK,CAACsF,KAAN,CAAYC,EADnB;AAENvD,IAAAA,KAAK,EAAEhC,KAAK,CAACsF,KAAN,CAAYtD,KAFb;AAGNF,IAAAA,IAAI,EAAE9B,KAAK,CAACsF,KAAN,CAAYxD,IAHZ;AAINyD,IAAAA,EAAE,EAAEvF,KAAK,CAACwF,IAAN,CAAWC,GAAX,CAAe,IAAf,CAJE;AAKNC,IAAAA,QAAQ,EAAE1F,KAAK,CAAC2F,OAAN,CAAcF,GAAd,CAAkB,UAAlB,CALJ;AAMN5D,IAAAA,GAAG,EAAE7B,KAAK,CAAC2F,OAAN,CAAcF,GAAd,CAAkB,KAAlB,CANC;AAON9E,IAAAA,OAAO,EAAEX,KAAK,CAAC2F,OAAN,CAAcF,GAAd,CAAkB,SAAlB,CAPH;AAQN7E,IAAAA,QAAQ,EAAEZ,KAAK,CAAC2F,OAAN,CAAcF,GAAd,CAAkB,UAAlB,CARJ;AASN5E,IAAAA,UAAU,EAAEb,KAAK,CAAC4F,OAAN,CAAcH,GAAd,CAAkB,YAAlB,CATN;AAUNhD,IAAAA,IAAI,EAAEzC,KAAK,CAAC2F,OAAN,CAAcF,GAAd,CAAkB,MAAlB,CAVA;AAWN/C,IAAAA,KAAK,EAAE1C,KAAK,CAAC2F,OAAN,CAAcF,GAAd,CAAkB,OAAlB,CAXD;AAYN/E,IAAAA,OAAO,EAAEV,KAAK,CAAC2F,OAAN,CAAcF,GAAd,CAAkB,SAAlB,CAZH;AAaNtC,IAAAA,aAAa,EAAEnD,KAAK,CAACwE,IAAN,CAAWiB,GAAX,CAAe,eAAf,CAbT;AAcNjD,IAAAA,SAAS,EAAExC,KAAK,CAACwE,IAAN,CAAWiB,GAAX,CAAe,WAAf,CAdL;AAeNjB,IAAAA,IAAI,EAAExE,KAAK,CAACwE,IAAN,CAAWiB,GAAX,CAAe,MAAf,CAfA;AAgBNlB,IAAAA,KAAK,EAAEvE,KAAK,CAACwE,IAAN,CAAWiB,GAAX,CAAe,OAAf,CAhBD;AAiBNjE,IAAAA,GAAG,EAAExB,KAAK,CAACwE,IAAN,CAAWiB,GAAX,CAAe,KAAf,CAjBC;AAkBNrC,IAAAA,KAAK,EAAEpD,KAAK,CAACwE,IAAN,CAAWiB,GAAX,CAAe,OAAf,CAlBD;AAmBNlD,IAAAA,OAAO,EAAEvC,KAAK,CAACwE,IAAN,CAAWiB,GAAX,CAAe,SAAf,CAnBH;AAoBNpC,IAAAA,aAAa,EAACrD,KAAK,CAACwE,IAAN,CAAWiB,GAAX,CAAe,eAAf,CApBR;AAqBN3E,IAAAA,QAAQ,EAAEd,KAAK,CAACc,QAAN,CAAeA;AArBnB,GAAL;AAAA,CADa,EAwBlB,UAAA+E,QAAQ;AAAA,SAAK;AACT9D,IAAAA,cAAc,EAAEpC,kBAAkB,CAACH,cAAD,EAAiBqG,QAAjB,CADzB;AAETC,IAAAA,aAAa,EAAEnG,kBAAkB,CAACF,aAAD,EAAgBoG,QAAhB,CAFxB;AAGT3D,IAAAA,WAAW,EAAEvC,kBAAkB,CAACD,WAAD,EAAcmG,QAAd;AAHtB,GAAL;AAAA,CAxBU,CAAP,CA8Bb9F,QA9Ba,CAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport * as commuteActions from \"store/modules/commute\";\r\nimport * as headerActions from \"store/modules/Header\";\r\nimport * as timeActions from \"store/modules/time\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport locale from \"locale\";\r\nlet timer = null;\r\nlet ary= [];\r\nclass TimeList extends Component {\r\n    state = {\r\n        timeset: \" \"\r\n    };\r\n    getTime = () => {\r\n        const hour = moment().format(\"HH\");\r\n        const minute = moment().format(\"mm\");\r\n        const second = moment().format(\"ss\");\r\n        const timeset = `${hour > 9 ? hour : `0${hour}`}:${minute > 9 ? minute : `0${minute}`}:${second > 9 ? second : `0${second}`}`;\r\n        this.setState({\r\n            timeset\r\n        });\r\n    };\r\n\r\n    componentWillMount() {\r\n        let cnt = 0;\r\n        const {auth, CommuteActions, token, loginUserNo, TimeActions} = this.props;\r\n        let name = \"goto\";\r\n        let value = false;\r\n        CommuteActions.changeInput({name, value});\r\n        name = \"gooff\";\r\n        value = false;\r\n        CommuteActions.changeInput({name, value});\r\n        name = \"starttime\"\r\n        value = \"\";\r\n        TimeActions.changeInput({name, value});\r\n        name = \"endtime\"\r\n        value = \"\";\r\n        TimeActions.changeInput({name, value});\r\n\r\n        if (auth === 'ROLE_USER') {\r\n            timer = setInterval(() => {\r\n                const {endtime, starttime, goto, gooff} = this.props;\r\n\r\n                cnt++;\r\n                if (starttime === \"\" && goto) {\r\n                    TimeActions.getStartTime(loginUserNo, token);\r\n                }\r\n                // //console.log(goto);\r\n                // //console.log(starttime);\r\n                // //console.log(endtime);\r\n                // //console.log(gooff);\r\n                if (starttime !== \"\" && endtime === \"\" && gooff) {\r\n                    TimeActions.getTotalWorkTime(loginUserNo, token);\r\n                    TimeActions.getTodayCommuteEndTime(loginUserNo, token);\r\n                    clearInterval(timer);\r\n                }\r\n\r\n                CommuteActions.changeInput({name: 'cnt', value: cnt});\r\n                this.tick();\r\n               // //console.log(\"인터벌~\");\r\n                if (!sessionStorage.getItem(\"id_token\")) {\r\n\r\n                    clearInterval(timer);\r\n\r\n                }\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    convertState(name, value) {\r\n        const {CommuteActions} = this.props;\r\n\r\n        CommuteActions.stateChange({name, value});\r\n    }\r\n\r\n    tick = () => {\r\n        const {endTime, preGoTo, preGoOff, preHoliDay, language} = this.props;\r\n\r\n        this.convertState('time', new Date());\r\n\r\n        const now = moment(new Date().getFullYear() + '-' + (new Date().getMonth() + 1) + '-' + (new Date().getDate()) + \" \" + new Date().getHours() + \":\" + new Date().getMinutes() + \":\" + new Date().getSeconds(), 'YYYY-MM-DD HH:mm:ss');\r\n        const end = moment(new Date().getFullYear() + '-' + (new Date().getMonth() + 1) + '-' + (new Date().getDate()) + \" \" + endTime, 'YYYY-MM-DD HH:mm:ss');\r\n        const night = moment(new Date().getFullYear() + '-' + (new Date().getMonth() + 1) + '-' + (new Date().getDate() + 1) + \" \" + \"00:00:00\", 'YYYY-MM-DD HH:mm:ss')\r\n\r\n\r\n        if (!preGoTo && preGoOff) {\r\n            this.convertState('preGoTo', true);\r\n        }\r\n\r\n        if ((now.isoWeekday() === 1) || (preHoliDay === true)) {\r\n            this.convertState('preGoTo', true);\r\n            this.convertState('preGoOff', true);\r\n        }\r\n\r\n        if (now.isAfter(night)) {\r\n            //console.log(\"same\");\r\n            this.convertState('isNight', true);\r\n        }\r\n\r\n        if (now.isAfter(end)) {\r\n            //console.log(\"after\");\r\n            this.convertState('isGoOff', true);\r\n            this.convertState('isNigiht', false);\r\n        }\r\n\r\n        if (now.isBefore(end)) {\r\n            //console.log(\"before\");\r\n            this.convertState('isGoOff', false);\r\n            this.convertState(\"isNight\", false);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let state=0;\r\n        //지각여부\r\n        let late=false;\r\n        let now = moment().format('HH:mm:ss');\r\n        const {totalWorkTime, starttime, time1, endtime, goto,breakTimeList,language,CommuteActions} = this.props;\r\n        //console.log(language);\r\n        ////console.log(starttime);\r\n       // //console.log(goto);\r\n       // //console.log(\"랜더\")\r\n       //console.log(time1);\r\n       let breaktimeboolean=false;\r\n       let gotoBreakTime=false;\r\n\r\n        let timeset;\r\n        if (starttime === \"\") {\r\n            timeset = '00:00:00';\r\n        } else if (starttime !== \"\") {\r\n\r\n            const selectstarttime = moment(time1, \"HH:mm:ss\");\r\n            const pushnow = moment(now, \"HH:mm:ss\");\r\n            let pushstarttime = moment(starttime, \"HH:mm:ss\");\r\n            const timediff = selectstarttime.diff(pushnow, \"seconds\");       // 출근해야하는시간 - 현재시간    양수이면 근무시간 0 출력 음수이면 계산\r\n            const timediff2 = selectstarttime.diff(pushstarttime, \"seconds\");// 출근해야하는시간 - 출근시간  양수이면 정상출근 음수이면 지각\r\n                                                                             // 정상 출근이면   출근시간 = 출근해야하는시간 \r\n                                                                            // 지각 이면 출근시간 = 출근한 시간\r\n            // //console.log(timediff);\r\n            if (timediff > 0) {\r\n                timeset = \"00:00:00\";\r\n                //console.log(\"@@\");\r\n            } else {\r\n\r\n                let secondsDiff;\r\n                //정상 출근\r\n                if (timediff2>=0)\r\n                {\r\n                    late=false;\r\n                    secondsDiff=pushnow.diff(selectstarttime, \"seconds\");\r\n                }\r\n                //지각 출근\r\n                else\r\n                {\r\n                    late=true;\r\n                    secondsDiff=pushnow.diff(pushstarttime, \"seconds\");\r\n                }\r\n\r\n                let total=0; \r\n                let breakTime=moment(\"00:00\", \"HH:mm:ss\"); \r\n                \r\n\r\n\r\n                if(breakTimeList!==\"\" && ary.length===0)\r\n                breakTimeList.map((items,index)=>{\r\n                    // console.log(items);\r\n                     ary.push({\r\n                         description:items.description,\r\n                         start:moment(items.start, \"HH:mm:ss\"), \r\n                         end:moment(items.end, \"HH:mm:ss\"),\r\n                         time:moment(items.end, \"HH:mm:ss\").diff(moment(items.start, \"HH:mm:ss\"),\"seconds\")\r\n                     })\r\n                })\r\n                //console.log(ary);\r\n                // let state=0;\r\n                 let breakStartTime=0;\r\n                 let gotoBreakTimeEnd=0;\r\n                if(ary.length!==0)\r\n                {\r\n                    ary.map((items,index)=>{\r\n                       const statediff = items.start.diff(pushnow, \"seconds\");\r\n                       const statediff2 = items.end.diff(pushnow, \"seconds\");\r\n                       \r\n                       //출근을 휴게시간 도중에 했을때\r\n                       if(items.start.diff(pushstarttime)<=0 && items.end.diff(pushstarttime)>=0){\r\n                           //state=2;\r\n                           gotoBreakTimeEnd = items.end;\r\n                           pushstarttime=items.end;\r\n                           gotoBreakTime=true;\r\n                           console.log(\"@@@\");\r\n                       }\r\n                       //else\r\n                       //휴게시간 지나간\r\n                       if(statediff2<0){\r\n                       // console.log(\"지나간 휴게시간:\"+items.description);\r\n                        //state=0;\r\n                        //출근시간 이후의 breaktime만\r\n                        if(statediff<0 && items.start.diff(pushstarttime)>0)\r\n                        breakTime=breakTime.add(items.time,\"seconds\");\r\n                        }\r\n\r\n                        //휴게시간\r\n                       else if(statediff<=0 && statediff2>=0){\r\n                      console.log(\"현재는 휴게시간:\"+items.description);\r\n                       state=1;\r\n                       breakStartTime=items.start;\r\n                       }\r\n\r\n                        //아직 시간 안된 휴게시간\r\n                    //     else if( statediff>0){\r\n                    //         console.log(\"앞으로의 휴게시간:\"+items.description);\r\n                    //         state=2;\r\n                           \r\n                    //    }\r\n                    })\r\n                    let selectTime;\r\n                    if(late)\r\n                        selectTime= pushstarttime;\r\n                    else if(late&&gotoBreakTime)\r\n                        selectTime=gotoBreakTimeEnd;\r\n                    else\r\n                         selectTime= selectstarttime;\r\n                    if(state===0){\r\n                        console.log(\"state0\");\r\n                    total=pushnow.diff(selectTime, \"seconds\")\r\n                    //console.log(total);\r\n                    const latehour = Math.floor(total / 3600)\r\n                const latemin = Math.floor((total - (latehour * 3600)) / 60)\r\n                const latesec = (total - (latehour * 3600) - (latemin * 60))\r\n                timeset = `${latehour > 9 ? latehour : `0${latehour}`}:${latemin > 9 ? latemin : `0${latemin}`}:${latesec > 9 ? latesec : `0${latesec}`}`;\r\n                total=moment(timeset, \"HH:mm:ss\").diff(breakTime);     \r\n                //console.log(total);\r\n                    \r\n                    }\r\n                    else if(state===1){\r\n                        console.log(gotoBreakTime);\r\n                        console.log(late);\r\n                        console.log(\"state1\");\r\n                       \r\n                        total=breakStartTime.diff(selectTime, \"seconds\")\r\n                        if(total<=0)\r\n                        total=0;\r\n                        else{\r\n                    const latehour = Math.floor(total / 3600)\r\n                    const latemin = Math.floor((total - (latehour * 3600)) / 60)\r\n                    const latesec = (total - (latehour * 3600) - (latemin * 60))\r\n                    timeset = `${latehour > 9 ? latehour : `0${latehour}`}:${latemin > 9 ? latemin : `0${latemin}`}:${latesec > 9 ? latesec : `0${latesec}`}`;\r\n                    total=moment(timeset, \"HH:mm:ss\").diff(breakTime);     \r\n                        }\r\n                   \r\n                   // console.log(total);\r\n                    \r\n                    }\r\n                    else if(state===2){\r\n                        console.log(\"State2\")\r\n                        total=pushnow.diff(gotoBreakTimeEnd, \"seconds\");\r\n                       //// console.log(total);\r\n                       // console.log(total);  \r\n                        if(total<=0){\r\n                        total=0;\r\n                        breaktimeboolean=true;\r\n                        }\r\n                        else\r\n                        {\r\n                         const latehour = Math.floor(total / 3600)\r\n                    const latemin = Math.floor((total - (latehour * 3600)) / 60)\r\n                    const latesec = (total - (latehour * 3600) - (latemin * 60))\r\n                    timeset = `${latehour > 9 ? latehour : `0${latehour}`}:${latemin > 9 ? latemin : `0${latemin}`}:${latesec > 9 ? latesec : `0${latesec}`}`;\r\n                    total=moment(timeset, \"HH:mm:ss\").diff(breakTime);   \r\n                   // console.log(total);  \r\n                        }\r\n                        if(total<=0)\r\n                        total=0;\r\n                    }\r\n            //         if(state==2){\r\n            //         total=pushnow.diff(pushstarttime, \"seconds\")\r\n                    \r\n                    \r\n                    \r\n            //         const latehour = Math.floor(total / 3600)\r\n            //     const latemin = Math.floor((total - (latehour * 3600)) / 60)\r\n            //     const latesec = (total - (latehour * 3600) - (latemin * 60))\r\n            //     timeset = `${latehour > 9 ? latehour : `0${latehour}`}:${latemin > 9 ? latemin : `0${latemin}`}:${latesec > 9 ? latesec : `0${latesec}`}`;\r\n            //     total=moment(timeset, \"HH:mm:ss\").diff(breakTime);     \r\n            //     console.log(total);\r\n            // }\r\n           // console.log(breakTime);\r\n\r\n                                      }\r\n                //휴게시간이 존재x\r\n                else{\r\n                    total=pushnow.diff(secondsDiff, \"seconds\");\r\n                }\r\n               // console.log(total/1000);\r\n               //if(state!==2)\r\n                total = total /1000;\r\n              \r\n                const latehour = Math.floor(total / 3600)\r\n                const latemin = Math.floor((total - (latehour * 3600)) / 60)\r\n                const latesec = (total - (latehour * 3600) - (latemin * 60))\r\n                timeset = `${latehour > 9 ? latehour : `0${latehour}`}:${latemin > 9 ? latemin : `0${latemin}`}:${latesec > 9 ? latesec : `0${latesec}`}`;\r\n                \r\n                CommuteActions.changeInput({\r\n                    name:\"totalWorkTime\",\r\n                    value:timeset\r\n                })\r\n            }\r\n        }\r\n            //     let secondsDiff;\r\n            //   //  //console.log(timediff2);\r\n            //     if (timediff2 > 0) {\r\n            //         const startdt = moment(now, \"HH:mm:ss\");\r\n            //         const enddt = moment(time1, \"HH:mm:ss\");\r\n            //         secondsDiff = startdt.diff(enddt, \"seconds\");\r\n\r\n\r\n            //     } else {\r\n            //         const startdt = moment(now, \"HH:mm:ss\");\r\n            //         const enddt = moment(starttime, \"HH:mm:ss\");\r\n            //         secondsDiff = startdt.diff(enddt, \"seconds\");\r\n\r\n                    \r\n            //     }\r\n            //     const latehour = Math.floor(secondsDiff / 3600)\r\n            //     const latemin = Math.floor((secondsDiff - (latehour * 3600)) / 60)\r\n            //     const latesec = (secondsDiff - (latehour * 3600) - (latemin * 60))\r\n\r\n            //     if (secondsDiff < 0) {\r\n            //         timeset = \"00:00:00\"\r\n            //     } else {\r\n            //         //   //console.log(\"@@@@\");\r\n            //         timeset = `${latehour > 9 ? latehour : `0${latehour}`}:${latemin > 9 ? latemin : `0${latemin}`}:${latesec > 9 ? latesec : `0${latesec}`}`;\r\n        //         }\r\n        //     }\r\n\r\n        // }\r\n        if (endtime === \"\"&&state==1||(state==2&&breaktimeboolean))\r\n            return (<div>{timeset}<br/><div><h6>{locale.timeset[language]}</h6></div></div>);\r\n        else if (endtime === \"\"&&(state==0||state==2))\r\n            return (<div>{timeset}</div>);\r\n        else\r\n            return <div>{totalWorkTime}</div>;\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        loginUserNo: state.login.no,\r\n        token: state.login.token,\r\n        auth: state.login.auth,\r\n        no: state.list.get(\"no\"),\r\n        lasttime: state.commute.get(\"lasttime\"),\r\n        cnt: state.commute.get('cnt'),\r\n        preGoTo: state.commute.get(\"preGoTo\"),\r\n        preGoOff: state.commute.get(\"preGoOff\"),\r\n        preHoliDay: state.holiday.get(\"preHoliDay\"),\r\n        goto: state.commute.get(\"goto\"),\r\n        gooff: state.commute.get(\"gooff\"),\r\n        endTime: state.commute.get(\"endTime\"),\r\n        totalWorkTime: state.time.get(\"totalWorkTime\"),\r\n        starttime: state.time.get(\"starttime\"),\r\n        time: state.time.get(\"time\"),\r\n        start: state.time.get(\"start\"),\r\n        end: state.time.get(\"end\"),\r\n        time1: state.time.get(\"time1\"),\r\n        endtime: state.time.get(\"endtime\"),\r\n        breakTimeList:state.time.get(\"breakTimeList\"),\r\n        language: state.language.language\r\n    }),\r\n    dispatch => ({\r\n        CommuteActions: bindActionCreators(commuteActions, dispatch),\r\n        HeaderActions: bindActionCreators(headerActions, dispatch),\r\n        TimeActions: bindActionCreators(timeActions, dispatch)\r\n\r\n    })\r\n)(TimeList);"]},"metadata":{},"sourceType":"module"}