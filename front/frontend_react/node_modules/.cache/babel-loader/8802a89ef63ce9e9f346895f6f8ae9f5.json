{"ast":null,"code":"import _classCallCheck from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\src\\\\components\\\\chat\\\\chat.js\";\nimport React, { Component } from 'react';\nimport { Modal, Button, Row, Col } from 'react-bootstrap';\nimport { Input } from 'antd';\nimport moment from 'moment';\nimport locale from 'locale';\nimport './chat.css';\n\nvar chat =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(chat, _Component);\n\n  function chat(props, context) {\n    var _this;\n\n    _classCallCheck(this, chat);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(chat).call(this, props, context));\n\n    _this.showModal = function () {//this.props.onChangeInput({name:'modal', value:true});\n    };\n\n    _this.handleOk = function (e) {\n      var onSubmit = _this.props.onSubmit;\n      onSubmit();\n\n      _this.props.onChangeInput({\n        name: 'modal',\n        value: false\n      });\n\n      _this.props.onChangeInput({\n        name: 'editDisabled',\n        value: true\n      });\n    };\n\n    _this.handleEdit = function (e) {\n      _this.props.onChangeInput({\n        name: 'editDisabled',\n        value: false\n      });\n    };\n\n    _this.handleRemove = function (e) {\n      var _this$props = _this.props,\n          onRemove = _this$props.onRemove,\n          use = _this$props.use,\n          language = _this$props.language;\n\n      if (String(use) === 'true') {\n        _this.setState({\n          show: false,\n          message: '사용하고 있는 휴게 시간입니다.'\n        });\n\n        if (language === \"en\") {\n          _this.setState({\n            message: 'This is the rest hours you\\'re using'\n          });\n        }\n\n        return;\n      }\n\n      onRemove();\n\n      _this.props.onChangeInput({\n        name: 'modal',\n        value: false\n      });\n\n      _this.props.onChangeInput({\n        name: 'editDisabled',\n        value: true\n      });\n    };\n\n    _this.handleCancel = function (e) {\n      _this.props.onChangeInput({\n        name: 'editDisabled',\n        value: true\n      });\n\n      _this.props.onChangeInput({\n        name: 'modal',\n        value: false\n      });\n\n      _this.props.onChangeInput({\n        name: 'no',\n        value: 0\n      });\n\n      _this.setState({\n        show: true,\n        message: ''\n      });\n    };\n\n    _this.startHandleChange = function (time, value) {\n      var onChangeInput = _this.props.onChangeInput;\n      var name = 'start';\n      onChangeInput({\n        name: name,\n        value: value\n      });\n    };\n\n    _this.endHandleChange = function (time, value) {\n      var onChangeInput = _this.props.onChangeInput;\n      var name = 'end';\n      onChangeInput({\n        name: name,\n        value: value\n      });\n    };\n\n    _this.handleChange = function (e) {\n      var onChangeInput = _this.props.onChangeInput;\n      var name = 'use';\n      var value = e.key;\n      onChangeInput({\n        name: name,\n        value: value\n      });\n    };\n\n    _this.textAreaChange = function (e) {\n      var _this$props2 = _this.props,\n          onChangeInput = _this$props2.onChangeInput,\n          language = _this$props2.language;\n      var _e$target = e.target,\n          value = _e$target.value,\n          name = _e$target.name;\n\n      if (language === \"en\") {\n        onChangeInput({\n          name: 'descriptionEn',\n          value: value\n        });\n      } else {\n        onChangeInput({\n          name: name,\n          value: value\n        });\n      }\n    };\n\n    _this.submitCheck = function (e) {\n      var _this$props3 = _this.props,\n          start = _this$props3.start,\n          end = _this$props3.end,\n          description = _this$props3.description,\n          descriptionEn = _this$props3.descriptionEn,\n          language = _this$props3.language;\n\n      var _assertThisInitialize = _assertThisInitialized(_assertThisInitialized(_this)),\n          handleOk = _assertThisInitialize.handleOk;\n\n      var format = 'HH:mm';\n      var between = moment.duration(moment(start, format).diff(moment(end, format))).asMinutes();\n\n      if (between >= 0) {\n        _this.setState({\n          show: false,\n          message: '시작시간과 끝시간의 간격이 없습니다.'\n        });\n\n        if (language === \"en\") {\n          _this.setState({\n            message: 'There is no interval between start and end times'\n          });\n        }\n\n        return;\n      }\n\n      if (language === \"en\") {\n        if (descriptionEn === '') {\n          _this.setState({\n            show: false,\n            message: 'No rest description'\n          });\n\n          return;\n        }\n      } else {\n        if (description === '') {\n          _this.setState({\n            show: false,\n            message: '휴게 설명이 없습니다.'\n          });\n\n          return;\n        }\n      }\n\n      handleOk(e);\n    };\n\n    _this.state = {\n      show: true,\n      message: ''\n    };\n    return _this;\n  }\n\n  _createClass(chat, [{\n    key: \"render\",\n    value: function render() {\n      var Search = Input.Search; // let { visible, start, end, use, description, descriptionEn, editDisabled, language } = this.props;\n      // const format = 'HH:mm';\n      // const {TextArea} = Input;\n      // const menu = (\n      //     <Menu onClick={this.handleChange}>\n      //         <Menu.Item key=\"true\">true</Menu.Item>\n      //         <Menu.Item key=\"false\">false</Menu.Item>\n      //     </Menu>\n      // );\n      // if(language === \"en\"){\n      //     description = descriptionEn;\n      // }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"chatView\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"msg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        class: \"msgBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"\\uCC44\\uD3051\")), React.createElement(\"div\", {\n        class: \"msg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        class: \"msgBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"\\uCC44\\uD3052\")), React.createElement(\"div\", {\n        class: \"msg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        class: \"msgBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"\\uCC44\\uD3053\"))), React.createElement(Search, {\n        placeholder: \"input search text\",\n        enterButton: \"\\uBCF4\\uB0B4\\uAE30\",\n        size: \"large\",\n        onSearch: function onSearch(value) {\n          return console.log(value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return chat;\n}(Component);\n\nexport default chat;","map":{"version":3,"sources":["F:/JAVA_WORKSPACE/frontend_react-20191018T023535Z-001/frontend_react/src/components/chat/chat.js"],"names":["React","Component","Modal","Button","Row","Col","Input","moment","locale","chat","props","context","showModal","handleOk","e","onSubmit","onChangeInput","name","value","handleEdit","handleRemove","onRemove","use","language","String","setState","show","message","handleCancel","startHandleChange","time","endHandleChange","handleChange","key","textAreaChange","target","submitCheck","start","end","description","descriptionEn","format","between","duration","diff","asMinutes","state","Search","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col } from 'react-bootstrap';\r\nimport {Input} from 'antd';\r\nimport moment from 'moment';\r\nimport locale from 'locale';\r\nimport './chat.css';\r\n\r\nclass chat extends Component {\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        this.state = {\r\n            show: true,\r\n            message: ''\r\n        };\r\n    }\r\n\r\n    showModal = () => {\r\n        //this.props.onChangeInput({name:'modal', value:true});\r\n    }\r\n\r\n    handleOk = (e) => {\r\n        const { onSubmit } = this.props;\r\n\r\n        onSubmit();\r\n\r\n        this.props.onChangeInput({name:'modal', value:false});\r\n        this.props.onChangeInput({name:'editDisabled', value:true});\r\n    }\r\n\r\n    handleEdit = (e) => {\r\n        this.props.onChangeInput({name:'editDisabled', value:false});\r\n    }\r\n\r\n    handleRemove = (e) => {\r\n        const { onRemove, use, language } = this.props;\r\n\r\n        if(String(use) === 'true'){\r\n            this.setState({ show : false,\r\n                message : '사용하고 있는 휴게 시간입니다.'});\r\n\r\n            if(language === \"en\"){\r\n                this.setState({\r\n                    message: 'This is the rest hours you\\'re using'\r\n                });\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        onRemove();\r\n        this.props.onChangeInput({name:'modal', value:false});\r\n        this.props.onChangeInput({name:'editDisabled', value:true});\r\n    }\r\n\r\n    handleCancel = (e) => {\r\n        this.props.onChangeInput({name:'editDisabled', value:true});\r\n        this.props.onChangeInput({name:'modal', value:false});\r\n        this.props.onChangeInput({name: 'no', value: 0});\r\n        this.setState({ show : true, message: '' });\r\n    }\r\n\r\n    startHandleChange = (time, value) => {\r\n        const { onChangeInput } = this.props;\r\n        const name = 'start';\r\n        onChangeInput({name, value});\r\n    }\r\n\r\n    endHandleChange = (time, value) => {\r\n        const { onChangeInput } = this.props;\r\n        const name = 'end';\r\n        onChangeInput({name, value});\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const {onChangeInput} = this.props;\r\n        const name = 'use';\r\n        const value = e.key;\r\n\r\n        onChangeInput({name, value});\r\n    }\r\n\r\n    textAreaChange = (e) => {\r\n        const { onChangeInput, language } = this.props;\r\n        const { value, name } = e.target;\r\n\r\n        if(language === \"en\"){\r\n            onChangeInput({name: 'descriptionEn', value: value});\r\n        }\r\n        else {\r\n            onChangeInput({name, value});\r\n        }\r\n    }\r\n\r\n    submitCheck = (e) => {\r\n        const { start, end, description, descriptionEn, language } = this.props;\r\n        const { handleOk } = this;\r\n        const format = 'HH:mm';\r\n        const between = moment.duration(moment(start, format).diff(moment(end, format))).asMinutes();\r\n\r\n        if(between >= 0){\r\n            this.setState({ show : false,\r\n                message : '시작시간과 끝시간의 간격이 없습니다.'});\r\n\r\n            if(language === \"en\"){\r\n                this.setState({\r\n                    message: 'There is no interval between start and end times'\r\n                });\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if(language === \"en\"){\r\n            if(descriptionEn === ''){\r\n                this.setState({\r\n                   show: false,\r\n                   message: 'No rest description'\r\n                });\r\n\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            if (description === '') {\r\n                this.setState({\r\n                    show: false,\r\n                    message: '휴게 설명이 없습니다.'\r\n                });\r\n\r\n                return;\r\n            }\r\n        }\r\n\r\n        handleOk(e);\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n\r\n        \r\n         const { Search } = Input;\r\n        // let { visible, start, end, use, description, descriptionEn, editDisabled, language } = this.props;\r\n        // const format = 'HH:mm';\r\n        // const {TextArea} = Input;\r\n\r\n        // const menu = (\r\n        //     <Menu onClick={this.handleChange}>\r\n        //         <Menu.Item key=\"true\">true</Menu.Item>\r\n        //         <Menu.Item key=\"false\">false</Menu.Item>\r\n        //     </Menu>\r\n        // );\r\n\r\n        // if(language === \"en\"){\r\n        //     description = descriptionEn;\r\n        // }\r\n\r\n        return (\r\n            <div>\r\n                <div id=\"container\">\r\n                    <div id=\"chatView\">\r\n                        <div class=\"msg\">\r\n                        <li class=\"msgBox\">채팅1</li>\r\n                        </div>\r\n                        <div class=\"msg\">\r\n                        <li class=\"msgBox\">채팅2</li>\r\n                        </div>\r\n                        <div class=\"msg\">\r\n                        <li class=\"msgBox\">채팅3</li>\r\n                        </div>\r\n                    </div>\r\n                    <Search\r\n                            placeholder=\"input search text\"\r\n                            enterButton=\"보내기\"\r\n                            size=\"large\"\r\n                            onSearch={value => console.log(value)}\r\n                            />\r\n                </div>  \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default chat;"]},"metadata":{},"sourceType":"module"}