{"ast":null,"code":"var _jsxFileName = \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\src\\\\components\\\\service\\\\BreakTimeList\\\\BreakTimeList.js\";\nimport React, { Component } from 'react';\nimport { Grid, Table, TableRow, TableHead, TableBody, TableCell } from '@material-ui/core';\nimport { Badge } from 'react-bootstrap';\nimport { Button } from 'antd';\nimport locale from 'locale';\nimport { Typography } from \"components/Wrappers\";\nimport { withStyles } from \"@material-ui/core\";\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport \"../../list/TableList/TableList.css\";\n\nclass BreakTimeList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleShowModal = table => {\n      //console.log(table);\n      const handleChangeInput = this.props.handleChangeInput;\n      handleChangeInput({\n        name: 'no',\n        value: table.no\n      });\n      handleChangeInput({\n        name: 'modal',\n        value: true\n      });\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          tables = _this$props.tables,\n          language = _this$props.language,\n          classes = _this$props.classes;\n    const BreakTimeList = tables.map((table, index) => {\n      let _table$toJS = table.toJS(),\n          start = _table$toJS.start,\n          end = _table$toJS.end,\n          description = _table$toJS.description,\n          descriptionEn = _table$toJS.descriptionEn,\n          use = _table$toJS.use,\n          updateTime = _table$toJS.updateTime;\n\n      let badge = '';\n\n      if (use === true) {\n        badge = 'success';\n      } else {\n        badge = 'danger';\n      }\n\n      if (language === \"en\") {\n        description = descriptionEn;\n      } else {\n        use === true ? use = '사용' : use = '사용안함';\n      }\n\n      return /*#__PURE__*/React.createElement(TableRow, {\n        className: classes.tableBody,\n        hover: true,\n        key: index,\n        onClick: event => this.handleShowModal(table.toJS()),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }\n      }, start), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }\n      }, end), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }\n      }, description), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }\n      }, updateTime), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Badge, {\n        variant: badge,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 36\n        }\n      }, String(use))));\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        marginTop: '8px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.tableHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.subTitle,\n      variant: \"h4\",\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    }, locale.breakTimeList[language])), /*#__PURE__*/React.createElement(Button, {\n      type: \"link\",\n      shape: \"round\",\n      icon: \"download\",\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ReactHTMLTableToExcel, {\n      id: \"test-table-xls-button\",\n      className: \"css\",\n      table: \"breakTimeTable\",\n      filename: \"breakTimeTableXLS\",\n      sheet: \"breakTimeTableXLS\",\n      buttonText: \"Download\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Table, {\n      id: \"breakTimeTable\",\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      className: classes.tableHead,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 44\n      }\n    }, locale.startTime[language])), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 44\n      }\n    }, locale.endTime[language])), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 44\n      }\n    }, locale.breakTimeExplanation[language])), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 44\n      }\n    }, locale.updateTime[language])), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 44\n      }\n    }, locale.use[language])))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, BreakTimeList))));\n  }\n\n}\n\nconst styles = theme => ({\n  tableHead: {\n    backgroundColor: '#fafafa',\n    borderTop: '2px solid rgba(224, 224, 224, .5)',\n    height: theme.spacing.unit * 6,\n    \"& th\": {\n      borderBottom: '2px solid rgba(224, 224, 224, .5)',\n      borderLeft: '1px solid rgba(224, 224, 224, .5)',\n      textAlign: 'center',\n      padding: '0px 0px 0px 0px',\n      width: '10%'\n    },\n    \"& th:first-of-type\": {\n      paddingLeft: theme.spacing.unit * 2,\n      borderLeft: 'none'\n    },\n    \"& th:nth-child(3)\": {\n      width: '60%'\n    }\n  },\n  tableBody: {\n    padding: '0px 0px 0px 0px',\n    height: theme.spacing.unit * 5,\n    \"& td\": {\n      textAlign: 'center',\n      borderLeft: '1px solid rgba(224, 224, 224, .5)',\n      padding: '0px 0px 0px 0px'\n    },\n    \"& td:first-of-type\": {\n      paddingLeft: theme.spacing.unit * 2,\n      borderLeft: 'none'\n    },\n    \"& td:nth-child(3)\": {\n      textAlign: 'left',\n      paddingLeft: theme.spacing.unit * 3\n    }\n  },\n  tableHeader: {\n    padding: '8px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginBottom: 0\n  },\n  settingGrid: {\n    backgroundColor: 'antiquewhite'\n  },\n  subTitle: {\n    marginBlockStart: 'auto'\n  }\n});\n\nexport default withStyles(styles)(BreakTimeList);","map":{"version":3,"sources":["F:/JAVA_WORKSPACE/frontend_react-20191018T023535Z-001/frontend_react/src/components/service/BreakTimeList/BreakTimeList.js"],"names":["React","Component","Grid","Table","TableRow","TableHead","TableBody","TableCell","Badge","Button","locale","Typography","withStyles","ReactHTMLTableToExcel","BreakTimeList","handleShowModal","table","handleChangeInput","props","name","value","no","render","tables","language","classes","map","index","toJS","start","end","description","descriptionEn","use","updateTime","badge","tableBody","event","String","marginTop","tableHeader","subTitle","breakTimeList","tableHead","startTime","endTime","breakTimeExplanation","styles","theme","backgroundColor","borderTop","height","spacing","unit","borderBottom","borderLeft","textAlign","padding","width","paddingLeft","display","justifyContent","marginBottom","settingGrid","marginBlockStart"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Grid, Table, TableRow, TableHead, TableBody, TableCell} from '@material-ui/core';\r\nimport {Badge} from 'react-bootstrap';\r\nimport {Button} from 'antd';\r\nimport locale from 'locale';\r\nimport {Typography} from \"components/Wrappers\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\nimport \"../../list/TableList/TableList.css\";\r\n\r\n\r\nclass BreakTimeList extends Component {\r\n\r\n    handleShowModal = (table) => {\r\n        //console.log(table);\r\n        const {handleChangeInput} = this.props;\r\n\r\n        handleChangeInput({name: 'no', value: table.no});\r\n        handleChangeInput({name: 'modal', value: true});\r\n    }\r\n\r\n    render() {\r\n        const {tables, language, classes} = this.props;\r\n\r\n        const BreakTimeList = tables.map(\r\n            (table, index) => {\r\n                let {start, end, description, descriptionEn, use, updateTime} = table.toJS();\r\n                let badge = '';\r\n\r\n                if (use === true) {\r\n                    badge = 'success';\r\n                } else {\r\n                    badge = 'danger';\r\n                }\r\n\r\n                if (language === \"en\") {\r\n                    description = descriptionEn;\r\n                } else {\r\n                    use === true ? use = '사용' : use = '사용안함';\r\n                }\r\n\r\n                return (\r\n                    <TableRow className={classes.tableBody} hover key={index} onClick={event => this.handleShowModal(table.toJS())}>\r\n                        <TableCell>{start}</TableCell>\r\n                        <TableCell>{end}</TableCell>\r\n                        <TableCell>{description}</TableCell>\r\n                        <TableCell>{updateTime}</TableCell>\r\n                        <TableCell><Badge variant={badge}>{String(use)}</Badge></TableCell>\r\n                    </TableRow>\r\n                )\r\n            }\r\n        );\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Grid item xs={12} style={{marginTop: '8px'}}>\r\n                    <div className={classes.tableHeader}>\r\n                        <Typography className={classes.subTitle} variant=\"h4\" size=\"sm\">\r\n                            <strong>{locale.breakTimeList[language]}</strong>\r\n                        </Typography>\r\n                        <Button type=\"link\" shape=\"round\" icon=\"download\" size=\"large\">\r\n                            <ReactHTMLTableToExcel\r\n                                id=\"test-table-xls-button\"\r\n                                className=\"css\"\r\n                                table=\"breakTimeTable\"\r\n                                filename=\"breakTimeTableXLS\"\r\n                                sheet=\"breakTimeTableXLS\"\r\n                                buttonText=\"Download\"\r\n                            />\r\n                        </Button>\r\n                    </div>\r\n                    \r\n                    <Table id=\"breakTimeTable\" className=\"mb-0\">\r\n                        <TableHead>\r\n                            <TableRow className={classes.tableHead}>\r\n                                <TableCell><b>{locale.startTime[language]}</b></TableCell>\r\n                                <TableCell><b>{locale.endTime[language]}</b></TableCell>\r\n                                <TableCell><b>{locale.breakTimeExplanation[language]}</b></TableCell>\r\n                                <TableCell><b>{locale.updateTime[language]}</b></TableCell>\r\n                                <TableCell><b>{locale.use[language]}</b></TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {BreakTimeList}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Grid>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    tableHead: {\r\n        backgroundColor: '#fafafa',\r\n        borderTop: '2px solid rgba(224, 224, 224, .5)',\r\n        height: theme.spacing.unit * 6,\r\n        \"& th\" : {\r\n            borderBottom: '2px solid rgba(224, 224, 224, .5)',\r\n            borderLeft: '1px solid rgba(224, 224, 224, .5)',\r\n            textAlign: 'center',\r\n            padding: '0px 0px 0px 0px',\r\n            width: '10%'\r\n        },\r\n        \"& th:first-of-type\" : {\r\n            paddingLeft: theme.spacing.unit * 2,\r\n            borderLeft: 'none'\r\n        },\r\n        \"& th:nth-child(3)\" : {\r\n            width: '60%'\r\n        }\r\n    },\r\n    tableBody: {\r\n        padding: '0px 0px 0px 0px',\r\n        height: theme.spacing.unit * 5,\r\n        \"& td\" : {\r\n            textAlign: 'center',\r\n            borderLeft: '1px solid rgba(224, 224, 224, .5)',\r\n            padding: '0px 0px 0px 0px'\r\n        },\r\n        \"& td:first-of-type\" : {\r\n            paddingLeft: theme.spacing.unit * 2,\r\n            borderLeft: 'none'\r\n        },\r\n        \"& td:nth-child(3)\" : {\r\n            textAlign: 'left',\r\n            paddingLeft: theme.spacing.unit * 3\r\n        }\r\n    },\r\n    tableHeader: {\r\n        padding: '8px',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        marginBottom: 0\r\n    },\r\n    settingGrid: {\r\n        backgroundColor: 'antiquewhite'\r\n    },\r\n    subTitle: {\r\n        marginBlockStart: 'auto',\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(BreakTimeList);"]},"metadata":{},"sourceType":"module"}