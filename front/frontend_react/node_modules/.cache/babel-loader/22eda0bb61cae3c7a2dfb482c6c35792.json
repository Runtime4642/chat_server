{"ast":null,"code":"import _regeneratorRuntime from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\src\\\\containers\\\\list\\\\CommuteCalendarStateContainer.js\";\nimport React, { Component } from 'react';\nimport CalendarState from 'components/list/CalendarState';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as stateActions from 'store/modules/state';\n\nclass CommuteCalendarStateContainer extends Component {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.getStateList = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var StateActions, _this$props, token, auth, loginUserNo;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            StateActions = _this.props.StateActions;\n            _this$props = _this.props, token = _this$props.token, auth = _this$props.auth, loginUserNo = _this$props.loginUserNo;\n\n            if (!(auth === \"ROLE_USER\")) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.prev = 3;\n            _context.next = 6;\n            return StateActions.getCommuteCalendarStateList(null, loginUserNo, null, null, true, token);\n\n          case 6:\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](3);\n            console.log(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[3, 8]]);\n    }));\n  }\n\n  componentWillMount() {\n    this.getStateList();\n  }\n\n  componentDidMount() {\n    const StateActions = this.props.StateActions;\n    StateActions.initialize();\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          calendarTables = _this$props2.calendarTables,\n          loading = _this$props2.loading,\n          changeView = _this$props2.changeView,\n          language = _this$props2.language;\n    if (changeView !== 'calendar') return null;\n    if (loading) return null;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CalendarState, {\n      language: language,\n      calendarTables: calendarTables,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default connect(state => ({\n  calendarTables: state.state.get('calendarTables'),\n  changeView: state.state.get('changeView'),\n  loading: state.pender.pending['state/COMMUTE_CALENDAR_STATE_LIST'],\n  token: state.login.token,\n  auth: state.login.auth,\n  loginUserNo: state.login.no,\n  language: state.language.language\n}), dispatch => ({\n  StateActions: bindActionCreators(stateActions, dispatch)\n}))(CommuteCalendarStateContainer);","map":{"version":3,"sources":["F:/JAVA_WORKSPACE/frontend_react-20191018T023535Z-001/frontend_react/src/containers/list/CommuteCalendarStateContainer.js"],"names":["React","Component","CalendarState","bindActionCreators","connect","stateActions","CommuteCalendarStateContainer","getStateList","StateActions","props","token","auth","loginUserNo","getCommuteCalendarStateList","console","log","componentWillMount","componentDidMount","initialize","render","calendarTables","loading","changeView","language","state","get","pender","pending","login","no","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,YAAZ,MAA8B,qBAA9B;;AAGA,MAAMC,6BAAN,SAA4CL,SAA5C,CAAsD;AAAA;AAAA;;AAAA;AAAA;AAAA,SAElDM,YAFkD,yEAEnC;AAAA;;AAAA;AAAA;AAAA;AACJC,YAAAA,YADI,GACY,KAAI,CAACC,KADjB,CACJD,YADI;AAAA,0BAEwB,KAAI,CAACC,KAF7B,EAEJC,KAFI,eAEJA,KAFI,EAEGC,IAFH,eAEGA,IAFH,EAESC,WAFT,eAESA,WAFT;;AAAA,kBAIRD,IAAI,KAAK,WAJD;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAMGH,YAAY,CAACK,2BAAb,CAAyC,IAAzC,EAA+CD,WAA/C,EAA4D,IAA5D,EAAkE,IAAlE,EAAwE,IAAxE,EAA8EF,KAA9E,CANH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AASHI,YAAAA,OAAO,CAACC,GAAR;;AATG;AAAA;AAAA;AAAA;AAAA;AAAA,KAFmC;AAAA;;AAgBlDC,EAAAA,kBAAkB,GAAG;AACjB,SAAKT,YAAL;AACH;;AAEDU,EAAAA,iBAAiB,GAAG;AAAA,UACTT,YADS,GACO,KAAKC,KADZ,CACTD,YADS;AAGhBA,IAAAA,YAAY,CAACU,UAAb;AACH;;AAGDC,EAAAA,MAAM,GAAG;AAAA,yBACoD,KAAKV,KADzD;AAAA,UACGW,cADH,gBACGA,cADH;AAAA,UACmBC,OADnB,gBACmBA,OADnB;AAAA,UAC4BC,UAD5B,gBAC4BA,UAD5B;AAAA,UACwCC,QADxC,gBACwCA,QADxC;AAGL,QAAGD,UAAU,KAAK,UAAlB,EAA8B,OAAO,IAAP;AAC9B,QAAGD,OAAH,EAAY,OAAO,IAAP;AAEZ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,aAAD;AAAe,MAAA,QAAQ,EAAEE,QAAzB;AAAmC,MAAA,cAAc,EAAEH,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAtCiD;;AAyCtD,eAAehB,OAAO,CACjBoB,KAAD,KAAY;AACRJ,EAAAA,cAAc,EAAEI,KAAK,CAACA,KAAN,CAAYC,GAAZ,CAAgB,gBAAhB,CADR;AAERH,EAAAA,UAAU,EAAEE,KAAK,CAACA,KAAN,CAAYC,GAAZ,CAAgB,YAAhB,CAFJ;AAGRJ,EAAAA,OAAO,EAAEG,KAAK,CAACE,MAAN,CAAaC,OAAb,CAAqB,mCAArB,CAHD;AAIRjB,EAAAA,KAAK,EAAEc,KAAK,CAACI,KAAN,CAAYlB,KAJX;AAKRC,EAAAA,IAAI,EAAEa,KAAK,CAACI,KAAN,CAAYjB,IALV;AAMRC,EAAAA,WAAW,EAAEY,KAAK,CAACI,KAAN,CAAYC,EANjB;AAORN,EAAAA,QAAQ,EAAEC,KAAK,CAACD,QAAN,CAAeA;AAPjB,CAAZ,CADkB,EAUjBO,QAAD,KAAe;AACXtB,EAAAA,YAAY,EAAEL,kBAAkB,CAACE,YAAD,EAAeyB,QAAf;AADrB,CAAf,CAVkB,CAAP,CAabxB,6BAba,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport CalendarState from 'components/list/CalendarState';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport * as stateActions from 'store/modules/state';\r\n\r\n\r\nclass CommuteCalendarStateContainer extends Component {\r\n\r\n    getStateList = async() => {\r\n        const {StateActions} = this.props;\r\n        const {token, auth, loginUserNo} = this.props;\r\n\r\n        if(auth === \"ROLE_USER\"){\r\n            try{\r\n                await StateActions.getCommuteCalendarStateList(null, loginUserNo, null, null, true, token);\r\n            }\r\n            catch(e){\r\n                console.log(e);\r\n            }\r\n        }\r\n     }\r\n\r\n    componentWillMount() {\r\n        this.getStateList();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {StateActions} = this.props;\r\n\r\n        StateActions.initialize();\r\n    }\r\n\r\n\r\n    render() {\r\n        const { calendarTables, loading, changeView, language } =this.props;\r\n\r\n        if(changeView !== 'calendar') return null;\r\n        if(loading) return null;\r\n\r\n        return (\r\n            <div>\r\n                <CalendarState language={language} calendarTables={calendarTables}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        calendarTables: state.state.get('calendarTables'),\r\n        changeView: state.state.get('changeView'),\r\n        loading: state.pender.pending['state/COMMUTE_CALENDAR_STATE_LIST'],\r\n        token: state.login.token,\r\n        auth: state.login.auth,\r\n        loginUserNo: state.login.no,\r\n        language: state.language.language\r\n    }),\r\n    (dispatch) => ({\r\n        StateActions: bindActionCreators(stateActions, dispatch)\r\n    })\r\n)(CommuteCalendarStateContainer);"]},"metadata":{},"sourceType":"module"}