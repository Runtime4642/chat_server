{"ast":null,"code":"import _objectSpread from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport Axios from 'axios';\nimport { List, fromJS } from 'immutable';\nexport var initialState = {\n  keyNo: false,\n  isInit: false,\n  isLoading: false,\n  tables: false,\n  error: null\n};\nexport var START_NOTICE = \"notice/START_NOTICE\";\nexport var NOTICE_SUCCESS = \"notice/NOTICE_SUCCESS\";\nexport var NOTICE_FAILURE = \"notice/NOTICE_FAILURE\";\nexport var INIT_NOTICE_STORE = \"notice/INIT_NOTICE_STORE\";\nexport var SET_KEYNO = \"notice/SET_KEYNO\";\nexport var INIT_KEYNO = \"notice/INIT_KEYNO\";\nexport var UPDATE_READ = \"notice/UPDATE_READ\";\nexport var startNotice = function startNotice() {\n  return {\n    type: START_NOTICE\n  };\n};\nexport var noticeSuccess = function noticeSuccess(data) {\n  return {\n    type: NOTICE_SUCCESS,\n    payload: {\n      data: data\n    }\n  };\n};\nexport var noticeFailure = function noticeFailure() {\n  return {\n    type: NOTICE_FAILURE\n  };\n};\nexport var initNoticeStore = function initNoticeStore() {\n  return {\n    type: INIT_NOTICE_STORE\n  };\n};\nexport var setKeyNo = function setKeyNo(keyNo) {\n  return {\n    type: SET_KEYNO,\n    payload: {\n      keyNo: keyNo\n    }\n  };\n};\nexport var initKeyNo = function initKeyNo() {\n  return {\n    type: INIT_KEYNO\n  };\n};\nexport var updateRead = function updateRead() {\n  return {\n    type: UPDATE_READ\n  };\n};\nexport var noticeupdateRead = function noticeupdateRead(key_no, auth, recordType, token) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Axios.get('http://218.39.221.104:8080/smartchecker/record/alarm/update/' + key_no + \"/\" + auth + \"/\" + recordType, {\n                  headers: {\n                    'Authorization': 'Bearer ' + token\n                  }\n                }).then(function (response) {//console.log(response);\n                }).catch(function (error) {//console.log(error);\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var setNoticeKeyNo = function setNoticeKeyNo(keyNo) {\n  return function (dispatch) {\n    dispatch(setKeyNo(keyNo));\n  };\n};\nexport var initNoticeKeyNo = function initNoticeKeyNo() {\n  return function (dispatch) {\n    dispatch(initKeyNo());\n  };\n};\nexport var setNoticeStore = function setNoticeStore() {\n  return function (dispatch) {\n    dispatch(initNoticeStore());\n  };\n};\nexport var getNotice = function getNotice(auth, user_no, token) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                dispatch(startNotice());\n\n                if (!(token !== false)) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                _context2.next = 4;\n                return Axios.get('http://218.39.221.104:8080/smartchecker/record/alarm/' + auth + '?user_no=' + user_no, {\n                  headers: {\n                    'Authorization': 'Bearer ' + token\n                  }\n                }).then(function (response) {\n                  if (sessionStorage.getItem(\"alarmnum\") === null) {\n                    sessionStorage.setItem(\"alarmnum\", response.data.data.length);\n                  } else if (sessionStorage.getItem(\"alarmnum\") !== response.data.data.length && sessionStorage.getItem(\"alarmnum\") !== null) {\n                    sessionStorage.removeItem(\"alarmnum\");\n\n                    if (sessionStorage.getItem(\"alarmnum\") === null) {\n                      sessionStorage.setItem(\"alarmnum\", response.data.data.length);\n                    }\n                  }\n\n                  dispatch(noticeSuccess(fromJS(response.data.data)));\n                }).catch(function (error) {//console.log(error);\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport default function NoticeReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\n  var _ref3 = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref3.type,\n      payload = _ref3.payload;\n\n  switch (type) {\n    case START_NOTICE:\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case NOTICE_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        isInit: true,\n        tables: payload.data,\n        error: null\n      });\n\n    case NOTICE_FAILURE:\n      return _objectSpread({}, state, {\n        isInit: false,\n        error: true\n      });\n\n    case INIT_NOTICE_STORE:\n      return _objectSpread({}, state, {\n        keyNo: false,\n        isInit: false,\n        tables: false,\n        error: null\n      });\n\n    case SET_KEYNO:\n      return _objectSpread({}, state, {\n        keyNo: payload.keyNo\n      });\n\n    case INIT_KEYNO:\n      return _objectSpread({}, state, {\n        keyNo: false\n      });\n\n    case UPDATE_READ:\n      return _objectSpread({}, state);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["F:/JAVA_WORKSPACE/frontend_react-20191018T023535Z-001/frontend_react/src/components/Header/Notice/NoticeListState.js"],"names":["Axios","List","fromJS","initialState","keyNo","isInit","isLoading","tables","error","START_NOTICE","NOTICE_SUCCESS","NOTICE_FAILURE","INIT_NOTICE_STORE","SET_KEYNO","INIT_KEYNO","UPDATE_READ","startNotice","type","noticeSuccess","data","payload","noticeFailure","initNoticeStore","setKeyNo","initKeyNo","updateRead","noticeupdateRead","key_no","auth","recordType","token","dispatch","get","headers","then","response","catch","setNoticeKeyNo","initNoticeKeyNo","setNoticeStore","getNotice","user_no","sessionStorage","getItem","setItem","length","removeItem","NoticeReducer","state"],"mappings":"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","sourcesContent":["import Axios from 'axios';\r\nimport { List, fromJS } from 'immutable';\r\n\r\nexport const initialState = {\r\n    keyNo: false,\r\n    isInit: false,\r\n    isLoading: false,\r\n    tables: false,\r\n    error: null\r\n};\r\n\r\nexport const START_NOTICE = \"notice/START_NOTICE\";\r\nexport const NOTICE_SUCCESS = \"notice/NOTICE_SUCCESS\";\r\nexport const NOTICE_FAILURE = \"notice/NOTICE_FAILURE\";\r\nexport const INIT_NOTICE_STORE = \"notice/INIT_NOTICE_STORE\";\r\nexport const SET_KEYNO = \"notice/SET_KEYNO\";\r\nexport const INIT_KEYNO = \"notice/INIT_KEYNO\";\r\nexport const UPDATE_READ = \"notice/UPDATE_READ\";\r\n\r\nexport const startNotice = () => ({\r\n    type: START_NOTICE\r\n});\r\n\r\nexport const noticeSuccess = (data) => ({\r\n    type: NOTICE_SUCCESS,\r\n    payload : {\r\n        data : data\r\n    }\r\n});\r\n\r\nexport const noticeFailure = () => ({\r\n    type: NOTICE_FAILURE\r\n});\r\n\r\nexport const initNoticeStore = () => ({\r\n    type: INIT_NOTICE_STORE\r\n});\r\n\r\nexport const setKeyNo = (keyNo) => ({\r\n    type: SET_KEYNO,\r\n    payload : {\r\n        keyNo : keyNo\r\n    }\r\n});\r\n\r\nexport const initKeyNo = () => ({\r\n    type: INIT_KEYNO\r\n});\r\n\r\nexport const updateRead = () => ({\r\n    type: UPDATE_READ\r\n});\r\n\r\nexport const noticeupdateRead = (key_no, auth, recordType, token) => {\r\n    return async (dispatch) => {\r\n        await Axios.get('http://218.39.221.104:8080/smartchecker/record/alarm/update/' + key_no + \"/\" + auth + \"/\" + recordType, {\r\n            headers : {\r\n                'Authorization' : 'Bearer ' + token\r\n            }\r\n        })\r\n        .then((response) => {\r\n            //console.log(response);\r\n        }).catch((error) => {\r\n            //console.log(error);\r\n        })\r\n    }\r\n}\r\n\r\nexport const setNoticeKeyNo = (keyNo) => {\r\n    return (dispatch) => {\r\n        dispatch(setKeyNo(keyNo));\r\n    }\r\n} \r\n\r\nexport const initNoticeKeyNo = () => {\r\n    return (dispatch) => {\r\n        dispatch(initKeyNo());\r\n    }\r\n}\r\n\r\nexport const setNoticeStore = () => {\r\n    return (dispatch) => {\r\n        dispatch(initNoticeStore());\r\n    }\r\n};\r\n\r\nexport const getNotice = (auth, user_no, token) => {\r\n    return async (dispatch) => {\r\n        dispatch(startNotice());\r\n        if(token !== false) {\r\n            await Axios.get('http://218.39.221.104:8080/smartchecker/record/alarm/' + auth + '?user_no=' + user_no, {\r\n                headers : {\r\n                    'Authorization' : 'Bearer ' + token\r\n                }\r\n            })\r\n            .then((response) => {\r\n                if(sessionStorage.getItem(\"alarmnum\") === null) {\r\n                    sessionStorage.setItem(\"alarmnum\", response.data.data.length);\r\n                } else if(sessionStorage.getItem(\"alarmnum\") !== response.data.data.length && sessionStorage.getItem(\"alarmnum\") !== null) {\r\n                    sessionStorage.removeItem(\"alarmnum\");\r\n\r\n                    if(sessionStorage.getItem(\"alarmnum\") === null) {\r\n                        sessionStorage.setItem(\"alarmnum\", response.data.data.length);\r\n                    }\r\n                }\r\n                dispatch(noticeSuccess(fromJS(response.data.data)));\r\n            })\r\n            .catch((error) => {\r\n                //console.log(error);\r\n            })\r\n        }\r\n    }\r\n};\r\n\r\nexport default function NoticeReducer(state = initialState, { type, payload}) {\r\n    switch (type) {\r\n        case START_NOTICE:\r\n        return {\r\n            ...state,\r\n            isLoading: true\r\n        };\r\n        case NOTICE_SUCCESS:\r\n        return {\r\n            ...state,\r\n            isLoading: false,\r\n            isInit: true,\r\n            tables: payload.data,\r\n            error: null\r\n        };\r\n        case NOTICE_FAILURE:\r\n        return {\r\n            ...state,\r\n            isInit: false,\r\n            error: true\r\n        };\r\n        case INIT_NOTICE_STORE:\r\n        return {\r\n            ...state,\r\n            keyNo: false,\r\n            isInit: false,\r\n            tables: false,\r\n            error: null\r\n        };\r\n        case SET_KEYNO:\r\n        return {\r\n            ...state,\r\n            keyNo: payload.keyNo\r\n        };\r\n        case INIT_KEYNO:\r\n        return {\r\n            ...state,\r\n            keyNo: false\r\n        };\r\n        case UPDATE_READ:\r\n        return {\r\n            ...state\r\n        };\r\n        default:\r\n        return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}