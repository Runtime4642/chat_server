{"ast":null,"code":"import _classCallCheck from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\src\\\\components\\\\list\\\\TableList\\\\TableList.js\";\nimport React, { Component } from 'react';\nimport { Grid, Table, TableRow, TableHead, TableBody, TableCell } from '@material-ui/core';\nimport { Badge } from 'react-bootstrap';\nimport { Button } from 'antd';\nimport locale from 'locale';\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport './TableList.css';\nimport { withStyles } from \"@material-ui/core\";\n\nvar TableList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TableList, _Component);\n\n  function TableList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TableList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TableList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleShowModal = function (table) {\n      //console.log(table);\n      var handleChangeInput = _this.props.handleChangeInput;\n      handleChangeInput({\n        name: 'startNo',\n        value: table.startNo\n      });\n      handleChangeInput({\n        name: 'endNo',\n        value: table.endNo\n      });\n      handleChangeInput({\n        name: 'userNo',\n        value: table.userNo\n      });\n      handleChangeInput({\n        name: 'modal',\n        value: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TableList, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          tables = _this$props.tables,\n          language = _this$props.language,\n          classes = _this$props.classes;\n      var handleShowModal = this.handleShowModal;\n      var TableList = tables.map(function (table, index) {\n        var _table$toJS = table.toJS(),\n            name = _table$toJS.name,\n            userNo = _table$toJS.userNo,\n            day = _table$toJS.day,\n            dayEn = _table$toJS.dayEn,\n            totalWorktime = _table$toJS.totalWorktime,\n            fromState = _table$toJS.fromState,\n            fromStateEn = _table$toJS.fromStateEn,\n            toState = _table$toJS.toState,\n            toStateEn = _table$toJS.toStateEn,\n            startTime = _table$toJS.startTime,\n            endTime = _table$toJS.endTime;\n\n        var _ref = '',\n            fromBadge = _ref.fromBadge,\n            toBadge = _ref.toBadge,\n            lDay = _ref.lDay,\n            lFromState = _ref.lFromState,\n            lToState = _ref.lToState;\n\n        if ('en' === language) {\n          lDay = dayEn;\n          lFromState = fromStateEn;\n          lToState = toStateEn;\n        } else if ('ko' === language) {\n          lDay = day;\n          lFromState = fromState;\n          lToState = toState;\n        }\n\n        if (lFromState === locale.Normal[language]) fromBadge = \"success\";else if (lFromState === locale.Lateness[language]) fromBadge = \"warning\";else if (lFromState === locale.Error[language]) fromBadge = \"danger\";else if (lFromState === locale.Non_enregistrement[language]) fromBadge = \"primary\";\n        if (lToState === locale.Normal[language]) toBadge = \"success\";else if (lToState === locale.Early_leave[language]) toBadge = \"secondary\";else if (lToState === locale.Error[language]) toBadge = \"danger\";else if (lToState === locale.Non_enregistrement[language]) toBadge = \"primary\";\n        return React.createElement(TableRow, {\n          className: classes.tableBody,\n          hover: true,\n          key: index,\n          onClick: function onClick(event) {\n            return handleShowModal(table.toJS());\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          id: \"userNo\",\n          className: \"pl-3 fw-normal\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, userNo), React.createElement(TableCell, {\n          id: \"name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, name), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, lDay), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, startTime), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, endTime), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, totalWorktime), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(Badge, {\n          variant: fromBadge,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, lFromState), \" \", React.createElement(Badge, {\n          variant: toBadge,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, lToState)));\n      });\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: divWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"link\",\n        shape: \"round\",\n        icon: \"download\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(ReactHTMLTableToExcel, {\n        id: \"test-table-xls-button\",\n        className: \"css\",\n        table: \"commuteTable\",\n        filename: \"commuteTableXLS\",\n        sheet: \"commuteTableXLS\",\n        buttonText: \"Download\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          marginTop: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Table, {\n        id: \"commuteTable\",\n        className: \"mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        className: classes.tableHead,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"User No\")), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, locale.Name[language])), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, locale.Day[language])), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, locale.CheckInTime[language])), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, locale.CheckOutTime[language])), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, locale.TotalWorkTime[language])), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, locale.State[language])))), React.createElement(TableBody, {\n        id: \"commuteRecord\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, TableList)))));\n    }\n  }]);\n\n  return TableList;\n}(Component);\n\nvar divWrapper = {\n  height: \"100%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"flex-end\"\n};\n\nvar styles = function styles(theme) {\n  return {\n    tableHead: {\n      backgroundColor: '#fafafa',\n      borderTop: '2px solid rgba(224, 224, 224, .5)',\n      height: theme.spacing.unit * 6,\n      \"& th\": {\n        borderBottom: '2px solid rgba(224, 224, 224, .5)',\n        borderLeft: '1px solid rgba(224, 224, 224, .5)',\n        textAlign: 'center',\n        padding: '0px 0px 0px 0px',\n        width: '20%'\n      },\n      \"& th:first-of-type\": {\n        paddingLeft: theme.spacing.unit * 2,\n        borderLeft: 'none',\n        width: '10%'\n      },\n      \"& th:nth-child(2)\": {\n        width: '10%'\n      },\n      \"& th:nth-child(3)\": {\n        width: '5%'\n      },\n      \"& th:nth-child(7)\": {\n        width: '15%'\n      }\n    },\n    tableBody: {\n      padding: '0px 0px 0px 0px',\n      height: theme.spacing.unit * 5,\n      \"& td\": {\n        textAlign: 'center',\n        padding: '0px 0px 0px 0px',\n        borderLeft: '1px solid rgba(224, 224, 224, .5)'\n      },\n      \"& td:first-of-type\": {\n        paddingLeft: theme.spacing.unit * 2,\n        borderLeft: 'none'\n      }\n    },\n    tdContent: {\n      textAlign: 'left'\n    },\n    settingGrid: {\n      backgroundColor: 'antiquewhite'\n    }\n  };\n};\n\nexport default withStyles(styles)(TableList);","map":{"version":3,"sources":["F:/JAVA_WORKSPACE/frontend_react-20191018T023535Z-001/frontend_react/src/components/list/TableList/TableList.js"],"names":["React","Component","Grid","Table","TableRow","TableHead","TableBody","TableCell","Badge","Button","locale","ReactHTMLTableToExcel","withStyles","TableList","handleShowModal","table","handleChangeInput","props","name","value","startNo","endNo","userNo","tables","language","classes","map","index","toJS","day","dayEn","totalWorktime","fromState","fromStateEn","toState","toStateEn","startTime","endTime","fromBadge","toBadge","lDay","lFromState","lToState","Normal","Lateness","Error","Non_enregistrement","Early_leave","tableBody","event","divWrapper","marginTop","tableHead","Name","Day","CheckInTime","CheckOutTime","TotalWorkTime","State","height","display","flexDirection","justifyContent","alignItems","styles","theme","backgroundColor","borderTop","spacing","unit","borderBottom","borderLeft","textAlign","padding","width","paddingLeft","tdContent","settingGrid"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Grid, Table, TableRow, TableHead, TableBody, TableCell} from '@material-ui/core';\r\nimport {Badge} from 'react-bootstrap';\r\nimport {Button} from 'antd';\r\nimport locale from 'locale';\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\nimport './TableList.css';\r\n\r\nimport { withStyles } from \"@material-ui/core\";\r\n\r\nclass TableList extends Component {\r\n\r\n    handleShowModal = (table) => {\r\n        //console.log(table);\r\n        const {handleChangeInput} = this.props;\r\n\r\n        handleChangeInput({name: 'startNo', value: table.startNo});\r\n        handleChangeInput({name: 'endNo', value: table.endNo});\r\n        handleChangeInput({name: 'userNo', value: table.userNo});\r\n\r\n        handleChangeInput({name: 'modal', value: true});\r\n    }\r\n\r\n    render() {\r\n        const {tables, language, classes} = this.props;\r\n        const {handleShowModal} = this;\r\n\r\n        const TableList = tables.map(\r\n            (table, index) => {\r\n                const {name, userNo, day, dayEn, totalWorktime, fromState, fromStateEn, toState, toStateEn, startTime, endTime} = table.toJS();\r\n                let {fromBadge, toBadge, lDay, lFromState, lToState} = '';\r\n\r\n                if ('en' === language) {\r\n                    lDay = dayEn;\r\n                    lFromState = fromStateEn;\r\n                    lToState = toStateEn;\r\n                } else if ('ko' === language) {\r\n                    lDay = day;\r\n                    lFromState = fromState;\r\n                    lToState = toState;\r\n                }\r\n\r\n                if (lFromState === locale.Normal[language]) fromBadge = \"success\";\r\n                else if (lFromState === locale.Lateness[language]) fromBadge = \"warning\";\r\n                else if (lFromState === locale.Error[language]) fromBadge = \"danger\";\r\n                else if (lFromState === locale.Non_enregistrement[language]) fromBadge = \"primary\";\r\n\r\n                if (lToState === locale.Normal[language]) toBadge = \"success\";\r\n                else if (lToState === locale.Early_leave[language]) toBadge = \"secondary\";\r\n                else if (lToState === locale.Error[language]) toBadge = \"danger\";\r\n                else if (lToState === locale.Non_enregistrement[language]) toBadge = \"primary\";\r\n\r\n                return (\r\n                    <TableRow className={classes.tableBody} hover key={index} onClick={event => handleShowModal(table.toJS())}>\r\n                        <TableCell id=\"userNo\" className=\"pl-3 fw-normal\">{userNo}</TableCell>\r\n                        <TableCell id=\"name\">{name}</TableCell>\r\n                        <TableCell>{lDay}</TableCell>\r\n                        <TableCell>{startTime}</TableCell>\r\n                        <TableCell>{endTime}</TableCell>\r\n                        <TableCell>{totalWorktime}</TableCell>\r\n                        <TableCell><Badge variant={fromBadge}>{lFromState}</Badge> <Badge\r\n                            variant={toBadge}>{lToState}</Badge></TableCell>\r\n                    </TableRow>\r\n                )\r\n            }\r\n        );\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div style={divWrapper}>\r\n                    <Button type=\"link\" shape=\"round\" icon=\"download\" size=\"large\">\r\n                        <ReactHTMLTableToExcel\r\n                            id=\"test-table-xls-button\"\r\n                            className=\"css\"\r\n                            table=\"commuteTable\"\r\n                            filename=\"commuteTableXLS\"\r\n                            sheet=\"commuteTableXLS\"\r\n                            buttonText=\"Download\"\r\n                        />\r\n                    </Button>\r\n                </div>\r\n                <Grid item xs={12} style={{marginTop: '10px'}}>\r\n                    <div>\r\n                        <Table id=\"commuteTable\" className=\"mb-0\">\r\n                            <TableHead>\r\n                                <TableRow className={classes.tableHead}>\r\n                                    <TableCell><b>User No</b></TableCell>\r\n                                    <TableCell><b>{locale.Name[language]}</b></TableCell>\r\n                                    <TableCell><b>{locale.Day[language]}</b></TableCell>\r\n                                    <TableCell><b>{locale.CheckInTime[language]}</b></TableCell>\r\n                                    <TableCell><b>{locale.CheckOutTime[language]}</b></TableCell>\r\n                                    <TableCell><b>{locale.TotalWorkTime[language]}</b></TableCell>\r\n                                    <TableCell><b>{locale.State[language]}</b></TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody id=\"commuteRecord\">\r\n                                {TableList}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </div>\r\n                </Grid>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst divWrapper = {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-end\",\r\n}\r\n\r\nconst styles = theme => ({\r\n    tableHead: {\r\n        backgroundColor: '#fafafa',\r\n        borderTop: '2px solid rgba(224, 224, 224, .5)',\r\n        height: theme.spacing.unit * 6,\r\n        \"& th\" : {\r\n            borderBottom: '2px solid rgba(224, 224, 224, .5)',\r\n            borderLeft: '1px solid rgba(224, 224, 224, .5)',\r\n            textAlign: 'center',\r\n            padding: '0px 0px 0px 0px',\r\n            width: '20%'\r\n        },\r\n        \"& th:first-of-type\" : {\r\n            paddingLeft: theme.spacing.unit * 2,\r\n            borderLeft: 'none',\r\n            width: '10%'\r\n        },\r\n        \"& th:nth-child(2)\" : {\r\n            width: '10%'\r\n        },\r\n        \"& th:nth-child(3)\" : {\r\n            width: '5%'\r\n        },\r\n        \"& th:nth-child(7)\" : {\r\n            width: '15%'\r\n        }\r\n    },\r\n    tableBody: {\r\n        padding: '0px 0px 0px 0px',\r\n        height: theme.spacing.unit * 5,\r\n        \"& td\" : {\r\n            textAlign: 'center',\r\n            padding: '0px 0px 0px 0px',\r\n            borderLeft: '1px solid rgba(224, 224, 224, .5)',\r\n        },\r\n        \"& td:first-of-type\" : {\r\n            paddingLeft: theme.spacing.unit * 2,\r\n            borderLeft: 'none'\r\n        }\r\n    },\r\n    tdContent: {\r\n        textAlign:'left'\r\n    },\r\n    settingGrid: {\r\n        backgroundColor: 'antiquewhite'\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(TableList);\r\n"]},"metadata":{},"sourceType":"module"}