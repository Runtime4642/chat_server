{"ast":null,"code":"var _jsxFileName = \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\src\\\\components\\\\record\\\\RecordList\\\\RecordList.js\";\nimport React, { Component } from 'react';\nimport { Badge } from 'react-bootstrap';\nimport { Grid, Table, TableRow, TableHead, TableBody, TableCell } from '@material-ui/core';\nimport { Button } from \"antd\";\nimport locale from 'locale';\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport \"../../list/TableList/TableList.css\";\nimport { withStyles } from \"@material-ui/core\";\n\nclass RecordList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleShowModal = table => {\n      //console.log(table);\n      const handleChangeInput = this.props.handleChangeInput;\n      handleChangeInput({\n        name: 'no',\n        value: table.no\n      });\n      handleChangeInput({\n        name: 'modal',\n        value: true\n      });\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          tables = _this$props.tables,\n          language = _this$props.language,\n          classes = _this$props.classes; //console.log(tables);\n\n    const RecordList = tables.map((table, index) => {\n      let _table$toJS = table.toJS(),\n          day = _table$toJS.day,\n          actor = _table$toJS.actor,\n          insertUserId = _table$toJS.insertUserId,\n          recordType = _table$toJS.recordType,\n          recordTypeEn = _table$toJS.recordTypeEn,\n          content = _table$toJS.content,\n          contentEn = _table$toJS.contentEn,\n          read = _table$toJS.read;\n\n      let badge = '';\n\n      if (read === true) {\n        badge = \"success\";\n      } else {\n        badge = \"danger\";\n      }\n\n      if (language === \"en\") {\n        recordType = recordTypeEn;\n        content = contentEn;\n      } else {\n        read === true ? read = '읽음' : read = '읽지않음';\n      }\n\n      return /*#__PURE__*/React.createElement(TableRow, {\n        className: classes.tableBody,\n        hover: true,\n        key: index,\n        onClick: event => this.handleShowModal(table.toJS()),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        className: \"pl-3 fw-normal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }\n      }, day), /*#__PURE__*/React.createElement(TableCell, {\n        id: \"actor\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }\n      }, actor), /*#__PURE__*/React.createElement(TableCell, {\n        id: \"id\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }\n      }, insertUserId), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }\n      }, recordType), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }\n      }, content), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 36\n        }\n      }, /*#__PURE__*/React.createElement(Badge, {\n        variant: badge,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 40\n        }\n      }, String(read)))));\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: divWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"link\",\n      shape: \"round\",\n      icon: \"download\",\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ReactHTMLTableToExcel, {\n      id: \"test-table-xls-button\",\n      className: \"css\",\n      table: \"recordTable\",\n      filename: \"recordTableXLS\",\n      sheet: \"recordTableXLS\",\n      buttonText: \"Download\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        marginTop: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      id: \"recordTable\",\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      className: classes.tableHead,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 48\n      }\n    }, locale.Date[language])), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 48\n      }\n    }, locale.ActiveAgent[language])), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 48\n      }\n    }, locale.Id[language])), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 48\n      }\n    }, locale.Type[language])), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 48\n      }\n    }, locale.Contents[language])), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 48\n      }\n    }, locale.ReadCheck[language])))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }, RecordList)))));\n  }\n\n}\n\nconst divWrapper = {\n  height: \"100%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"flex-end\"\n};\n\nconst styles = theme => ({\n  tableHead: {\n    backgroundColor: '#fafafa',\n    borderTop: '2px solid rgba(224, 224, 224, .5)',\n    height: theme.spacing.unit * 6,\n    \"& th\": {\n      borderBottom: '2px solid rgba(224, 224, 224, .5)',\n      borderLeft: '1px solid rgba(224, 224, 224, .5)',\n      textAlign: 'center',\n      padding: '0px 0px 0px 0px',\n      width: '10%'\n    },\n    \"& th:first-of-type\": {\n      paddingLeft: theme.spacing.unit * 2,\n      borderLeft: 'none'\n    },\n    \"& th:nth-child(4)\": {\n      width: '15%'\n    },\n    \"& th:nth-child(5)\": {\n      width: '45%'\n    }\n  },\n  tableBody: {\n    padding: '0px 0px 0px 0px',\n    height: theme.spacing.unit * 5,\n    \"& td\": {\n      textAlign: 'center',\n      padding: '0px 0px 0px 0px',\n      borderLeft: '1px solid rgba(224, 224, 224, .5)'\n    },\n    \"& td:nth-child(5)\": {\n      paddingLeft: theme.spacing.unit * 2,\n      textAlign: 'left'\n    },\n    \"& td:first-of-type\": {\n      paddingLeft: theme.spacing.unit * 2,\n      borderLeft: 'none'\n    }\n  },\n  settingGrid: {\n    backgroundColor: 'antiquewhite'\n  }\n});\n\nexport default withStyles(styles)(RecordList);","map":{"version":3,"sources":["F:/JAVA_WORKSPACE/frontend_react-20191018T023535Z-001/frontend_react/src/components/record/RecordList/RecordList.js"],"names":["React","Component","Badge","Grid","Table","TableRow","TableHead","TableBody","TableCell","Button","locale","ReactHTMLTableToExcel","withStyles","RecordList","handleShowModal","table","handleChangeInput","props","name","value","no","render","tables","language","classes","map","index","toJS","day","actor","insertUserId","recordType","recordTypeEn","content","contentEn","read","badge","tableBody","event","String","divWrapper","marginTop","tableHead","Date","ActiveAgent","Id","Type","Contents","ReadCheck","height","display","flexDirection","justifyContent","alignItems","styles","theme","backgroundColor","borderTop","spacing","unit","borderBottom","borderLeft","textAlign","padding","width","paddingLeft","settingGrid"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Badge} from 'react-bootstrap';\r\nimport {Grid, Table, TableRow, TableHead, TableBody, TableCell} from '@material-ui/core';\r\nimport {Button} from \"antd\";\r\nimport locale from 'locale';\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\nimport \"../../list/TableList/TableList.css\";\r\n\r\n\r\nimport { withStyles } from \"@material-ui/core\";\r\n\r\nclass RecordList extends Component {\r\n\r\n    handleShowModal = (table) => {\r\n        //console.log(table);\r\n        const {handleChangeInput} = this.props;\r\n\r\n        handleChangeInput({name: 'no', value: table.no});\r\n        handleChangeInput({name: 'modal', value: true});\r\n    }\r\n\r\n    render() {\r\n        const {tables, language, classes} = this.props;\r\n\r\n        //console.log(tables);\r\n\r\n        const RecordList = tables.map(\r\n            (table, index) => {\r\n                let {day, actor, insertUserId, recordType, recordTypeEn, content, contentEn, read} = table.toJS();\r\n                let badge = '';\r\n\r\n                if (read === true) {\r\n                    badge = \"success\";\r\n                } else {\r\n                    badge = \"danger\";\r\n                }\r\n\r\n                if (language === \"en\") {\r\n                    recordType = recordTypeEn;\r\n                    content = contentEn;\r\n                } else {\r\n                    read === true ? read = '읽음' : read = '읽지않음';\r\n                }\r\n\r\n                return (\r\n                    <TableRow className={classes.tableBody} hover key={index} onClick={event => this.handleShowModal(table.toJS())}>\r\n                        <TableCell className=\"pl-3 fw-normal\">{day}</TableCell>\r\n                        <TableCell id=\"actor\">{actor}</TableCell>\r\n                        <TableCell id=\"id\">{insertUserId}</TableCell>\r\n                        <TableCell>{recordType}</TableCell>\r\n                        <TableCell>{content}</TableCell>\r\n                        <TableCell><h6><Badge variant={badge}>{String(read)}</Badge></h6></TableCell>\r\n                    </TableRow>\r\n                );\r\n            }\r\n        );\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div style={divWrapper}>\r\n                    <Button type=\"link\" shape=\"round\" icon=\"download\" size=\"large\">\r\n                        <ReactHTMLTableToExcel\r\n                            id=\"test-table-xls-button\"\r\n                            className=\"css\"\r\n                            table=\"recordTable\"\r\n                            filename=\"recordTableXLS\"\r\n                            sheet=\"recordTableXLS\"\r\n                            buttonText=\"Download\"\r\n                        />\r\n                    </Button>\r\n                </div>\r\n                <Grid item xs={12} style={{marginTop: '10px'}}>\r\n                    <div>\r\n                        <Table id=\"recordTable\" className=\"mb-0\">\r\n                            <TableHead>\r\n                                <TableRow className={classes.tableHead}>\r\n                                    <TableCell><b>{locale.Date[language]}</b></TableCell>\r\n                                    <TableCell><b>{locale.ActiveAgent[language]}</b></TableCell>\r\n                                    <TableCell><b>{locale.Id[language]}</b></TableCell>\r\n                                    <TableCell><b>{locale.Type[language]}</b></TableCell>\r\n                                    <TableCell><b>{locale.Contents[language]}</b></TableCell>\r\n                                    <TableCell><b>{locale.ReadCheck[language]}</b></TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {RecordList}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </div>\r\n                </Grid>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst divWrapper = {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-end\",\r\n}\r\n\r\nconst styles = theme => ({\r\n    tableHead: {\r\n        backgroundColor: '#fafafa',\r\n        borderTop: '2px solid rgba(224, 224, 224, .5)',\r\n        height: theme.spacing.unit * 6,\r\n        \"& th\" : {\r\n            borderBottom: '2px solid rgba(224, 224, 224, .5)',\r\n            borderLeft: '1px solid rgba(224, 224, 224, .5)',\r\n            textAlign: 'center',\r\n            padding: '0px 0px 0px 0px',\r\n            width: '10%'\r\n        },\r\n        \"& th:first-of-type\" : {\r\n            paddingLeft: theme.spacing.unit * 2,\r\n            borderLeft: 'none'\r\n        },\r\n        \"& th:nth-child(4)\" : {\r\n            width: '15%'\r\n        },\r\n        \"& th:nth-child(5)\" : {\r\n            width: '45%'\r\n        }\r\n    },\r\n    tableBody: {\r\n        padding: '0px 0px 0px 0px',\r\n        height: theme.spacing.unit * 5,\r\n        \"& td\" : {\r\n            textAlign: 'center',\r\n            padding: '0px 0px 0px 0px',\r\n            borderLeft: '1px solid rgba(224, 224, 224, .5)',\r\n        },\r\n        \"& td:nth-child(5)\" : {\r\n            paddingLeft: theme.spacing.unit * 2,\r\n            textAlign: 'left'\r\n        },\r\n        \"& td:first-of-type\" : {\r\n            paddingLeft: theme.spacing.unit * 2,\r\n            borderLeft: 'none'\r\n        }\r\n    },\r\n    settingGrid: {\r\n        backgroundColor: 'antiquewhite'\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(RecordList);\r\n"]},"metadata":{},"sourceType":"module"}