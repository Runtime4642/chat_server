{"ast":null,"code":"import _regeneratorRuntime from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\src\\\\containers\\\\workAttitude\\\\WorkAttitudeStateContainer.js\";\nimport React, { Component } from 'react';\nimport WorkAttitudeState from 'components/workAttitude/WorkAttitudeState';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as stateActions from 'store/modules/state';\n\nclass WorkAttitudeStateContainer extends Component {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.getStateList = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var StateActions, _this$props, token, auth, loginUserNo, keyNo, searchUserNo, search;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            StateActions = _this.props.StateActions;\n            _this$props = _this.props, token = _this$props.token, auth = _this$props.auth, loginUserNo = _this$props.loginUserNo;\n            keyNo = null;\n\n            if (sessionStorage.getItem(\"statekeyNo\") !== \"define\") {\n              keyNo = sessionStorage.getItem(\"statekeyNo\");\n              sessionStorage.removeItem(\"statekeyNo\");\n              sessionStorage.setItem(\"statekeyNo\", \"define\");\n            }\n\n            _context.prev = 4;\n\n            if (!(auth === \"ROLE_USER\")) {\n              _context.next = 13;\n              break;\n            }\n\n            searchUserNo = loginUserNo;\n            search = {\n              searchUserNo\n            }; //재성아 알림시 막아야함\n\n            if (!(keyNo === null)) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.next = 11;\n            return StateActions.getWorkAttitudeSearchStateList(search, token);\n\n          case 11:\n            _context.next = 15;\n            break;\n\n          case 13:\n            _context.next = 15;\n            return StateActions.getWorkAttitudeStateList(token);\n\n          case 15:\n            _context.next = 20;\n            break;\n\n          case 17:\n            _context.prev = 17;\n            _context.t0 = _context[\"catch\"](4);\n            console.log(_context.t0);\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[4, 17]]);\n    }));\n  }\n\n  componentWillMount() {\n    this.getStateList();\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          tables = _this$props2.tables,\n          loading = _this$props2.loading,\n          changeView = _this$props2.changeView;\n    if (changeView !== 'table') return null;\n    if (loading) return null;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(WorkAttitudeState, {\n      tables: tables,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default connect(state => ({\n  tables: state.state.get('tables'),\n  changeView: state.state.get('changeView'),\n  loading: state.pender.pending['state/WORK_ATTITUDE_STATE_LIST'],\n  token: state.login.token,\n  auth: state.login.auth,\n  loginUserNo: state.login.no\n}), dispatch => ({\n  StateActions: bindActionCreators(stateActions, dispatch)\n}))(WorkAttitudeStateContainer);","map":{"version":3,"sources":["F:/JAVA_WORKSPACE/frontend_react-20191018T023535Z-001/frontend_react/src/containers/workAttitude/WorkAttitudeStateContainer.js"],"names":["React","Component","WorkAttitudeState","bindActionCreators","connect","stateActions","WorkAttitudeStateContainer","getStateList","StateActions","props","token","auth","loginUserNo","keyNo","sessionStorage","getItem","removeItem","setItem","searchUserNo","search","getWorkAttitudeSearchStateList","getWorkAttitudeStateList","console","log","componentWillMount","render","tables","loading","changeView","state","get","pender","pending","login","no","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport WorkAttitudeState from 'components/workAttitude/WorkAttitudeState';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport * as stateActions from 'store/modules/state';\r\n\r\nclass WorkAttitudeStateContainer extends Component {\r\n\r\n    getStateList = async() => {\r\n        const {StateActions} = this.props;\r\n        const {token, auth, loginUserNo} = this.props;\r\n        let keyNo = null;\r\n        if(sessionStorage.getItem(\"statekeyNo\") !== \"define\") {\r\n            keyNo = sessionStorage.getItem(\"statekeyNo\");\r\n            sessionStorage.removeItem(\"statekeyNo\");\r\n            sessionStorage.setItem(\"statekeyNo\", \"define\");\r\n        }\r\n        try {\r\n            if(auth === \"ROLE_USER\") {\r\n                const searchUserNo = loginUserNo;\r\n                const search = {searchUserNo};\r\n\r\n                //재성아 알림시 막아야함\r\n                if(keyNo === null) {\r\n                    await StateActions.getWorkAttitudeSearchStateList(search, token);\r\n                }\r\n            }\r\n            else {\r\n                await StateActions.getWorkAttitudeStateList(token);\r\n            }\r\n        } catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.getStateList();\r\n    }\r\n\r\n    render() {\r\n        const { tables, loading, changeView } =this.props;\r\n\r\n        if(changeView !== 'table') return null;\r\n        if(loading) return null;\r\n\r\n        return (\r\n            <div>\r\n                <WorkAttitudeState tables={tables}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        tables: state.state.get('tables'),\r\n        changeView: state.state.get('changeView'),\r\n        loading: state.pender.pending['state/WORK_ATTITUDE_STATE_LIST'],\r\n        token: state.login.token,\r\n        auth: state.login.auth,\r\n        loginUserNo: state.login.no\r\n    }),\r\n    (dispatch) => ({\r\n        StateActions: bindActionCreators(stateActions, dispatch)\r\n    })\r\n)(WorkAttitudeStateContainer);"]},"metadata":{},"sourceType":"module"}