{"ast":null,"code":"import { compose, withState, withHandlers, lifecycle } from \"recompose\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport LoginView from \"./LoginView\";\nimport { loginUser, resetError } from \"./LoginState\";\nimport locale from 'locale';\nexport default compose(connect(state => ({\n  isLoading: state.login.isLoading,\n  isAuthenticated: state.login.isAuthenticated,\n  language: state.language.language,\n  error: state.login.error,\n  errorMessage: state.login.errorMessage\n}), {\n  loginUser,\n  resetError\n}), withRouter, withState(\"nameValue\", \"setNameValue\", \"\"), withState(\"loginValue\", \"setLoginValue\", \"\"), withState(\"passwordValue\", \"setPasswordValue\", \"\"), withHandlers({\n  handleInput: props => (e, input = \"login\") => {\n    if (props.error) {\n      props.resetError();\n    }\n\n    if (input === \"login\") {\n      props.setLoginValue(e.target.value);\n    } else if (input === \"password\") {\n      props.setPasswordValue(e.target.value);\n    } else if (input === \"name\") {\n      props.setNameValue(e.target.value);\n    }\n  },\n  handleLoginButtonClick: props => () => {\n    props.loginUser(props.loginValue, props.passwordValue);\n  },\n  handleKeyPress: props => e => {\n    if (e.charCode === 13) {\n      props.loginUser(props.loginValue, props.passwordValue);\n    }\n  }\n}), lifecycle({\n  componentDidMount() {\n    document.title = locale.loginTitle[this.props.language];\n  },\n\n  componentWillReceiveProps(nextProps) {\n    if (!this.props.error && nextProps.error) {\n      this.props.setPasswordValue(\"\");\n    }\n  }\n\n}))(LoginView);","map":{"version":3,"sources":["F:/JAVA_WORKSPACE/frontend_react-20191018T023535Z-001/frontend_react/src/pages/login/LoginContainer.js"],"names":["compose","withState","withHandlers","lifecycle","withRouter","connect","LoginView","loginUser","resetError","locale","state","isLoading","login","isAuthenticated","language","error","errorMessage","handleInput","props","e","input","setLoginValue","target","value","setPasswordValue","setNameValue","handleLoginButtonClick","loginValue","passwordValue","handleKeyPress","charCode","componentDidMount","document","title","loginTitle","componentWillReceiveProps","nextProps"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,SAAlB,EAA6BC,YAA7B,EAA2CC,SAA3C,QAA4D,WAA5D;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,cAAtC;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,eAAeT,OAAO,CACpBK,OAAO,CACLK,KAAK,KAAK;AACRC,EAAAA,SAAS,EAAED,KAAK,CAACE,KAAN,CAAYD,SADf;AAERE,EAAAA,eAAe,EAAEH,KAAK,CAACE,KAAN,CAAYC,eAFrB;AAGRC,EAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAAN,CAAeA,QAHjB;AAIRC,EAAAA,KAAK,EAAEL,KAAK,CAACE,KAAN,CAAYG,KAJX;AAKRC,EAAAA,YAAY,EAAEN,KAAK,CAACE,KAAN,CAAYI;AALlB,CAAL,CADA,EAQL;AAAET,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CARK,CADa,EAWpBJ,UAXoB,EAYpBH,SAAS,CAAC,WAAD,EAAc,cAAd,EAA8B,EAA9B,CAZW,EAapBA,SAAS,CAAC,YAAD,EAAe,eAAf,EAAgC,EAAhC,CAbW,EAcpBA,SAAS,CAAC,eAAD,EAAkB,kBAAlB,EAAsC,EAAtC,CAdW,EAepBC,YAAY,CAAC;AACXe,EAAAA,WAAW,EAAEC,KAAK,IAAI,CAACC,CAAD,EAAIC,KAAK,GAAG,OAAZ,KAAwB;AAC5C,QAAIF,KAAK,CAACH,KAAV,EAAiB;AACfG,MAAAA,KAAK,CAACV,UAAN;AACD;;AAED,QAAIY,KAAK,KAAK,OAAd,EAAuB;AACrBF,MAAAA,KAAK,CAACG,aAAN,CAAoBF,CAAC,CAACG,MAAF,CAASC,KAA7B;AACD,KAFD,MAEO,IAAIH,KAAK,KAAK,UAAd,EAA0B;AAC/BF,MAAAA,KAAK,CAACM,gBAAN,CAAuBL,CAAC,CAACG,MAAF,CAASC,KAAhC;AACD,KAFM,MAEA,IAAIH,KAAK,KAAK,MAAd,EAAsB;AAC3BF,MAAAA,KAAK,CAACO,YAAN,CAAmBN,CAAC,CAACG,MAAF,CAASC,KAA5B;AACD;AACF,GAbU;AAcXG,EAAAA,sBAAsB,EAAER,KAAK,IAAI,MAAM;AACrCA,IAAAA,KAAK,CAACX,SAAN,CAAgBW,KAAK,CAACS,UAAtB,EAAkCT,KAAK,CAACU,aAAxC;AACD,GAhBU;AAiBXC,EAAAA,cAAc,EAAEX,KAAK,IAAKC,CAAD,IAAO;AAC9B,QAAGA,CAAC,CAACW,QAAF,KAAe,EAAlB,EAAsB;AACpBZ,MAAAA,KAAK,CAACX,SAAN,CAAgBW,KAAK,CAACS,UAAtB,EAAkCT,KAAK,CAACU,aAAxC;AACD;AACF;AArBU,CAAD,CAfQ,EAsCpBzB,SAAS,CAAC;AACR4B,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,QAAQ,CAACC,KAAT,GAAiBxB,MAAM,CAACyB,UAAP,CAAkB,KAAKhB,KAAL,CAAWJ,QAA7B,CAAjB;AACD,GAHO;;AAIRqB,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,QAAI,CAAC,KAAKlB,KAAL,CAAWH,KAAZ,IAAqBqB,SAAS,CAACrB,KAAnC,EAA0C;AACxC,WAAKG,KAAL,CAAWM,gBAAX,CAA4B,EAA5B;AACD;AACF;;AARO,CAAD,CAtCW,CAAP,CAgDblB,SAhDa,CAAf","sourcesContent":["import { compose, withState, withHandlers, lifecycle } from \"recompose\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport LoginView from \"./LoginView\";\r\nimport { loginUser, resetError } from \"./LoginState\";\r\n\r\nimport locale from 'locale';\r\n\r\nexport default compose(\r\n  connect(\r\n    state => ({\r\n      isLoading: state.login.isLoading,\r\n      isAuthenticated: state.login.isAuthenticated,\r\n      language: state.language.language,\r\n      error: state.login.error,\r\n      errorMessage: state.login.errorMessage\r\n    }),\r\n    { loginUser, resetError }\r\n  ),\r\n  withRouter,\r\n  withState(\"nameValue\", \"setNameValue\", \"\"),\r\n  withState(\"loginValue\", \"setLoginValue\", \"\"),\r\n  withState(\"passwordValue\", \"setPasswordValue\", \"\"),\r\n  withHandlers({\r\n    handleInput: props => (e, input = \"login\") => {\r\n      if (props.error) {\r\n        props.resetError();\r\n      }\r\n\r\n      if (input === \"login\") {\r\n        props.setLoginValue(e.target.value);\r\n      } else if (input === \"password\") {\r\n        props.setPasswordValue(e.target.value);\r\n      } else if (input === \"name\") {\r\n        props.setNameValue(e.target.value);\r\n      }\r\n    },\r\n    handleLoginButtonClick: props => () => {\r\n      props.loginUser(props.loginValue, props.passwordValue);\r\n    },\r\n    handleKeyPress: props => (e) => {\r\n      if(e.charCode === 13) {\r\n        props.loginUser(props.loginValue, props.passwordValue);\r\n      }\r\n    }\r\n  }),\r\n  lifecycle({\r\n    componentDidMount() {\r\n      document.title = locale.loginTitle[this.props.language];\r\n    },\r\n    componentWillReceiveProps(nextProps) {\r\n      if (!this.props.error && nextProps.error) {\r\n        this.props.setPasswordValue(\"\");\r\n      }\r\n    }\r\n  })\r\n)(LoginView);\r\n"]},"metadata":{},"sourceType":"module"}