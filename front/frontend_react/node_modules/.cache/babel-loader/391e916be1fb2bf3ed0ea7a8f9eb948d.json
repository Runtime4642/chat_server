{"ast":null,"code":"import _objectWithoutProperties from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\src\\\\components\\\\Wrappers\\\\Wrappers.js\";\nimport React from \"react\";\nimport { withStyles, withTheme, Badge as BadgeBase, Typography as TypographyBase, Button as ButtonBase } from \"@material-ui/core\";\nimport classnames from \"classnames\";\n\nvar getColor = function getColor(color, theme) {\n  var brigtness = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"main\";\n\n  if (color && theme.palette[color] && theme.palette[color][brigtness]) {\n    return theme.palette[color][brigtness];\n  }\n};\n\nvar getFontWeight = function getFontWeight(style) {\n  switch (style) {\n    case \"light\":\n      return 300;\n\n    case \"medium\":\n      return 500;\n\n    case \"bold\":\n      return 600;\n\n    default:\n      return 400;\n  }\n};\n\nvar getFontSize = function getFontSize(size) {\n  var variant = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  var theme = arguments.length > 2 ? arguments[2] : undefined;\n  var multiplier;\n\n  switch (size) {\n    case \"sm\":\n      multiplier = 0.8;\n      break;\n\n    case \"md\":\n      multiplier = 1.5;\n      break;\n\n    case \"xl\":\n      multiplier = 2;\n      break;\n\n    case \"xxl\":\n      multiplier = 3;\n      break;\n\n    default:\n      multiplier = 1;\n      break;\n  }\n\n  var defaultSize = variant && theme.typography[variant] ? theme.typography[variant].fontSize : theme.typography.fontSize + \"px\";\n  return \"calc(\".concat(defaultSize, \" * \").concat(multiplier, \")\");\n};\n\nvar createStyled = function createStyled(styles, options) {\n  var Styled = function Styled(props) {\n    var children = props.children,\n        other = _objectWithoutProperties(props, [\"children\"]);\n\n    return children(other);\n  };\n\n  return withStyles(styles, options)(Styled);\n};\n\nvar BadgeExtended = function BadgeExtended(_ref) {\n  var classes = _ref.classes,\n      theme = _ref.theme,\n      children = _ref.children,\n      colorBrightness = _ref.colorBrightness,\n      props = _objectWithoutProperties(_ref, [\"classes\", \"theme\", \"children\", \"colorBrightness\"]);\n\n  var Styled = createStyled({\n    badge: {\n      backgroundColor: getColor(props.color, theme, colorBrightness)\n    }\n  });\n  return React.createElement(Styled, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, function (styledProps) {\n    return React.createElement(BadgeBase, Object.assign({\n      classes: {\n        badge: classnames(classes.badge, styledProps.classes.badge)\n      }\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), children);\n  });\n};\n\nexport var Badge = withStyles(function (theme) {\n  return {\n    badge: {\n      fontWeight: 600,\n      height: 16,\n      minWidth: 16\n    }\n  };\n}, {\n  withTheme: true\n})(BadgeExtended);\n\nvar TypographyExtended = function TypographyExtended(_ref2) {\n  var theme = _ref2.theme,\n      children = _ref2.children,\n      weight = _ref2.weight,\n      size = _ref2.size,\n      colorBrightness = _ref2.colorBrightness,\n      props = _objectWithoutProperties(_ref2, [\"theme\", \"children\", \"weight\", \"size\", \"colorBrightness\"]);\n\n  return React.createElement(TypographyBase, Object.assign({\n    style: {\n      color: getColor(props.color, theme, colorBrightness),\n      fontWeight: getFontWeight(weight),\n      fontSize: getFontSize(size, props.variant, theme)\n    }\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), children);\n};\n\nexport var Typography = withTheme()(TypographyExtended);\n\nvar ButtonExtended = function ButtonExtended(_ref3) {\n  var theme = _ref3.theme,\n      children = _ref3.children,\n      props = _objectWithoutProperties(_ref3, [\"theme\", \"children\"]);\n\n  var Styled = createStyled({\n    button: {\n      backgroundColor: getColor(props.color, theme),\n      boxShadow: theme.customShadows.widget,\n      color: 'white',\n      '&:hover': {\n        backgroundColor: getColor(props.color, theme, 'light'),\n        boxShadow: theme.customShadows.widgetWide\n      }\n    }\n  });\n  return React.createElement(Styled, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, function (_ref4) {\n    var classes = _ref4.classes;\n    return React.createElement(ButtonBase, Object.assign({\n      classes: {\n        root: classes.button\n      }\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), children);\n  });\n};\n\nexport var Button = withTheme()(ButtonExtended);","map":{"version":3,"sources":["F:/JAVA_WORKSPACE/frontend_react-20191018T023535Z-001/frontend_react/src/components/Wrappers/Wrappers.js"],"names":["React","withStyles","withTheme","Badge","BadgeBase","Typography","TypographyBase","Button","ButtonBase","classnames","getColor","color","theme","brigtness","palette","getFontWeight","style","getFontSize","size","variant","multiplier","defaultSize","typography","fontSize","createStyled","styles","options","Styled","props","children","other","BadgeExtended","classes","colorBrightness","badge","backgroundColor","styledProps","fontWeight","height","minWidth","TypographyExtended","weight","ButtonExtended","button","boxShadow","customShadows","widget","widgetWide","root"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  withStyles,\r\n  withTheme,\r\n  Badge as BadgeBase,\r\n  Typography as TypographyBase,\r\n  Button as ButtonBase\r\n} from \"@material-ui/core\";\r\nimport classnames from \"classnames\";\r\n\r\nconst getColor = (color, theme, brigtness = \"main\") => {\r\n  if (color && theme.palette[color] && theme.palette[color][brigtness]) {\r\n    return theme.palette[color][brigtness];\r\n  }\r\n};\r\n\r\nconst getFontWeight = style => {\r\n  switch (style) {\r\n    case \"light\":\r\n      return 300;\r\n    case \"medium\":\r\n      return 500;\r\n    case \"bold\":\r\n      return 600;\r\n    default:\r\n      return 400;\r\n  }\r\n};\r\n\r\nconst getFontSize = (size, variant = \"\", theme) => {\r\n  let multiplier;\r\n\r\n  switch (size) {\r\n    case \"sm\":\r\n      multiplier = 0.8;\r\n      break;\r\n    case \"md\":\r\n      multiplier = 1.5;\r\n      break;\r\n    case \"xl\":\r\n      multiplier = 2;\r\n      break;\r\n    case \"xxl\":\r\n      multiplier = 3;\r\n      break;\r\n    default:\r\n      multiplier = 1;\r\n      break;\r\n  }\r\n\r\n  const defaultSize =\r\n    variant && theme.typography[variant]\r\n      ? theme.typography[variant].fontSize\r\n      : theme.typography.fontSize + \"px\";\r\n\r\n  return `calc(${defaultSize} * ${multiplier})`;\r\n};\r\n\r\nconst createStyled = (styles, options) => {\r\n  const Styled = props => {\r\n    const { children, ...other } = props;\r\n    return children(other);\r\n  };\r\n\r\n  return withStyles(styles, options)(Styled);\r\n};\r\n\r\nconst BadgeExtended = ({ classes, theme, children, colorBrightness, ...props }) => {\r\n  const Styled = createStyled({\r\n    badge: {\r\n      backgroundColor: getColor(props.color, theme, colorBrightness)\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Styled>\r\n      {styledProps => (\r\n        <BadgeBase\r\n          classes={{\r\n            badge: classnames(classes.badge, styledProps.classes.badge)\r\n          }}\r\n          {...props}\r\n        >\r\n          {children}\r\n        </BadgeBase>\r\n      )}\r\n    </Styled>\r\n  );\r\n};\r\n\r\nexport const Badge = withStyles(\r\n  theme => ({\r\n    badge: {\r\n      fontWeight: 600,\r\n      height: 16,\r\n      minWidth: 16\r\n    }\r\n  }),\r\n  { withTheme: true }\r\n)(BadgeExtended);\r\n\r\nconst TypographyExtended = ({ theme, children, weight, size, colorBrightness, ...props }) => (\r\n  <TypographyBase\r\n    style={{\r\n      color: getColor(props.color, theme, colorBrightness),\r\n      fontWeight: getFontWeight(weight),\r\n      fontSize: getFontSize(size, props.variant, theme)\r\n    }}\r\n    {...props}\r\n  >\r\n    {children}\r\n  </TypographyBase>\r\n);\r\n\r\nexport const Typography = withTheme()(TypographyExtended);\r\n\r\nconst ButtonExtended = ({ theme, children, ...props }) => {\r\n  const Styled = createStyled({\r\n    button: {\r\n      backgroundColor: getColor(props.color, theme),\r\n      boxShadow: theme.customShadows.widget,\r\n      color: 'white',\r\n      '&:hover': {\r\n        backgroundColor: getColor(props.color, theme, 'light'),\r\n        boxShadow: theme.customShadows.widgetWide,\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Styled>\r\n      {({ classes }) => (\r\n        <ButtonBase classes={{ root: classes.button }} {...props}>\r\n          {children}\r\n        </ButtonBase>\r\n      )}\r\n    </Styled>\r\n  );\r\n};\r\n\r\nexport const Button = withTheme()(ButtonExtended);\r\n"]},"metadata":{},"sourceType":"module"}