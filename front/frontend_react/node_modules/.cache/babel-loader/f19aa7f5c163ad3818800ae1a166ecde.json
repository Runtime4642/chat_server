{"ast":null,"code":"var _jsxFileName = \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\src\\\\components\\\\list\\\\TableList\\\\TableList.js\";\nimport React, { Component } from 'react';\nimport { Grid, Table, TableRow, TableHead, TableBody, TableCell } from '@material-ui/core';\nimport { Badge } from 'react-bootstrap';\nimport { Button } from 'antd';\nimport locale from 'locale';\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport './TableList.css';\nimport { withStyles } from \"@material-ui/core\";\n\nclass TableList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleShowModal = table => {\n      //console.log(table);\n      const handleChangeInput = this.props.handleChangeInput;\n      handleChangeInput({\n        name: 'startNo',\n        value: table.startNo\n      });\n      handleChangeInput({\n        name: 'endNo',\n        value: table.endNo\n      });\n      handleChangeInput({\n        name: 'userNo',\n        value: table.userNo\n      });\n      handleChangeInput({\n        name: 'modal',\n        value: true\n      });\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          tables = _this$props.tables,\n          language = _this$props.language,\n          classes = _this$props.classes;\n    const handleShowModal = this.handleShowModal;\n    const TableList = tables.map((table, index) => {\n      const _table$toJS = table.toJS(),\n            name = _table$toJS.name,\n            userNo = _table$toJS.userNo,\n            day = _table$toJS.day,\n            dayEn = _table$toJS.dayEn,\n            totalWorktime = _table$toJS.totalWorktime,\n            fromState = _table$toJS.fromState,\n            fromStateEn = _table$toJS.fromStateEn,\n            toState = _table$toJS.toState,\n            toStateEn = _table$toJS.toStateEn,\n            startTime = _table$toJS.startTime,\n            endTime = _table$toJS.endTime;\n\n      let _ref = '',\n          fromBadge = _ref.fromBadge,\n          toBadge = _ref.toBadge,\n          lDay = _ref.lDay,\n          lFromState = _ref.lFromState,\n          lToState = _ref.lToState;\n\n      if ('en' === language) {\n        lDay = dayEn;\n        lFromState = fromStateEn;\n        lToState = toStateEn;\n      } else if ('ko' === language) {\n        lDay = day;\n        lFromState = fromState;\n        lToState = toState;\n      }\n\n      if (lFromState === locale.Normal[language]) fromBadge = \"success\";else if (lFromState === locale.Lateness[language]) fromBadge = \"warning\";else if (lFromState === locale.Error[language]) fromBadge = \"danger\";else if (lFromState === locale.Non_enregistrement[language]) fromBadge = \"primary\";\n      if (lToState === locale.Normal[language]) toBadge = \"success\";else if (lToState === locale.Early_leave[language]) toBadge = \"secondary\";else if (lToState === locale.Error[language]) toBadge = \"danger\";else if (lToState === locale.Non_enregistrement[language]) toBadge = \"primary\";\n      return /*#__PURE__*/React.createElement(TableRow, {\n        className: classes.tableBody,\n        hover: true,\n        key: index,\n        onClick: event => handleShowModal(table.toJS()),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        id: \"userNo\",\n        className: \"pl-3 fw-normal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }\n      }, userNo), /*#__PURE__*/React.createElement(TableCell, {\n        id: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }\n      }, name), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }\n      }, lDay), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      }, startTime), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }, endTime), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }\n      }, totalWorktime), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Badge, {\n        variant: fromBadge,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 36\n        }\n      }, lFromState), \" \", /*#__PURE__*/React.createElement(Badge, {\n        variant: toBadge,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 84\n        }\n      }, lToState)));\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: divWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"link\",\n      shape: \"round\",\n      icon: \"download\",\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ReactHTMLTableToExcel, {\n      id: \"test-table-xls-button\",\n      className: \"css\",\n      table: \"commuteTable\",\n      filename: \"commuteTableXLS\",\n      sheet: \"commuteTableXLS\",\n      buttonText: \"Download\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        marginTop: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      id: \"commuteTable\",\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      className: classes.tableHead,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 48\n      }\n    }, \"User No\")), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 48\n      }\n    }, locale.Name[language])), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 48\n      }\n    }, locale.Day[language])), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 48\n      }\n    }, locale.CheckInTime[language])), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 48\n      }\n    }, locale.CheckOutTime[language])), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 48\n      }\n    }, locale.TotalWorkTime[language])), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 48\n      }\n    }, locale.State[language])))), /*#__PURE__*/React.createElement(TableBody, {\n      id: \"commuteRecord\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }\n    }, TableList)))));\n  }\n\n}\n\nconst divWrapper = {\n  height: \"100%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"flex-end\"\n};\n\nconst styles = theme => ({\n  tableHead: {\n    backgroundColor: '#fafafa',\n    borderTop: '2px solid rgba(224, 224, 224, .5)',\n    height: theme.spacing.unit * 6,\n    \"& th\": {\n      borderBottom: '2px solid rgba(224, 224, 224, .5)',\n      borderLeft: '1px solid rgba(224, 224, 224, .5)',\n      textAlign: 'center',\n      padding: '0px 0px 0px 0px',\n      width: '20%'\n    },\n    \"& th:first-of-type\": {\n      paddingLeft: theme.spacing.unit * 2,\n      borderLeft: 'none',\n      width: '10%'\n    },\n    \"& th:nth-child(2)\": {\n      width: '10%'\n    },\n    \"& th:nth-child(3)\": {\n      width: '5%'\n    },\n    \"& th:nth-child(7)\": {\n      width: '15%'\n    }\n  },\n  tableBody: {\n    padding: '0px 0px 0px 0px',\n    height: theme.spacing.unit * 5,\n    \"& td\": {\n      textAlign: 'center',\n      padding: '0px 0px 0px 0px',\n      borderLeft: '1px solid rgba(224, 224, 224, .5)'\n    },\n    \"& td:first-of-type\": {\n      paddingLeft: theme.spacing.unit * 2,\n      borderLeft: 'none'\n    }\n  },\n  tdContent: {\n    textAlign: 'left'\n  },\n  settingGrid: {\n    backgroundColor: 'antiquewhite'\n  }\n});\n\nexport default withStyles(styles)(TableList);","map":{"version":3,"sources":["F:/JAVA_WORKSPACE/frontend_react-20191018T023535Z-001/frontend_react/src/components/list/TableList/TableList.js"],"names":["React","Component","Grid","Table","TableRow","TableHead","TableBody","TableCell","Badge","Button","locale","ReactHTMLTableToExcel","withStyles","TableList","handleShowModal","table","handleChangeInput","props","name","value","startNo","endNo","userNo","render","tables","language","classes","map","index","toJS","day","dayEn","totalWorktime","fromState","fromStateEn","toState","toStateEn","startTime","endTime","fromBadge","toBadge","lDay","lFromState","lToState","Normal","Lateness","Error","Non_enregistrement","Early_leave","tableBody","event","divWrapper","marginTop","tableHead","Name","Day","CheckInTime","CheckOutTime","TotalWorkTime","State","height","display","flexDirection","justifyContent","alignItems","styles","theme","backgroundColor","borderTop","spacing","unit","borderBottom","borderLeft","textAlign","padding","width","paddingLeft","tdContent","settingGrid"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Grid, Table, TableRow, TableHead, TableBody, TableCell} from '@material-ui/core';\r\nimport {Badge} from 'react-bootstrap';\r\nimport {Button} from 'antd';\r\nimport locale from 'locale';\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\nimport './TableList.css';\r\n\r\nimport { withStyles } from \"@material-ui/core\";\r\n\r\nclass TableList extends Component {\r\n\r\n    handleShowModal = (table) => {\r\n        //console.log(table);\r\n        const {handleChangeInput} = this.props;\r\n\r\n        handleChangeInput({name: 'startNo', value: table.startNo});\r\n        handleChangeInput({name: 'endNo', value: table.endNo});\r\n        handleChangeInput({name: 'userNo', value: table.userNo});\r\n\r\n        handleChangeInput({name: 'modal', value: true});\r\n    }\r\n\r\n    render() {\r\n        const {tables, language, classes} = this.props;\r\n        const {handleShowModal} = this;\r\n\r\n        const TableList = tables.map(\r\n            (table, index) => {\r\n                const {name, userNo, day, dayEn, totalWorktime, fromState, fromStateEn, toState, toStateEn, startTime, endTime} = table.toJS();\r\n                let {fromBadge, toBadge, lDay, lFromState, lToState} = '';\r\n\r\n                if ('en' === language) {\r\n                    lDay = dayEn;\r\n                    lFromState = fromStateEn;\r\n                    lToState = toStateEn;\r\n                } else if ('ko' === language) {\r\n                    lDay = day;\r\n                    lFromState = fromState;\r\n                    lToState = toState;\r\n                }\r\n\r\n                if (lFromState === locale.Normal[language]) fromBadge = \"success\";\r\n                else if (lFromState === locale.Lateness[language]) fromBadge = \"warning\";\r\n                else if (lFromState === locale.Error[language]) fromBadge = \"danger\";\r\n                else if (lFromState === locale.Non_enregistrement[language]) fromBadge = \"primary\";\r\n\r\n                if (lToState === locale.Normal[language]) toBadge = \"success\";\r\n                else if (lToState === locale.Early_leave[language]) toBadge = \"secondary\";\r\n                else if (lToState === locale.Error[language]) toBadge = \"danger\";\r\n                else if (lToState === locale.Non_enregistrement[language]) toBadge = \"primary\";\r\n\r\n                return (\r\n                    <TableRow className={classes.tableBody} hover key={index} onClick={event => handleShowModal(table.toJS())}>\r\n                        <TableCell id=\"userNo\" className=\"pl-3 fw-normal\">{userNo}</TableCell>\r\n                        <TableCell id=\"name\">{name}</TableCell>\r\n                        <TableCell>{lDay}</TableCell>\r\n                        <TableCell>{startTime}</TableCell>\r\n                        <TableCell>{endTime}</TableCell>\r\n                        <TableCell>{totalWorktime}</TableCell>\r\n                        <TableCell><Badge variant={fromBadge}>{lFromState}</Badge> <Badge\r\n                            variant={toBadge}>{lToState}</Badge></TableCell>\r\n                    </TableRow>\r\n                )\r\n            }\r\n        );\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div style={divWrapper}>\r\n                    <Button type=\"link\" shape=\"round\" icon=\"download\" size=\"large\">\r\n                        <ReactHTMLTableToExcel\r\n                            id=\"test-table-xls-button\"\r\n                            className=\"css\"\r\n                            table=\"commuteTable\"\r\n                            filename=\"commuteTableXLS\"\r\n                            sheet=\"commuteTableXLS\"\r\n                            buttonText=\"Download\"\r\n                        />\r\n                    </Button>\r\n                </div>\r\n                <Grid item xs={12} style={{marginTop: '10px'}}>\r\n                    <div>\r\n                        <Table id=\"commuteTable\" className=\"mb-0\">\r\n                            <TableHead>\r\n                                <TableRow className={classes.tableHead}>\r\n                                    <TableCell><b>User No</b></TableCell>\r\n                                    <TableCell><b>{locale.Name[language]}</b></TableCell>\r\n                                    <TableCell><b>{locale.Day[language]}</b></TableCell>\r\n                                    <TableCell><b>{locale.CheckInTime[language]}</b></TableCell>\r\n                                    <TableCell><b>{locale.CheckOutTime[language]}</b></TableCell>\r\n                                    <TableCell><b>{locale.TotalWorkTime[language]}</b></TableCell>\r\n                                    <TableCell><b>{locale.State[language]}</b></TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody id=\"commuteRecord\">\r\n                                {TableList}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </div>\r\n                </Grid>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst divWrapper = {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-end\",\r\n}\r\n\r\nconst styles = theme => ({\r\n    tableHead: {\r\n        backgroundColor: '#fafafa',\r\n        borderTop: '2px solid rgba(224, 224, 224, .5)',\r\n        height: theme.spacing.unit * 6,\r\n        \"& th\" : {\r\n            borderBottom: '2px solid rgba(224, 224, 224, .5)',\r\n            borderLeft: '1px solid rgba(224, 224, 224, .5)',\r\n            textAlign: 'center',\r\n            padding: '0px 0px 0px 0px',\r\n            width: '20%'\r\n        },\r\n        \"& th:first-of-type\" : {\r\n            paddingLeft: theme.spacing.unit * 2,\r\n            borderLeft: 'none',\r\n            width: '10%'\r\n        },\r\n        \"& th:nth-child(2)\" : {\r\n            width: '10%'\r\n        },\r\n        \"& th:nth-child(3)\" : {\r\n            width: '5%'\r\n        },\r\n        \"& th:nth-child(7)\" : {\r\n            width: '15%'\r\n        }\r\n    },\r\n    tableBody: {\r\n        padding: '0px 0px 0px 0px',\r\n        height: theme.spacing.unit * 5,\r\n        \"& td\" : {\r\n            textAlign: 'center',\r\n            padding: '0px 0px 0px 0px',\r\n            borderLeft: '1px solid rgba(224, 224, 224, .5)',\r\n        },\r\n        \"& td:first-of-type\" : {\r\n            paddingLeft: theme.spacing.unit * 2,\r\n            borderLeft: 'none'\r\n        }\r\n    },\r\n    tdContent: {\r\n        textAlign:'left'\r\n    },\r\n    settingGrid: {\r\n        backgroundColor: 'antiquewhite'\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(TableList);\r\n"]},"metadata":{},"sourceType":"module"}