{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports['default'] = skinnable;\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _tcomb = require('tcomb');\n\nvar _tcomb2 = _interopRequireDefault(_tcomb);\n\nvar _isReactComponent = require('../isReactComponent');\n\nvar _isReactComponent2 = _interopRequireDefault(_isReactComponent);\n\nvar defaultGetLocals = function defaultGetLocals(props) {\n  return props;\n};\n\nfunction skinnable(template) {\n  return function (Component) {\n    if (process.env.NODE_ENV !== 'production') {\n      var _name = Component.name;\n\n      _tcomb2['default'].assert(_tcomb2['default'].maybe(_tcomb2['default'].Func).is(template), '@skinnable decorator can only be configured with a function');\n\n      _tcomb2['default'].assert(_isReactComponent2['default'](Component), '@skinnable decorator can only be applied to React.Component(s). Maybe did you type @skinnable instead of @skinnable()?');\n\n      _tcomb2['default'].assert(!_tcomb2['default'].Func.is(Component.prototype.render), '@skinnable decorator can only be applied to components not implementing the render() method. Please remove the render method of component ' + _name);\n\n      _tcomb2['default'].assert(_tcomb2['default'].maybe(_tcomb2['default'].Func).is(Component.prototype.getLocals), '@skinnable decorator requires getLocals() to be a function, check the component ' + _name);\n\n      if (template) {\n        _tcomb2['default'].assert(!_tcomb2['default'].Func.is(Component.prototype.template), '@skinnable decorator can only be applied to components not implementing the template(locals) method. Please remove the template method of component ' + _name);\n      } else {\n        _tcomb2['default'].assert(_tcomb2['default'].Func.is(Component.prototype.template), '@skinnable decorator requires a template(locals) method, add it to component ' + _name);\n      }\n    }\n\n    if (template) {\n      Component.prototype.template = template;\n    }\n\n    if (!Component.prototype.getLocals) {\n      Component.prototype.getLocals = defaultGetLocals;\n    }\n\n    Component.prototype.render = function () {\n      return this.template(this.getLocals(this.props));\n    };\n  };\n}\n\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}