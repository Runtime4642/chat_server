{"ast":null,"code":"import _objectSpread from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport Axios from 'axios';\nimport RSA from 'node-rsa';\nexport var initialState = {\n  isLoading: false,\n  // 로그인 요청\n  isLogging: false,\n  // 현재 로그인 상태\n  isLogouting: false,\n  // 로그아웃 요청\n  isSignout: false,\n  // 로그아웃 상태 \n  isAuthenticated: !!sessionStorage.getItem(\"id_token\"),\n  // login 및 getUser 유무\n  token: false,\n  // token\n  name: false,\n  // 사용자 name\n  id: false,\n  // 사용자 id\n  no: false,\n  // 사용자 no\n  auth: false,\n  // 권한\n  error: null,\n  // 에러 발생 유무\n  errorMessage: null // 에러 응답 코드\n\n};\nexport var START_LOGIN = \"Login/START_LOGIN\";\nexport var LOGIN_SUCCESS = \"Login/LOGIN_SUCCESS\";\nexport var LOGIN_FAILURE = \"Login/LOGIN_FAILURE\";\nexport var START_GET_USER = \"Get/START_GET_USER\";\nexport var GET_USER_SUCCESS = \"Get/GET_USER_SUCCESS\";\nexport var GET_USER_FAILURE = \"Get/GET_USER_FAILURE\";\nexport var RESET_ERROR = \"Login/RESET_ERROR\";\nexport var LOGIN_USER = \"Login/LOGIN_USER\";\nexport var START_LOGOUT = \"Logout/START_LOGOUT\";\nexport var SIGN_OUT_SUCCESS = \"Logout/SIGN_OUT_SUCCESS\";\nexport var startLogin = function startLogin() {\n  return {\n    type: START_LOGIN\n  };\n};\nexport var loginSuccess = function loginSuccess(token) {\n  return {\n    type: LOGIN_SUCCESS,\n    payload: {\n      token: token\n    }\n  };\n};\nexport var loginFailure = function loginFailure(message) {\n  return {\n    type: LOGIN_FAILURE,\n    payload: {\n      message: message\n    }\n  };\n};\nexport var resetError = function resetError() {\n  return {\n    type: RESET_ERROR\n  };\n};\nexport var startGetUser = function startGetUser() {\n  return {\n    type: START_GET_USER\n  };\n};\nexport var getUserSuccess = function getUserSuccess(response, token) {\n  return {\n    type: GET_USER_SUCCESS,\n    payload: {\n      response: response,\n      token: token\n    }\n  };\n};\nexport var getUserFailure = function getUserFailure() {\n  return {\n    type: GET_USER_FAILURE\n  };\n};\nexport var startLogout = function startLogout() {\n  return {\n    type: START_LOGOUT\n  };\n};\nexport var signOutSuccess = function signOutSuccess() {\n  return {\n    type: SIGN_OUT_SUCCESS\n  };\n};\nexport var loginUser = function loginUser(username, password) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var key, publicKey, encrypted;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // 로그인이 시작됨을 알리는 action 객체를 reducer에게 전달\n                dispatch(startLogin());\n                key = '-----BEGIN PUBLIC KEY-----\\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDVdmwYWqL0Dy7BGoYSHBxuBcgj7btuTRGrWduSwKasiPMhO4tfAttfXP1ajI4cSN0PKg3T0obIOLvU4knFjhdXlvcQifjoQHziiW1QTyWr96kRRH0QW2G35cMcqvw9eFmTzXoXEc/1f2sAJ6eDcrq9YrLwbG8QQT3pNddgT6dkFQIDAQAB\\n-----END PUBLIC KEY-----';\n                publicKey = new RSA(key);\n                encrypted = publicKey.encrypt(password, 'base64');\n                password = encrypted; // backend와 통신\n\n                _context.next = 7;\n                return Axios.post('http://218.39.221.104:8080/smartchecker/user/auth', {\n                  username: username,\n                  password: password\n                }).then(function (response) {\n                  // 로그인 성공시 성공을 알리는 action 객체를 reducer에게 전달\n                  if (response.data.result === 'fail') {\n                    dispatch(loginFailure(response.data.message));\n                  } else if (response.data.token) {\n                    sessionStorage.setItem(\"id_token\", response.data.token);\n                    sessionStorage.setItem(\"listkeyNo\", \"define\");\n                    sessionStorage.setItem(\"statekeyNo\", \"define\");\n                    sessionStorage.setItem(\"pagekeyNo\", \"define\");\n                    dispatch(loginSuccess(response.data.token));\n                  } else {\n                    //console.log(response);\n                    dispatch(loginFailure(response.data.message));\n                  }\n                }).catch(function (error) {\n                  // 로그인 실패시 실패를 알리는 action 객체를 reducer에게 전달\n                  dispatch(loginFailure(error.message));\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getUser = function getUser(token) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                dispatch(startGetUser()); // 다국어(언어) server에 넘길시 'Accept-Language'에 언어 설정\n\n                _context2.next = 3;\n                return Axios.get('http://218.39.221.104:8080/smartchecker/user', {\n                  headers: {\n                    'Authorization': 'Bearer ' + token\n                  }\n                }).then(function (response) {\n                  console.log(response);\n                  dispatch(getUserSuccess(response, token));\n                }).catch(function (error) {\n                  dispatch(getUserFailure());\n                });\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var signOut = function signOut(token) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                dispatch(startLogout());\n                _context3.next = 3;\n                return Axios.post('http://218.39.221.104:8080/smartchecker/user/logout', {\n                  token: token\n                }, {\n                  headers: {\n                    'Authorization': 'Bearer ' + token\n                  }\n                }).then(function (response) {\n                  // Storage 데이터들 전부 삭제\n                  localStorage.clear(); // id_token 삭제\n\n                  sessionStorage.removeItem(\"id_token\"); // key_No 삭제\n\n                  sessionStorage.removeItem(\"listkeyNo\");\n                  sessionStorage.removeItem(\"statekeyNo\");\n                  sessionStorage.removeItem(\"pagekeyNo\"); // alarm 개수 삭제\n\n                  sessionStorage.removeItem(\"alarmnum\"); // token이 sessionStorage에서 완전히 삭제되었을 경우 로그아웃 액션 실행\n\n                  if (!sessionStorage.getItem(\"id_token\")) {\n                    dispatch(signOutSuccess());\n                  }\n                }).catch(function (error) {//console.log(\"로그아웃 에러 응답\");\n                  //console.log(error);\n                });\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport default function LoginReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\n  var _ref4 = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref4.type,\n      payload = _ref4.payload;\n\n  switch (type) {\n    case START_LOGIN:\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case LOGIN_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        isAuthenticated: true,\n        token: payload.token,\n        error: null\n      });\n\n    case LOGIN_FAILURE:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: true,\n        errorMessage: payload.message\n      });\n\n    case START_GET_USER:\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case GET_USER_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        isLogging: true,\n        token: payload.token,\n        name: payload.response.data.name,\n        no: payload.response.data.no,\n        auth: payload.response.data.authorities[0].authority,\n        id: payload.response.data.username,\n        error: null\n      });\n\n    case GET_USER_FAILURE:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: true\n      });\n\n    case RESET_ERROR:\n      return {\n        error: false\n      };\n\n    case START_LOGOUT:\n      return _objectSpread({}, state, {\n        isLogouting: true\n      });\n\n    case SIGN_OUT_SUCCESS:\n      return {\n        isLoading: false,\n        isLogging: false,\n        isLogouting: false,\n        isSignout: true,\n        isAuthenticated: false,\n        token: false,\n        name: false,\n        id: false,\n        no: false,\n        auth: false,\n        error: null\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["F:/JAVA_WORKSPACE/frontend_react-20191018T023535Z-001/frontend_react/src/pages/login/LoginState.js"],"names":["Axios","RSA","initialState","isLoading","isLogging","isLogouting","isSignout","isAuthenticated","sessionStorage","getItem","token","name","id","no","auth","error","errorMessage","START_LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","START_GET_USER","GET_USER_SUCCESS","GET_USER_FAILURE","RESET_ERROR","LOGIN_USER","START_LOGOUT","SIGN_OUT_SUCCESS","startLogin","type","loginSuccess","payload","loginFailure","message","resetError","startGetUser","getUserSuccess","response","getUserFailure","startLogout","signOutSuccess","loginUser","username","password","dispatch","key","publicKey","encrypted","encrypt","post","then","data","result","setItem","catch","getUser","get","headers","console","log","signOut","localStorage","clear","removeItem","LoginReducer","state","authorities","authority"],"mappings":"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","sourcesContent":["import Axios from 'axios';\r\nimport RSA from 'node-rsa';\r\nexport const initialState = {\r\n  isLoading: false,         // 로그인 요청\r\n  isLogging: false,         // 현재 로그인 상태\r\n  isLogouting: false,       // 로그아웃 요청\r\n  isSignout: false,         // 로그아웃 상태 \r\n  isAuthenticated: !!sessionStorage.getItem(\"id_token\"),   // login 및 getUser 유무\r\n  token: false,             // token\r\n  name: false,              // 사용자 name\r\n  id: false,                // 사용자 id\r\n  no: false,                // 사용자 no\r\n  auth: false,              // 권한\r\n  error: null,              // 에러 발생 유무\r\n  errorMessage: null        // 에러 응답 코드\r\n};\r\n\r\nexport const START_LOGIN = \"Login/START_LOGIN\";\r\nexport const LOGIN_SUCCESS = \"Login/LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILURE = \"Login/LOGIN_FAILURE\";\r\n\r\nexport const START_GET_USER = \"Get/START_GET_USER\";\r\nexport const GET_USER_SUCCESS = \"Get/GET_USER_SUCCESS\";\r\nexport const GET_USER_FAILURE = \"Get/GET_USER_FAILURE\";\r\n\r\nexport const RESET_ERROR = \"Login/RESET_ERROR\";\r\nexport const LOGIN_USER = \"Login/LOGIN_USER\";\r\n\r\nexport const START_LOGOUT = \"Logout/START_LOGOUT\";\r\nexport const SIGN_OUT_SUCCESS = \"Logout/SIGN_OUT_SUCCESS\";\r\n\r\nexport const startLogin = () => ({\r\n  type: START_LOGIN\r\n});\r\n\r\nexport const loginSuccess = (token) => ({\r\n  type: LOGIN_SUCCESS,\r\n  payload : {\r\n    token : token\r\n  }\r\n});\r\n\r\nexport const loginFailure = (message) => ({\r\n  type: LOGIN_FAILURE,\r\n  payload : {\r\n    message : message\r\n  }\r\n});\r\n\r\nexport const resetError = () => ({\r\n  type: RESET_ERROR\r\n});\r\n\r\nexport const startGetUser = () => ({\r\n  type: START_GET_USER\r\n});\r\n\r\nexport const getUserSuccess = (response, token) => ({\r\n  type: GET_USER_SUCCESS,\r\n  payload : {\r\n    response : response,\r\n    token : token\r\n  }\r\n});\r\n\r\nexport const getUserFailure = () => ({\r\n  type: GET_USER_FAILURE\r\n})\r\n\r\nexport const startLogout = () => ({\r\n  type: START_LOGOUT\r\n})\r\n\r\nexport const signOutSuccess = () => ({\r\n  type: SIGN_OUT_SUCCESS\r\n});\r\n\r\nexport const loginUser = (username, password) =>{\r\n  return async (dispatch) => {\r\n      // 로그인이 시작됨을 알리는 action 객체를 reducer에게 전달\r\n      dispatch(startLogin());\r\n\r\n      let key='-----BEGIN PUBLIC KEY-----\\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDVdmwYWqL0Dy7BGoYSHBxuBcgj7btuTRGrWduSwKasiPMhO4tfAttfXP1ajI4cSN0PKg3T0obIOLvU4knFjhdXlvcQifjoQHziiW1QTyWr96kRRH0QW2G35cMcqvw9eFmTzXoXEc/1f2sAJ6eDcrq9YrLwbG8QQT3pNddgT6dkFQIDAQAB\\n-----END PUBLIC KEY-----'\r\n      const publicKey = new RSA(key);\r\n      const encrypted = publicKey.encrypt(password, 'base64');\r\n      password=encrypted;\r\n      // backend와 통신\r\n      await Axios.post('http://218.39.221.104:8080/smartchecker/user/auth', \r\n      { username, password })\r\n      .then((response) => {\r\n          // 로그인 성공시 성공을 알리는 action 객체를 reducer에게 전달\r\n          if(response.data.result === 'fail') {\r\n              dispatch(loginFailure(response.data.message));\r\n          } \r\n          else if (response.data.token){\r\n              sessionStorage.setItem(\"id_token\", response.data.token);\r\n              sessionStorage.setItem(\"listkeyNo\", \"define\");\r\n              sessionStorage.setItem(\"statekeyNo\", \"define\");\r\n              sessionStorage.setItem(\"pagekeyNo\", \"define\");\r\n              dispatch(loginSuccess(response.data.token));\r\n          } \r\n          else {\r\n              //console.log(response);\r\n              dispatch(loginFailure(response.data.message));\r\n          }\r\n      }).catch((error) => {\r\n          // 로그인 실패시 실패를 알리는 action 객체를 reducer에게 전달\r\n          dispatch(loginFailure(error.message));\r\n      });\r\n  };\r\n}\r\n\r\nexport const getUser = (token) => {\r\n  return async (dispatch) => {\r\n    dispatch(startGetUser());\r\n    \r\n    // 다국어(언어) server에 넘길시 'Accept-Language'에 언어 설정\r\n    await Axios.get('http://218.39.221.104:8080/smartchecker/user', {\r\n      headers : {\r\n        'Authorization' : 'Bearer ' + token\r\n      }\r\n    })\r\n    .then((response) => {\r\n      console.log(response);\r\n      dispatch(getUserSuccess(response, token));\r\n    })\r\n    .catch((error) => {\r\n      dispatch(getUserFailure());\r\n    })\r\n  }\r\n}\r\n\r\nexport const signOut = (token) => {\r\n  return async(dispatch) => {\r\n    dispatch(startLogout());\r\n    await Axios.post('http://218.39.221.104:8080/smartchecker/user/logout', { token }, {\r\n      headers : {\r\n        'Authorization' : 'Bearer ' + token\r\n      }\r\n    })\r\n    .then((response) => {\r\n      // Storage 데이터들 전부 삭제\r\n      localStorage.clear();\r\n      // id_token 삭제\r\n      sessionStorage.removeItem(\"id_token\");\r\n      // key_No 삭제\r\n      sessionStorage.removeItem(\"listkeyNo\");\r\n      sessionStorage.removeItem(\"statekeyNo\");\r\n      sessionStorage.removeItem(\"pagekeyNo\");\r\n      // alarm 개수 삭제\r\n      sessionStorage.removeItem(\"alarmnum\");\r\n  \r\n      // token이 sessionStorage에서 완전히 삭제되었을 경우 로그아웃 액션 실행\r\n      if(!sessionStorage.getItem(\"id_token\")) {\r\n          dispatch(signOutSuccess());\r\n        }\r\n    })\r\n    .catch((error) => {\r\n      //console.log(\"로그아웃 에러 응답\");\r\n      //console.log(error);\r\n    })\r\n  }\r\n};\r\n\r\nexport default function LoginReducer(state = initialState, { type, payload }) {\r\n  switch (type) {\r\n    case START_LOGIN:\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isAuthenticated: true,\r\n        token: payload.token,\r\n        error: null\r\n      };\r\n    case LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: true,\r\n        errorMessage: payload.message\r\n      };\r\n    case START_GET_USER:\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      };\r\n    case GET_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isLogging: true,\r\n        token: payload.token,\r\n        name: payload.response.data.name,\r\n        no: payload.response.data.no,\r\n        auth: payload.response.data.authorities[0].authority,\r\n        id: payload.response.data.username,\r\n        error: null\r\n      };\r\n    case GET_USER_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: true\r\n      };\r\n    case RESET_ERROR:\r\n      return {\r\n        error: false\r\n      };\r\n    case START_LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLogouting: true\r\n      };\r\n    case SIGN_OUT_SUCCESS:\r\n      return {\r\n        isLoading: false,\r\n        isLogging: false,\r\n        isLogouting: false,\r\n        isSignout: true,\r\n        isAuthenticated: false,\r\n        token: false,\r\n        name: false,\r\n        id: false,\r\n        no: false,\r\n        auth: false,\r\n        error: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}