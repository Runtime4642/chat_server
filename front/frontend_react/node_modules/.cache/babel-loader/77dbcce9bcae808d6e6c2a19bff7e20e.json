{"ast":null,"code":"var _jsxFileName = \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\src\\\\components\\\\workAttitude\\\\WorkAttitudeList\\\\WorkAttitudeList.js\";\nimport React, { Component } from 'react';\nimport { Badge } from 'react-bootstrap';\nimport { Grid, Table, TableRow, TableHead, TableBody, TableCell } from '@material-ui/core';\nimport { Button } from \"antd\";\nimport locale from 'locale';\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport \"../../list/TableList/TableList.css\";\nimport { withStyles } from \"@material-ui/core\";\n\nclass WorkAttitudeList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleShowModal = table => {\n      //console.log(table);\n      const handleChangeInput = this.props.handleChangeInput; //console.log(table.no);\n\n      handleChangeInput({\n        name: 'no',\n        value: table.no\n      });\n      handleChangeInput({\n        name: 'userNo',\n        value: table.userNo\n      });\n      handleChangeInput({\n        name: 'modal',\n        value: true\n      });\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          tables = _this$props.tables,\n          language = _this$props.language,\n          classes = _this$props.classes;\n    const handleShowModal = this.handleShowModal;\n    const TableList = tables.map((table, index) => {\n      const _table$toJS = table.toJS(),\n            userNo = _table$toJS.userNo,\n            workAttitudeList = _table$toJS.workAttitudeList,\n            name = _table$toJS.name,\n            applicationDate = _table$toJS.applicationDate,\n            day = _table$toJS.day,\n            startDay = _table$toJS.startDay,\n            endDay = _table$toJS.endDay,\n            dayEn = _table$toJS.dayEn,\n            workAttitudeListEn = _table$toJS.workAttitudeListEn,\n            stateEn = _table$toJS.stateEn,\n            content = _table$toJS.content,\n            contentEn = _table$toJS.contentEn,\n            state = _table$toJS.state;\n\n      let _ref = '',\n          badge = _ref.badge,\n          lContent = _ref.lContent,\n          lWorkAttitudeList = _ref.lWorkAttitudeList,\n          lState = _ref.lState,\n          lDay = _ref.lDay;\n\n      if ('en' === language) {\n        lContent = contentEn;\n        lDay = dayEn;\n        lWorkAttitudeList = workAttitudeListEn;\n        lState = stateEn;\n      } else if ('ko' === language) {\n        lContent = content;\n        lDay = day;\n        lWorkAttitudeList = workAttitudeList;\n        lState = state;\n      }\n\n      if (lState === locale.Normal[language]) {\n        badge = 'success';\n      } else {\n        badge = 'danger';\n      }\n\n      return /*#__PURE__*/React.createElement(TableRow, {\n        className: classes.tableBody,\n        key: index,\n        hover: true,\n        onClick: event => handleShowModal(table.toJS()),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        id: \"userNo\",\n        className: \"pl-3 fw-normal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }\n      }, userNo), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }\n      }, lWorkAttitudeList), /*#__PURE__*/React.createElement(TableCell, {\n        id: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }\n      }, name), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }\n      }, applicationDate, \"(\", lDay, \")\"), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      }, startDay, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 46\n        }\n      }, \" ~ \"), endDay), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }, lContent), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 36\n        }\n      }, /*#__PURE__*/React.createElement(Badge, {\n        variant: badge,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 40\n        }\n      }, lState))));\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: divWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"link\",\n      shape: \"round\",\n      icon: \"download\",\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ReactHTMLTableToExcel, {\n      id: \"test-table-xls-button\",\n      className: \"css\",\n      table: \"workAttitudeTable\",\n      filename: \"workAttitudeTableXLS\",\n      sheet: \"workAttitudeTableXLS\",\n      buttonText: \"Download\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        marginTop: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      id: \"workAttitudeTable\",\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      className: classes.tableHead,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 48\n      }\n    }, \"User No\")), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 48\n      }\n    }, locale.WorkAttitudeItem[language])), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 48\n      }\n    }, locale.Name[language])), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 48\n      }\n    }, locale.Apply_period[language])), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 48\n      }\n    }, locale.workAttitudePeriod[language])), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 48\n      }\n    }, locale.WorkAttitudeContents[language])), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 48\n      }\n    }, locale.State[language])))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }\n    }, TableList)))));\n  }\n\n}\n\nconst divWrapper = {\n  height: \"100%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"flex-end\"\n};\n\nconst styles = theme => ({\n  tableHead: {\n    backgroundColor: '#fafafa',\n    borderTop: '2px solid rgba(224, 224, 224, .5)',\n    height: theme.spacing.unit * 6,\n    \"& th\": {\n      borderBottom: '2px solid rgba(224, 224, 224, .5)',\n      borderLeft: '1px solid rgba(224, 224, 224, .5)',\n      textAlign: 'center',\n      padding: '0px 0px 0px 0px'\n    },\n    \"& th:first-of-type\": {\n      paddingLeft: theme.spacing.unit * 2,\n      borderLeft: 'none',\n      width: '10%'\n    },\n    \"& th:nth-child(2)\": {\n      width: '10%'\n    },\n    \"& th:nth-child(3)\": {\n      width: '5%'\n    },\n    \"& th:nth-child(4)\": {\n      width: '15%'\n    },\n    \"& th:nth-child(5)\": {\n      width: '20%'\n    },\n    \"& th:nth-child(6)\": {\n      width: '30%'\n    },\n    \"& th:nth-child(7)\": {\n      width: '10%'\n    }\n  },\n  tableBody: {\n    padding: '0px 0px 0px 0px',\n    height: theme.spacing.unit * 5,\n    \"& td\": {\n      textAlign: 'center',\n      padding: '0px 0px 0px 0px',\n      borderLeft: '1px solid rgba(224, 224, 224, .5)',\n      \"& #content\": {\n        textAlign: 'left'\n      }\n    },\n    \"& td:first-of-type\": {\n      paddingLeft: theme.spacing.unit * 2,\n      borderLeft: 'none'\n    },\n    \"& td:nth-child(6)\": {\n      textAlign: 'left',\n      paddingLeft: theme.spacing.unit * 3\n    }\n  },\n  tdContent: {\n    textAlign: 'left'\n  },\n  settingGrid: {\n    backgroundColor: 'antiquewhite'\n  }\n});\n\nexport default withStyles(styles)(WorkAttitudeList);","map":{"version":3,"sources":["F:/JAVA_WORKSPACE/frontend_react-20191018T023535Z-001/frontend_react/src/components/workAttitude/WorkAttitudeList/WorkAttitudeList.js"],"names":["React","Component","Badge","Grid","Table","TableRow","TableHead","TableBody","TableCell","Button","locale","ReactHTMLTableToExcel","withStyles","WorkAttitudeList","handleShowModal","table","handleChangeInput","props","name","value","no","userNo","render","tables","language","classes","TableList","map","index","toJS","workAttitudeList","applicationDate","day","startDay","endDay","dayEn","workAttitudeListEn","stateEn","content","contentEn","state","badge","lContent","lWorkAttitudeList","lState","lDay","Normal","tableBody","event","divWrapper","marginTop","tableHead","WorkAttitudeItem","Name","Apply_period","workAttitudePeriod","WorkAttitudeContents","State","height","display","flexDirection","justifyContent","alignItems","styles","theme","backgroundColor","borderTop","spacing","unit","borderBottom","borderLeft","textAlign","padding","paddingLeft","width","tdContent","settingGrid"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Badge} from 'react-bootstrap';\r\nimport {Grid, Table, TableRow, TableHead, TableBody, TableCell} from '@material-ui/core';\r\nimport {Button} from \"antd\";\r\nimport locale from 'locale';\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\nimport \"../../list/TableList/TableList.css\";\r\nimport { withStyles } from \"@material-ui/core\";\r\n\r\n\r\nclass WorkAttitudeList extends Component {\r\n\r\n    handleShowModal = (table) => {\r\n        //console.log(table);\r\n        const {handleChangeInput} = this.props;\r\n        //console.log(table.no);\r\n        handleChangeInput({name: 'no', value: table.no});\r\n        handleChangeInput({name: 'userNo', value: table.userNo});\r\n\r\n        handleChangeInput({name: 'modal', value: true});\r\n    }\r\n\r\n    render() {\r\n        const {tables, language, classes} = this.props;\r\n        const {handleShowModal} = this;\r\n        const TableList = tables.map(\r\n            (table, index) => {\r\n                const {\r\n                    userNo, workAttitudeList, name, applicationDate, day, startDay, endDay,\r\n                    dayEn, workAttitudeListEn, stateEn, content, contentEn, state\r\n                } = table.toJS();\r\n                let {badge, lContent, lWorkAttitudeList, lState, lDay} = '';\r\n\r\n                if ('en' === language) {\r\n                    lContent = contentEn;\r\n                    lDay = dayEn;\r\n                    lWorkAttitudeList = workAttitudeListEn;\r\n                    lState = stateEn;\r\n                } else if ('ko' === language) {\r\n                    lContent = content;\r\n                    lDay = day;\r\n                    lWorkAttitudeList = workAttitudeList;\r\n                    lState = state;\r\n                }\r\n\r\n                if (lState === locale.Normal[language]) {\r\n                    badge = 'success';\r\n                } else {\r\n                    badge = 'danger';\r\n                }\r\n\r\n                return (\r\n                    <TableRow className={classes.tableBody} key={index}hover onClick={event => handleShowModal(table.toJS())}>\r\n                        <TableCell id=\"userNo\" className=\"pl-3 fw-normal\">{userNo}</TableCell>\r\n                        <TableCell>{lWorkAttitudeList}</TableCell>\r\n                        <TableCell id=\"name\">{name}</TableCell>\r\n                        <TableCell>{applicationDate}({lDay})</TableCell>\r\n                        <TableCell>{startDay}<span> ~ </span>{endDay}</TableCell>\r\n                        <TableCell>{lContent}</TableCell>\r\n                        <TableCell><h6><Badge variant={badge}>{lState}</Badge></h6></TableCell>\r\n                    </TableRow>\r\n                )\r\n            }\r\n        );\r\n        return (\r\n            <React.Fragment>\r\n                <div style={divWrapper}>\r\n                    <Button type=\"link\" shape=\"round\" icon=\"download\" size=\"large\">\r\n                        <ReactHTMLTableToExcel\r\n                            id=\"test-table-xls-button\"\r\n                            className=\"css\"\r\n                            table=\"workAttitudeTable\"\r\n                            filename=\"workAttitudeTableXLS\"\r\n                            sheet=\"workAttitudeTableXLS\"\r\n                            buttonText=\"Download\"\r\n                        />\r\n                    </Button>\r\n                </div>\r\n                <Grid item xs={12} style={{marginTop: '10px'}}>\r\n                    <div>\r\n                        <Table id=\"workAttitudeTable\" className=\"mb-0\">\r\n                            <TableHead>\r\n                                <TableRow className={classes.tableHead} >\r\n                                    <TableCell><b>User No</b></TableCell>\r\n                                    <TableCell><b>{locale.WorkAttitudeItem[language]}</b></TableCell>\r\n                                    <TableCell><b>{locale.Name[language]}</b></TableCell>\r\n                                    <TableCell><b>{locale.Apply_period[language]}</b></TableCell>\r\n                                    <TableCell><b>{locale.workAttitudePeriod[language]}</b></TableCell>\r\n                                    <TableCell><b>{locale.WorkAttitudeContents[language]}</b></TableCell>\r\n                                    <TableCell><b>{locale.State[language]}</b></TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {TableList}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </div>\r\n                </Grid>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst divWrapper = {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-end\",\r\n}\r\n\r\nconst styles = theme => ({\r\n    tableHead: {\r\n        backgroundColor: '#fafafa',\r\n        borderTop: '2px solid rgba(224, 224, 224, .5)',\r\n        height: theme.spacing.unit * 6,\r\n        \"& th\" : {\r\n            borderBottom: '2px solid rgba(224, 224, 224, .5)',\r\n            borderLeft: '1px solid rgba(224, 224, 224, .5)',\r\n            textAlign: 'center',\r\n            padding: '0px 0px 0px 0px',\r\n        },\r\n        \"& th:first-of-type\" : {\r\n            paddingLeft: theme.spacing.unit * 2,\r\n            borderLeft: 'none',\r\n            width: '10%'\r\n        },\r\n        \"& th:nth-child(2)\" : {\r\n            width: '10%'\r\n        },\r\n        \"& th:nth-child(3)\" : {\r\n            width: '5%'\r\n        },\r\n        \"& th:nth-child(4)\" : {\r\n            width: '15%'\r\n        },\r\n        \"& th:nth-child(5)\" : {\r\n            width: '20%'\r\n        },\r\n        \"& th:nth-child(6)\" : {\r\n            width: '30%'\r\n        },\r\n        \"& th:nth-child(7)\" : {\r\n            width: '10%'\r\n        }\r\n    },\r\n    tableBody: {\r\n        padding: '0px 0px 0px 0px',\r\n        height: theme.spacing.unit * 5,\r\n        \"& td\" : {\r\n            textAlign: 'center',\r\n            padding: '0px 0px 0px 0px',\r\n            borderLeft: '1px solid rgba(224, 224, 224, .5)',\r\n            \"& #content\" : {\r\n                textAlign: 'left'\r\n            }\r\n        },\r\n        \"& td:first-of-type\" : {\r\n            paddingLeft: theme.spacing.unit * 2,\r\n            borderLeft: 'none'\r\n        },\r\n        \"& td:nth-child(6)\" : {\r\n            textAlign: 'left',\r\n            paddingLeft: theme.spacing.unit * 3\r\n        }\r\n    },\r\n    tdContent: {\r\n        textAlign:'left'\r\n    },\r\n    settingGrid: {\r\n        backgroundColor: 'antiquewhite'\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(WorkAttitudeList);\r\n"]},"metadata":{},"sourceType":"module"}