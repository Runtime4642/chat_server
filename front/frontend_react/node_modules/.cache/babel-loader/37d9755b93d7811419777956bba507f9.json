{"ast":null,"code":"import _regeneratorRuntime from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\src\\\\containers\\\\list\\\\PaginationContainer.js\";\nimport React, { Component } from 'react';\nimport Pagination from 'components/list/Pagination';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as listActions from 'store/modules/pagination';\nimport * as tableActions from 'store/modules/list';\n\nclass PaginationContainer extends Component {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n\n    this.handlePageChange = pageNumber => {\n      const _this$props = this.props,\n            activePage = _this$props.activePage,\n            ListActions = _this$props.ListActions;\n      ListActions.pageChange({\n        activePage,\n        pageNumber\n      });\n      this.handleList(pageNumber);\n    };\n\n    this.handlePage = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _this$props2, ListActions, auth, token, loginUserNo, keyNo;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _this$props2 = _this.props, ListActions = _this$props2.ListActions, auth = _this$props2.auth, token = _this$props2.token, loginUserNo = _this$props2.loginUserNo;\n            keyNo = null;\n\n            if (sessionStorage.getItem(\"pagekeyNo\") !== \"define\") {\n              keyNo = sessionStorage.getItem(\"pagekeyNo\");\n              sessionStorage.removeItem(\"pagekeyNo\");\n              sessionStorage.setItem(\"pagekeyNo\", \"define\");\n            }\n\n            _context.prev = 3;\n\n            if (!(auth === \"ROLE_ADMIN\" && keyNo === null)) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.next = 7;\n            return ListActions.getPage(token);\n\n          case 7:\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](3);\n            console.log(_context.t0);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[3, 9]]);\n    }));\n\n    this.handleList = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(pageNumber) {\n        var _this$props3, TableActions, searchFromDate, searchToDate, userName, searchUserNo, no, searchState, select, language, token, paramNo, search;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$props3 = _this.props, TableActions = _this$props3.TableActions, searchFromDate = _this$props3.searchFromDate, searchToDate = _this$props3.searchToDate, userName = _this$props3.userName, searchUserNo = _this$props3.searchUserNo, no = _this$props3.no, searchState = _this$props3.searchState, select = _this$props3.select, language = _this$props3.language;\n              token = _this.props.token;\n              paramNo = no;\n\n              if (!(searchFromDate === '' && searchToDate === '' && userName === '' && searchUserNo === '' && searchState === '')) {\n                _context2.next = 14;\n                break;\n              }\n\n              _context2.prev = 4;\n              _context2.next = 7;\n              return TableActions.getTableList('', pageNumber, select, token, language);\n\n            case 7:\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](4);\n              console.log(_context2.t0);\n\n            case 12:\n              _context2.next = 23;\n              break;\n\n            case 14:\n              _context2.prev = 14;\n              search = {\n                searchFromDate,\n                searchToDate,\n                userName,\n                paramNo,\n                searchState\n              };\n              _context2.next = 18;\n              return TableActions.getTableList(search, pageNumber, select, token, language);\n\n            case 18:\n              _context2.next = 23;\n              break;\n\n            case 20:\n              _context2.prev = 20;\n              _context2.t1 = _context2[\"catch\"](14);\n              console.log(_context2.t1);\n\n            case 23:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[4, 9], [14, 20]]);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n  }\n\n  componentWillMount() {\n    this.handlePage();\n  }\n\n  componentDidMount() {\n    const ListActions = this.props.ListActions;\n    ListActions.initialize();\n  }\n\n  render() {\n    const _this$props4 = this.props,\n          activePage = _this$props4.activePage,\n          totalCount = _this$props4.totalCount,\n          changeView = _this$props4.changeView;\n    if (changeView !== 'table') return null;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Pagination, {\n      activePage: activePage,\n      totalCount: totalCount,\n      onChange: this.handlePageChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default connect(state => ({\n  activePage: state.pagination.get(\"activePage\"),\n  totalCount: state.pagination.get(\"totalCount\"),\n  searchFromDate: state.list.get(\"searchFromDate\"),\n  searchToDate: state.list.get(\"searchToDate\"),\n  userName: state.list.get(\"userName\"),\n  searchState: state.list.get(\"searchState\"),\n  searchUserNo: state.list.get(\"searchUserNo\"),\n  no: state.list.get(\"no\"),\n  select: state.list.get('select'),\n  tables: state.list.get(\"tables\"),\n  changeView: state.list.get('changeView'),\n  token: state.login.token,\n  auth: state.login.auth,\n  loginUserNo: state.login.no,\n  language: state.language.language\n}), dispatch => ({\n  ListActions: bindActionCreators(listActions, dispatch),\n  TableActions: bindActionCreators(tableActions, dispatch)\n}))(PaginationContainer);","map":{"version":3,"sources":["F:/JAVA_WORKSPACE/frontend_react-20191018T023535Z-001/frontend_react/src/containers/list/PaginationContainer.js"],"names":["React","Component","Pagination","bindActionCreators","connect","listActions","tableActions","PaginationContainer","handlePageChange","pageNumber","props","activePage","ListActions","pageChange","handleList","handlePage","auth","token","loginUserNo","keyNo","sessionStorage","getItem","removeItem","setItem","getPage","console","log","TableActions","searchFromDate","searchToDate","userName","searchUserNo","no","searchState","select","language","paramNo","getTableList","search","componentWillMount","componentDidMount","initialize","render","totalCount","changeView","state","pagination","get","list","tables","login","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Pagination from 'components/list/Pagination';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport * as listActions from 'store/modules/pagination';\r\nimport * as tableActions from 'store/modules/list';\r\n\r\n\r\nclass PaginationContainer extends Component {\r\n\r\n    handlePageChange = (pageNumber) =>{\r\n        const {activePage, ListActions} = this.props;\r\n\r\n        ListActions.pageChange({activePage, pageNumber});\r\n        this.handleList(pageNumber);\r\n    }\r\n\r\n    handlePage = async() => {\r\n        const {ListActions, auth, token, loginUserNo } = this.props;\r\n        let keyNo = null;\r\n        if(sessionStorage.getItem(\"pagekeyNo\") !== \"define\") {\r\n            keyNo = sessionStorage.getItem(\"pagekeyNo\");\r\n            sessionStorage.removeItem(\"pagekeyNo\");\r\n            sessionStorage.setItem(\"pagekeyNo\", \"define\");\r\n        }\r\n        try {\r\n            \r\n            if(auth===\"ROLE_ADMIN\" && keyNo === null){\r\n                await ListActions.getPage(token);\r\n            }\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    handleList = async(pageNumber) => {\r\n        const {TableActions, searchFromDate, searchToDate, userName, searchUserNo, no, searchState, select, language} = this.props;\r\n        const { token } = this.props;\r\n        const paramNo = no;\r\n\r\n        if(searchFromDate === '' && searchToDate === '' && userName === '' && searchUserNo === '' && searchState === '') {\r\n            try {\r\n                //console.log(\"change page : \" + pageNumber);\r\n                //console.log(\"select : \" + select);\r\n\r\n                await TableActions.getTableList('', pageNumber, select, token, language);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        }\r\n        else{\r\n            try{\r\n                const search = {searchFromDate, searchToDate, userName, paramNo, searchState};\r\n\r\n                await TableActions.getTableList(search, pageNumber, select, token, language);\r\n            }\r\n            catch(e){\r\n                console.log(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.handlePage();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { ListActions } = this.props;\r\n\r\n        ListActions.initialize();\r\n    }\r\n\r\n    render(){\r\n        const {activePage, totalCount, changeView} = this.props;\r\n        if(changeView !== 'table') return null;\r\n\r\n        return(\r\n            <div>\r\n                <Pagination activePage={activePage} totalCount={totalCount} onChange={this.handlePageChange}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        activePage: state.pagination.get(\"activePage\"),\r\n        totalCount: state.pagination.get(\"totalCount\"),\r\n        searchFromDate: state.list.get(\"searchFromDate\"),\r\n        searchToDate: state.list.get(\"searchToDate\"),\r\n        userName: state.list.get(\"userName\"),\r\n        searchState: state.list.get(\"searchState\"),\r\n        searchUserNo: state.list.get(\"searchUserNo\"),\r\n        no: state.list.get(\"no\"),\r\n        select: state.list.get('select'),\r\n        tables: state.list.get(\"tables\"),\r\n        changeView: state.list.get('changeView'),\r\n        token: state.login.token,\r\n        auth: state.login.auth,\r\n        loginUserNo: state.login.no,\r\n        language: state.language.language\r\n    }),\r\n    (dispatch) => ({\r\n        ListActions: bindActionCreators(listActions, dispatch),\r\n        TableActions: bindActionCreators(tableActions, dispatch)\r\n    })\r\n)(PaginationContainer);"]},"metadata":{},"sourceType":"module"}