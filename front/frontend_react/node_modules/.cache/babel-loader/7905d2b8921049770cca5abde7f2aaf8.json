{"ast":null,"code":"import _regeneratorRuntime from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\src\\\\containers\\\\record\\\\RecordSearchContainer.js\";\nimport React, { Component } from 'react';\nimport RecordSearch from 'components/record/RecordSearch/RecordSearch';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as recordActions from 'store/modules/record';\nimport * as paginationActions from 'store/modules/pagination';\nimport * as stateActions from 'store/modules/state';\n\nvar RecordSearchContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RecordSearchContainer, _Component);\n\n  function RecordSearchContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RecordSearchContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RecordSearchContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleChangeInput = function (_ref) {\n      var name = _ref.name,\n          value = _ref.value;\n      var RecordActions = _this.props.RecordActions;\n      RecordActions.changeInput({\n        name: name,\n        value: value\n      });\n    };\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var searchUserNo,\n          select,\n          userName,\n          _this$props,\n          startdate,\n          enddate,\n          content,\n          name,\n          no,\n          recordType,\n          read,\n          activePage,\n          RecordActions,\n          PaginationActions,\n          StateActions,\n          _this$props2,\n          token,\n          auth,\n          loginUserNo,\n          language,\n          pageNumber,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              searchUserNo = _args.length > 0 && _args[0] !== undefined ? _args[0] : '';\n              select = _args.length > 1 ? _args[1] : undefined;\n              userName = _args.length > 2 ? _args[2] : undefined;\n              _this$props = _this.props, startdate = _this$props.startdate, enddate = _this$props.enddate, content = _this$props.content, name = _this$props.name, no = _this$props.no, recordType = _this$props.recordType, read = _this$props.read, activePage = _this$props.activePage, RecordActions = _this$props.RecordActions, PaginationActions = _this$props.PaginationActions, StateActions = _this$props.StateActions;\n              _this$props2 = _this.props, token = _this$props2.token, auth = _this$props2.auth, loginUserNo = _this$props2.loginUserNo, language = _this$props2.language;\n              pageNumber = 1;\n\n              if (auth === \"ROLE_USER\") {\n                select = true;\n                searchUserNo = loginUserNo;\n              } //console.log(searchUserNo);\n              //console.log(select);\n              //console.log(userName);\n              //console.log(no);\n              //console.log(name);\n              //console.log(read);\n              //console.log(language);\n\n\n              PaginationActions.pageChange({\n                activePage: activePage,\n                pageNumber: pageNumber\n              });\n              _context.prev = 8;\n\n              if (!(startdate === \"\" && enddate === \"\" && userName === \"\" && content === \"\" && recordType === \"전체\" && read === '전체' && select === false)) {\n                _context.next = 14;\n                break;\n              }\n\n              _context.next = 12;\n              return PaginationActions.getRecordTotal(token);\n\n            case 12:\n              _context.next = 22;\n              break;\n\n            case 14:\n              _context.next = 16;\n              return PaginationActions.getSearchRecordPage(startdate, enddate, userName, content, recordType, select, searchUserNo, read, token, language);\n\n            case 16:\n              RecordActions.changeInput({\n                name: \"subStartdate\",\n                value: startdate\n              });\n              RecordActions.changeInput({\n                name: \"subEnddate\",\n                value: enddate\n              });\n              RecordActions.changeInput({\n                name: \"subType\",\n                value: recordType\n              });\n              RecordActions.changeInput({\n                name: \"subRead\",\n                value: read\n              });\n              RecordActions.changeInput({\n                name: \"subContent\",\n                value: content\n              });\n              RecordActions.changeInput({\n                name: \"subSelect\",\n                value: true\n              });\n\n            case 22:\n              _context.next = 24;\n              return StateActions.getRecordSearchStateList(startdate, enddate, userName, content, recordType, select, searchUserNo, read, token, language);\n\n            case 24:\n              _context.next = 26;\n              return RecordActions.getSearchRecordList(pageNumber, startdate, enddate, userName, content, recordType, select, searchUserNo, read, token, language);\n\n            case 26:\n              _context.next = 31;\n              break;\n\n            case 28:\n              _context.prev = 28;\n              _context.t0 = _context[\"catch\"](8);\n              console.log(_context.t0);\n\n            case 31:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[8, 28]]);\n    }));\n    return _this;\n  }\n\n  _createClass(RecordSearchContainer, [{\n    key: \"handleState\",\n    value: function handleState(name, value) {\n      var RecordActions = this.props.RecordActions;\n      RecordActions.changeInput({\n        name: name,\n        value: value\n      });\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      if (nextProps.no !== this.props.no) {\n        this.handleChangeInput({\n          name: 'no',\n          value: nextProps.no\n        });\n      }\n\n      if (nextProps.select !== this.props.select) {\n        this.handleChangeInput({\n          name: 'select',\n          value: nextProps.select\n        });\n      }\n\n      if (nextProps.name !== this.props.name) {\n        this.handleChangeInput({\n          name: 'name',\n          value: nextProps.name\n        });\n      }\n\n      return true;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var RecordActions = this.props.RecordActions;\n      RecordActions.initialize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          startdate = _this$props3.startdate,\n          enddate = _this$props3.enddate,\n          name = _this$props3.name,\n          content = _this$props3.content,\n          recordType = _this$props3.recordType,\n          token = _this$props3.token,\n          read = _this$props3.read,\n          select = _this$props3.select,\n          no = _this$props3.no,\n          auth = _this$props3.auth,\n          language = _this$props3.language;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(RecordSearch, {\n        startdate: startdate,\n        enddate: enddate,\n        name: name,\n        content: content,\n        recordType: recordType,\n        read: read,\n        select: select,\n        no: no,\n        onSubmit: this.handleSubmit,\n        onChangeInput: this.handleChangeInput,\n        token: token,\n        auth: auth,\n        language: language,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return RecordSearchContainer;\n}(Component);\n\nexport default connect(function (state) {\n  return {\n    startdate: state.record.get(\"startdate\"),\n    enddate: state.record.get(\"enddate\"),\n    name: state.record.get(\"name\"),\n    content: state.record.get(\"newContent\"),\n    recordType: state.record.get('newRecordType'),\n    read: state.record.get('newRead'),\n    select: state.record.get('select'),\n    no: state.record.get('no'),\n    activePage: state.pagination.get(\"activePage\"),\n    token: state.login.token,\n    auth: state.login.auth,\n    loginUserNo: state.login.no,\n    language: state.language.language\n  };\n}, function (dispatch) {\n  return {\n    RecordActions: bindActionCreators(recordActions, dispatch),\n    PaginationActions: bindActionCreators(paginationActions, dispatch),\n    StateActions: bindActionCreators(stateActions, dispatch)\n  };\n})(RecordSearchContainer);","map":{"version":3,"sources":["F:/JAVA_WORKSPACE/frontend_react-20191018T023535Z-001/frontend_react/src/containers/record/RecordSearchContainer.js"],"names":["React","Component","RecordSearch","bindActionCreators","connect","recordActions","paginationActions","stateActions","RecordSearchContainer","handleChangeInput","name","value","RecordActions","props","changeInput","handleSubmit","searchUserNo","select","userName","startdate","enddate","content","no","recordType","read","activePage","PaginationActions","StateActions","token","auth","loginUserNo","language","pageNumber","pageChange","getRecordTotal","getSearchRecordPage","getRecordSearchStateList","getSearchRecordList","console","log","nextProps","nextState","initialize","state","record","get","pagination","login","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport RecordSearch from 'components/record/RecordSearch/RecordSearch';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport * as recordActions from 'store/modules/record';\r\nimport * as paginationActions from 'store/modules/pagination';\r\nimport * as stateActions from 'store/modules/state';\r\n\r\n\r\nclass RecordSearchContainer extends Component {\r\n\r\n    handleChangeInput = ({name, value}) => {\r\n        const {RecordActions} = this.props;\r\n\r\n        RecordActions.changeInput({name, value});\r\n    }\r\n\r\n    handleState(name, value) {\r\n        const {RecordActions} = this.props;\r\n\r\n        RecordActions.changeInput({name, value});\r\n    }\r\n\r\n    handleSubmit = async(searchUserNo = '',select,userName) => {\r\n        const {startdate, enddate, content, name, no, recordType, read, activePage, RecordActions, PaginationActions, StateActions} = this.props;\r\n        const { token, auth, loginUserNo, language } = this.props;\r\n        const pageNumber = 1;\r\n\r\n        if(auth === \"ROLE_USER\"){\r\n            select = true;\r\n            searchUserNo = loginUserNo;\r\n        }\r\n\r\n        //console.log(searchUserNo);\r\n        //console.log(select);\r\n        //console.log(userName);\r\n        //console.log(no);\r\n        //console.log(name);\r\n        //console.log(read);\r\n        //console.log(language);\r\n\r\n        PaginationActions.pageChange({activePage, pageNumber});\r\n        try{\r\n            if(startdate === \"\" && enddate === \"\" && userName === \"\" && content === \"\" && recordType === \"전체\" && read === '전체' && select === false){\r\n                await PaginationActions.getRecordTotal(token);\r\n            }\r\n            else {\r\n                await PaginationActions.getSearchRecordPage(startdate, enddate, userName, content, recordType, select, searchUserNo, read, token, language);\r\n                RecordActions.changeInput({\r\n                    name: \"subStartdate\", value: startdate\r\n                });\r\n                RecordActions.changeInput({\r\n                    name: \"subEnddate\", value: enddate\r\n                });\r\n                RecordActions.changeInput({\r\n                    name: \"subType\", value: recordType\r\n                });\r\n                RecordActions.changeInput({\r\n                    name: \"subRead\", value: read\r\n                });\r\n                RecordActions.changeInput({\r\n                    name: \"subContent\", value: content\r\n                });\r\n                RecordActions.changeInput({\r\n                    name: \"subSelect\", value: true\r\n                });\r\n            }\r\n            await StateActions.getRecordSearchStateList(startdate, enddate, userName, content, recordType, select, searchUserNo, read, token, language);\r\n            await RecordActions.getSearchRecordList(pageNumber, startdate, enddate, userName, content, recordType, select, searchUserNo, read, token, language);\r\n        } catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextProps.no !== this.props.no){\r\n            this.handleChangeInput({name: 'no', value: nextProps.no});\r\n        }\r\n\r\n        if(nextProps.select !== this.props.select){\r\n            this.handleChangeInput({name: 'select', value: nextProps.select});\r\n        }\r\n\r\n        if(nextProps.name !== this.props.name){\r\n            this.handleChangeInput({name: 'name', value: nextProps.name});\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {RecordActions} = this.props;\r\n\r\n        RecordActions.initialize();\r\n    }\r\n\r\n    render(){\r\n        const {startdate, enddate, name, content, recordType, token, read, select, no, auth, language} = this.props;\r\n\r\n        return(\r\n            <div>\r\n                <RecordSearch startdate={startdate} enddate={enddate} name={name} content={content} recordType={recordType} read={read} select={select} no={no}\r\n                              onSubmit={this.handleSubmit} onChangeInput={this.handleChangeInput} token={token} auth={auth} language={language}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        startdate: state.record.get(\"startdate\"),\r\n        enddate: state.record.get(\"enddate\"),\r\n        name: state.record.get(\"name\"),\r\n        content: state.record.get(\"newContent\"),\r\n        recordType: state.record.get('newRecordType'),\r\n        read: state.record.get('newRead'),\r\n        select: state.record.get('select'),\r\n        no: state.record.get('no'),\r\n        activePage: state.pagination.get(\"activePage\"),\r\n        token: state.login.token,\r\n        auth: state.login.auth,\r\n        loginUserNo: state.login.no,\r\n        language: state.language.language\r\n    }),\r\n    (dispatch) => ({\r\n        RecordActions: bindActionCreators(recordActions, dispatch),\r\n        PaginationActions: bindActionCreators(paginationActions, dispatch),\r\n        StateActions: bindActionCreators(stateActions, dispatch)\r\n})\r\n)(RecordSearchContainer);"]},"metadata":{},"sourceType":"module"}