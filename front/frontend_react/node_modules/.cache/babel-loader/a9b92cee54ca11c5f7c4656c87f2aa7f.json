{"ast":null,"code":"import _classCallCheck from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\src\\\\components\\\\service\\\\BreakTimeList\\\\BreakTimeList.js\";\nimport React, { Component } from 'react';\nimport { Grid, Table, TableRow, TableHead, TableBody, TableCell } from '@material-ui/core';\nimport { Badge } from 'react-bootstrap';\nimport { Button } from 'antd';\nimport locale from 'locale';\nimport { Typography } from \"components/Wrappers\";\nimport { withStyles } from \"@material-ui/core\";\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport \"../../list/TableList/TableList.css\";\n\nvar BreakTimeList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BreakTimeList, _Component);\n\n  function BreakTimeList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BreakTimeList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BreakTimeList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleShowModal = function (table) {\n      //console.log(table);\n      var handleChangeInput = _this.props.handleChangeInput;\n      handleChangeInput({\n        name: 'no',\n        value: table.no\n      });\n      handleChangeInput({\n        name: 'modal',\n        value: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BreakTimeList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          tables = _this$props.tables,\n          language = _this$props.language,\n          classes = _this$props.classes;\n      var BreakTimeList = tables.map(function (table, index) {\n        var _table$toJS = table.toJS(),\n            start = _table$toJS.start,\n            end = _table$toJS.end,\n            description = _table$toJS.description,\n            descriptionEn = _table$toJS.descriptionEn,\n            use = _table$toJS.use,\n            updateTime = _table$toJS.updateTime;\n\n        var badge = '';\n\n        if (use === true) {\n          badge = 'success';\n        } else {\n          badge = 'danger';\n        }\n\n        if (language === \"en\") {\n          description = descriptionEn;\n        } else {\n          use === true ? use = '사용' : use = '사용안함';\n        }\n\n        return React.createElement(TableRow, {\n          className: classes.tableBody,\n          hover: true,\n          key: index,\n          onClick: function onClick(event) {\n            return _this2.handleShowModal(table.toJS());\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, start), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, end), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, description), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, updateTime), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(Badge, {\n          variant: badge,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, String(use))));\n      });\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          marginTop: '8px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.tableHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: classes.subTitle,\n        variant: \"h4\",\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, locale.breakTimeList[language])), React.createElement(Button, {\n        type: \"link\",\n        shape: \"round\",\n        icon: \"download\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(ReactHTMLTableToExcel, {\n        id: \"test-table-xls-button\",\n        className: \"css\",\n        table: \"breakTimeTable\",\n        filename: \"breakTimeTableXLS\",\n        sheet: \"breakTimeTableXLS\",\n        buttonText: \"Download\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }))), React.createElement(Table, {\n        id: \"breakTimeTable\",\n        className: \"mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        className: classes.tableHead,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, locale.startTime[language])), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, locale.endTime[language])), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, locale.breakTimeExplanation[language])), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, locale.updateTime[language])), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, locale.use[language])))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, BreakTimeList))));\n    }\n  }]);\n\n  return BreakTimeList;\n}(Component);\n\nvar styles = function styles(theme) {\n  return {\n    tableHead: {\n      backgroundColor: '#fafafa',\n      borderTop: '2px solid rgba(224, 224, 224, .5)',\n      height: theme.spacing.unit * 6,\n      \"& th\": {\n        borderBottom: '2px solid rgba(224, 224, 224, .5)',\n        borderLeft: '1px solid rgba(224, 224, 224, .5)',\n        textAlign: 'center',\n        padding: '0px 0px 0px 0px',\n        width: '10%'\n      },\n      \"& th:first-of-type\": {\n        paddingLeft: theme.spacing.unit * 2,\n        borderLeft: 'none'\n      },\n      \"& th:nth-child(3)\": {\n        width: '60%'\n      }\n    },\n    tableBody: {\n      padding: '0px 0px 0px 0px',\n      height: theme.spacing.unit * 5,\n      \"& td\": {\n        textAlign: 'center',\n        borderLeft: '1px solid rgba(224, 224, 224, .5)',\n        padding: '0px 0px 0px 0px'\n      },\n      \"& td:first-of-type\": {\n        paddingLeft: theme.spacing.unit * 2,\n        borderLeft: 'none'\n      },\n      \"& td:nth-child(3)\": {\n        textAlign: 'left',\n        paddingLeft: theme.spacing.unit * 3\n      }\n    },\n    tableHeader: {\n      padding: '8px',\n      display: 'flex',\n      justifyContent: 'space-between',\n      marginBottom: 0\n    },\n    settingGrid: {\n      backgroundColor: 'antiquewhite'\n    },\n    subTitle: {\n      marginBlockStart: 'auto'\n    }\n  };\n};\n\nexport default withStyles(styles)(BreakTimeList);","map":{"version":3,"sources":["F:/JAVA_WORKSPACE/frontend_react-20191018T023535Z-001/frontend_react/src/components/service/BreakTimeList/BreakTimeList.js"],"names":["React","Component","Grid","Table","TableRow","TableHead","TableBody","TableCell","Badge","Button","locale","Typography","withStyles","ReactHTMLTableToExcel","BreakTimeList","handleShowModal","table","handleChangeInput","props","name","value","no","tables","language","classes","map","index","toJS","start","end","description","descriptionEn","use","updateTime","badge","tableBody","event","String","marginTop","tableHeader","subTitle","breakTimeList","tableHead","startTime","endTime","breakTimeExplanation","styles","theme","backgroundColor","borderTop","height","spacing","unit","borderBottom","borderLeft","textAlign","padding","width","paddingLeft","display","justifyContent","marginBottom","settingGrid","marginBlockStart"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Grid, Table, TableRow, TableHead, TableBody, TableCell} from '@material-ui/core';\r\nimport {Badge} from 'react-bootstrap';\r\nimport {Button} from 'antd';\r\nimport locale from 'locale';\r\nimport {Typography} from \"components/Wrappers\";\r\nimport {withStyles} from \"@material-ui/core\";\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\nimport \"../../list/TableList/TableList.css\";\r\n\r\n\r\nclass BreakTimeList extends Component {\r\n\r\n    handleShowModal = (table) => {\r\n        //console.log(table);\r\n        const {handleChangeInput} = this.props;\r\n\r\n        handleChangeInput({name: 'no', value: table.no});\r\n        handleChangeInput({name: 'modal', value: true});\r\n    }\r\n\r\n    render() {\r\n        const {tables, language, classes} = this.props;\r\n\r\n        const BreakTimeList = tables.map(\r\n            (table, index) => {\r\n                let {start, end, description, descriptionEn, use, updateTime} = table.toJS();\r\n                let badge = '';\r\n\r\n                if (use === true) {\r\n                    badge = 'success';\r\n                } else {\r\n                    badge = 'danger';\r\n                }\r\n\r\n                if (language === \"en\") {\r\n                    description = descriptionEn;\r\n                } else {\r\n                    use === true ? use = '사용' : use = '사용안함';\r\n                }\r\n\r\n                return (\r\n                    <TableRow className={classes.tableBody} hover key={index} onClick={event => this.handleShowModal(table.toJS())}>\r\n                        <TableCell>{start}</TableCell>\r\n                        <TableCell>{end}</TableCell>\r\n                        <TableCell>{description}</TableCell>\r\n                        <TableCell>{updateTime}</TableCell>\r\n                        <TableCell><Badge variant={badge}>{String(use)}</Badge></TableCell>\r\n                    </TableRow>\r\n                )\r\n            }\r\n        );\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Grid item xs={12} style={{marginTop: '8px'}}>\r\n                    <div className={classes.tableHeader}>\r\n                        <Typography className={classes.subTitle} variant=\"h4\" size=\"sm\">\r\n                            <strong>{locale.breakTimeList[language]}</strong>\r\n                        </Typography>\r\n                        <Button type=\"link\" shape=\"round\" icon=\"download\" size=\"large\">\r\n                            <ReactHTMLTableToExcel\r\n                                id=\"test-table-xls-button\"\r\n                                className=\"css\"\r\n                                table=\"breakTimeTable\"\r\n                                filename=\"breakTimeTableXLS\"\r\n                                sheet=\"breakTimeTableXLS\"\r\n                                buttonText=\"Download\"\r\n                            />\r\n                        </Button>\r\n                    </div>\r\n                    \r\n                    <Table id=\"breakTimeTable\" className=\"mb-0\">\r\n                        <TableHead>\r\n                            <TableRow className={classes.tableHead}>\r\n                                <TableCell><b>{locale.startTime[language]}</b></TableCell>\r\n                                <TableCell><b>{locale.endTime[language]}</b></TableCell>\r\n                                <TableCell><b>{locale.breakTimeExplanation[language]}</b></TableCell>\r\n                                <TableCell><b>{locale.updateTime[language]}</b></TableCell>\r\n                                <TableCell><b>{locale.use[language]}</b></TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {BreakTimeList}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Grid>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    tableHead: {\r\n        backgroundColor: '#fafafa',\r\n        borderTop: '2px solid rgba(224, 224, 224, .5)',\r\n        height: theme.spacing.unit * 6,\r\n        \"& th\" : {\r\n            borderBottom: '2px solid rgba(224, 224, 224, .5)',\r\n            borderLeft: '1px solid rgba(224, 224, 224, .5)',\r\n            textAlign: 'center',\r\n            padding: '0px 0px 0px 0px',\r\n            width: '10%'\r\n        },\r\n        \"& th:first-of-type\" : {\r\n            paddingLeft: theme.spacing.unit * 2,\r\n            borderLeft: 'none'\r\n        },\r\n        \"& th:nth-child(3)\" : {\r\n            width: '60%'\r\n        }\r\n    },\r\n    tableBody: {\r\n        padding: '0px 0px 0px 0px',\r\n        height: theme.spacing.unit * 5,\r\n        \"& td\" : {\r\n            textAlign: 'center',\r\n            borderLeft: '1px solid rgba(224, 224, 224, .5)',\r\n            padding: '0px 0px 0px 0px'\r\n        },\r\n        \"& td:first-of-type\" : {\r\n            paddingLeft: theme.spacing.unit * 2,\r\n            borderLeft: 'none'\r\n        },\r\n        \"& td:nth-child(3)\" : {\r\n            textAlign: 'left',\r\n            paddingLeft: theme.spacing.unit * 3\r\n        }\r\n    },\r\n    tableHeader: {\r\n        padding: '8px',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        marginBottom: 0\r\n    },\r\n    settingGrid: {\r\n        backgroundColor: 'antiquewhite'\r\n    },\r\n    subTitle: {\r\n        marginBlockStart: 'auto',\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(BreakTimeList);"]},"metadata":{},"sourceType":"module"}