{"ast":null,"code":"import _regeneratorRuntime from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\src\\\\containers\\\\record\\\\RecordListContainer.js\";\nimport React, { Component } from 'react';\nimport RecordList from 'components/record/RecordList/RecordList';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as recordActions from 'store/modules/record';\nimport * as paginationActions from 'store/modules/pagination';\nimport locale from 'locale';\n\nclass RecordListContainer extends Component {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n\n    this.handleChangeInput = ({\n      name,\n      value\n    }) => {\n      const RecordActions = this.props.RecordActions;\n      RecordActions.changeInput({\n        name,\n        value\n      });\n    };\n\n    this.getList = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _this$props, RecordActions, activePage, PaginationActions, _this$props2, token, auth, loginUserNo, language;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _this$props = _this.props, RecordActions = _this$props.RecordActions, activePage = _this$props.activePage, PaginationActions = _this$props.PaginationActions;\n            _this$props2 = _this.props, token = _this$props2.token, auth = _this$props2.auth, loginUserNo = _this$props2.loginUserNo, language = _this$props2.language; //console.log(loginUserNo);\n\n            _context.prev = 2;\n\n            if (!(auth === \"ROLE_ADMIN\")) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 6;\n            return RecordActions.getRecordList(activePage, token);\n\n          case 6:\n            _context.next = 12;\n            break;\n\n          case 8:\n            _context.next = 10;\n            return PaginationActions.getSearchRecordPage('', '', '', '', '', 'true', String(loginUserNo), '', token, language);\n\n          case 10:\n            _context.next = 12;\n            return RecordActions.getSearchRecordList(activePage, '', '', '', '', '', 'true', String(loginUserNo), '', token, language);\n\n          case 12:\n            _context.next = 17;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](2);\n            console.log(_context.t0);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[2, 14]]);\n    }));\n  }\n\n  componentWillMount() {\n    this.getList();\n  }\n\n  componentDidMount() {\n    const language = this.props.language;\n    document.title = locale.activeRecordTitle[language];\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    document.title = locale.activeRecordTitle[nextProps.language];\n    return true;\n  }\n\n  render() {\n    const _this$props3 = this.props,\n          tables = _this$props3.tables,\n          loading = _this$props3.loading,\n          badge = _this$props3.badge,\n          changeView = _this$props3.changeView,\n          language = _this$props3.language,\n          subSelect = _this$props3.subSelect,\n          subStartdate = _this$props3.subStartdate,\n          subEnddate = _this$props3.subEnddate,\n          subType = _this$props3.subType,\n          subRead = _this$props3.subRead,\n          subContent = _this$props3.subContent,\n          auth = _this$props3.auth,\n          loginUserName = _this$props3.loginUserName;\n    if (changeView !== 'table') return null;\n    if (loading && tables <= 0) return null;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(RecordList, {\n      language: language,\n      tables: tables,\n      badge: badge,\n      handleChangeInput: this.handleChangeInput,\n      loginUserName: loginUserName,\n      subSelect: subSelect,\n      subStartdate: subStartdate,\n      subEnddate: subEnddate,\n      subType: subType,\n      subRead: subRead,\n      subContent: subContent,\n      auth: auth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }));\n  }\n\n}\n\nexport default connect(state => ({\n  tables: state.record.get('tables'),\n  changeView: state.record.get('changeView'),\n  no: state.record.get('no'),\n  badge: state.record.get('badge'),\n  loading: state.pender.pending['record/RECORD_LIST'],\n  activePage: state.pagination.get('activePage'),\n  token: state.login.token,\n  language: state.language.language,\n  auth: state.login.auth,\n  loginUserNo: state.login.no,\n  loginUserName: state.login.name,\n  subStartdate: state.record.get('subStartdate'),\n  subEnddate: state.record.get('subEnddate'),\n  subSelect: state.record.get('subSelect'),\n  subType: state.record.get('subType'),\n  subRead: state.record.get('subRead'),\n  subContent: state.record.get('subContent')\n}), dispatch => ({\n  RecordActions: bindActionCreators(recordActions, dispatch),\n  PaginationActions: bindActionCreators(paginationActions, dispatch)\n}))(RecordListContainer);","map":{"version":3,"sources":["F:/JAVA_WORKSPACE/frontend_react-20191018T023535Z-001/frontend_react/src/containers/record/RecordListContainer.js"],"names":["React","Component","RecordList","bindActionCreators","connect","recordActions","paginationActions","locale","RecordListContainer","handleChangeInput","name","value","RecordActions","props","changeInput","getList","activePage","PaginationActions","token","auth","loginUserNo","language","getRecordList","getSearchRecordPage","String","getSearchRecordList","console","log","componentWillMount","componentDidMount","document","title","activeRecordTitle","shouldComponentUpdate","nextProps","nextState","render","tables","loading","badge","changeView","subSelect","subStartdate","subEnddate","subType","subRead","subContent","loginUserName","state","record","get","no","pender","pending","pagination","login","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport RecordList from 'components/record/RecordList/RecordList';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport * as recordActions from 'store/modules/record';\r\nimport * as paginationActions from 'store/modules/pagination';\r\nimport locale from 'locale';\r\n\r\n\r\nclass RecordListContainer extends Component {\r\n\r\n    handleChangeInput = ({name, value}) => {\r\n        const {RecordActions} = this.props;\r\n\r\n        RecordActions.changeInput({name, value});\r\n    }\r\n\r\n    getList = async() => {\r\n        const { RecordActions, activePage, PaginationActions } = this.props;\r\n        const { token, auth, loginUserNo, language } = this.props;\r\n\r\n        //console.log(loginUserNo);\r\n        try{\r\n            if(auth === \"ROLE_ADMIN\") {\r\n                await RecordActions.getRecordList(activePage, token);\r\n            }\r\n            else{\r\n                await PaginationActions.getSearchRecordPage('', '', '', '', '', 'true', String(loginUserNo), '', token, language);\r\n                await RecordActions.getSearchRecordList(activePage, '', '', '', '', '', 'true', String(loginUserNo), '', token, language);\r\n            }\r\n        } catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.getList();\r\n    }\r\n    \r\n    componentDidMount() {\r\n        const {language} = this.props;\r\n        document.title = locale.activeRecordTitle[language];\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        document.title = locale.activeRecordTitle[nextProps.language];\r\n\r\n        return true;\r\n    }\r\n\r\n    render(){\r\n        const { tables, loading, badge, changeView, language, subSelect, subStartdate, subEnddate,\r\n                subType, subRead, subContent, auth, loginUserName} = this.props;\r\n\r\n        if(changeView !== 'table') return null;\r\n        if(loading && tables <= 0) return null;\r\n        \r\n        return(\r\n            <div>\r\n                {\r\n                    <RecordList language={language} tables={tables} badge={badge} handleChangeInput={this.handleChangeInput} loginUserName={loginUserName}\r\n                                subSelect={subSelect} subStartdate={subStartdate} subEnddate={subEnddate} \r\n                                subType={subType} subRead={subRead} subContent={subContent} auth={auth}/>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        tables: state.record.get('tables'),\r\n        changeView: state.record.get('changeView'),\r\n        no: state.record.get('no'),\r\n        badge: state.record.get('badge'),\r\n        loading: state.pender.pending['record/RECORD_LIST'],\r\n        activePage: state.pagination.get('activePage'),\r\n        token: state.login.token,\r\n        language: state.language.language,\r\n        auth: state.login.auth,\r\n        loginUserNo: state.login.no,\r\n        loginUserName: state.login.name,\r\n        subStartdate: state.record.get('subStartdate'),\r\n        subEnddate: state.record.get('subEnddate'),\r\n        subSelect: state.record.get('subSelect'),\r\n        subType: state.record.get('subType'),\r\n        subRead: state.record.get('subRead'),\r\n        subContent: state.record.get('subContent')\r\n    }),\r\n    (dispatch) => ({\r\n        RecordActions: bindActionCreators(recordActions, dispatch),\r\n        PaginationActions: bindActionCreators(paginationActions, dispatch)\r\n    })\r\n)(RecordListContainer);"]},"metadata":{},"sourceType":"module"}