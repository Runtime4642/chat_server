{"ast":null,"code":"import _regeneratorRuntime from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\src\\\\containers\\\\record\\\\RecordPaginationContainer.js\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Pagination from 'components/list/Pagination';\nimport * as paginationActions from 'store/modules/pagination';\nimport * as recordActions from 'store/modules/record';\n\nvar RecordPaginationContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RecordPaginationContainer, _Component);\n\n  function RecordPaginationContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RecordPaginationContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RecordPaginationContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handlePageChange = function (pageNumber) {\n      var _this$props = _this.props,\n          activePage = _this$props.activePage,\n          PaginationActions = _this$props.PaginationActions;\n      PaginationActions.pageChange({\n        activePage: activePage,\n        pageNumber: pageNumber\n      });\n\n      _this.handleList(pageNumber);\n    };\n\n    _this.handleList =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(pageNumber) {\n        var _this$props2, RecordActions, startdate, enddate, name, content, recordType, select, no, read, _this$props3, token, auth, loginUserNo, language, searchSelect, searchNo;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$props2 = _this.props, RecordActions = _this$props2.RecordActions, startdate = _this$props2.startdate, enddate = _this$props2.enddate, name = _this$props2.name, content = _this$props2.content, recordType = _this$props2.recordType, select = _this$props2.select, no = _this$props2.no, read = _this$props2.read;\n                _this$props3 = _this.props, token = _this$props3.token, auth = _this$props3.auth, loginUserNo = _this$props3.loginUserNo, language = _this$props3.language;\n\n                if (auth === \"ROLE_USER\") {\n                  searchSelect = true;\n                  searchNo = loginUserNo;\n                } else {\n                  searchSelect = select;\n                  searchNo = no;\n                }\n\n                if (!(startdate === \"\" && enddate === \"\" && name === \"\" && content === \"\" && recordType === \"전체\" && read === \"전체\" && searchSelect === false)) {\n                  _context.next = 14;\n                  break;\n                }\n\n                _context.prev = 4;\n                _context.next = 7;\n                return RecordActions.getRecordList(pageNumber, token);\n\n              case 7:\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](4);\n                console.log(_context.t0);\n\n              case 12:\n                _context.next = 22;\n                break;\n\n              case 14:\n                _context.prev = 14;\n                _context.next = 17;\n                return RecordActions.getSearchRecordList(pageNumber, startdate, enddate, name, content, recordType, searchSelect, searchNo, read, token, language);\n\n              case 17:\n                _context.next = 22;\n                break;\n\n              case 19:\n                _context.prev = 19;\n                _context.t1 = _context[\"catch\"](14);\n                console.log(_context.t1);\n\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[4, 9], [14, 19]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handlePage =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var PaginationActions, token;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              PaginationActions = _this.props.PaginationActions;\n              token = _this.props.token;\n              _context2.prev = 2;\n              _context2.next = 5;\n              return PaginationActions.getRecordTotal(token);\n\n            case 5:\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](2);\n              console.log(_context2.t0);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 7]]);\n    }));\n    return _this;\n  }\n\n  _createClass(RecordPaginationContainer, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var auth = this.props.auth;\n\n      if (auth === \"ROLE_ADMIN\") {\n        this.handlePage();\n      } else {\n        this.handleList(1);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var PaginationActions = this.props.PaginationActions;\n      PaginationActions.initialize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          activePage = _this$props4.activePage,\n          totalCount = _this$props4.totalCount;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Pagination, {\n        activePage: activePage,\n        totalCount: totalCount,\n        onChange: this.handlePageChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return RecordPaginationContainer;\n}(Component);\n\nexport default connect(function (state) {\n  return {\n    activePage: state.pagination.get('activePage'),\n    totalCount: state.pagination.get('totalCount'),\n    startdate: state.record.get('startdate'),\n    enddate: state.record.get('enddate'),\n    name: state.record.get('name'),\n    content: state.record.get('newContent'),\n    select: state.record.get('select'),\n    no: state.record.get('no'),\n    read: state.record.get('newRead'),\n    recordType: state.record.get('newRecordType'),\n    token: state.login.token,\n    auth: state.login.auth,\n    loginUserNo: state.login.no,\n    language: state.language.language\n  };\n}, function (dispatch) {\n  return {\n    PaginationActions: bindActionCreators(paginationActions, dispatch),\n    RecordActions: bindActionCreators(recordActions, dispatch)\n  };\n})(RecordPaginationContainer);","map":{"version":3,"sources":["F:/JAVA_WORKSPACE/frontend_react-20191018T023535Z-001/frontend_react/src/containers/record/RecordPaginationContainer.js"],"names":["React","Component","bindActionCreators","connect","Pagination","paginationActions","recordActions","RecordPaginationContainer","handlePageChange","pageNumber","props","activePage","PaginationActions","pageChange","handleList","RecordActions","startdate","enddate","name","content","recordType","select","no","read","token","auth","loginUserNo","language","searchSelect","searchNo","getRecordList","console","log","getSearchRecordList","handlePage","getRecordTotal","initialize","totalCount","state","pagination","get","record","login","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport Pagination from 'components/list/Pagination';\r\nimport * as paginationActions from 'store/modules/pagination';\r\nimport * as recordActions from 'store/modules/record';\r\n\r\n\r\nclass RecordPaginationContainer extends Component {\r\n\r\n    handlePageChange = (pageNumber) => {\r\n        const { activePage, PaginationActions } = this.props;\r\n\r\n        PaginationActions.pageChange({activePage, pageNumber});\r\n        this.handleList(pageNumber);\r\n    }\r\n\r\n    handleList = async(pageNumber) => {\r\n        const { RecordActions, startdate, enddate, name, content, recordType, select, no, read } = this.props;\r\n        const { token, auth, loginUserNo, language } = this.props;\r\n\r\n        let searchSelect;\r\n        let searchNo;\r\n\r\n        if(auth === \"ROLE_USER\") {\r\n            searchSelect = true;\r\n            searchNo = loginUserNo;\r\n        }\r\n        else{\r\n            searchSelect = select;\r\n            searchNo = no;\r\n        }\r\n\r\n        if(startdate === \"\" && enddate === \"\" && name === \"\" && content === \"\" && recordType === \"전체\" && read === \"전체\" && searchSelect === false) {\r\n            try {\r\n                //console.log(\"change page : \" + pageNumber);\r\n                //console.log(\"searchSelect : \" + searchSelect);\r\n\r\n                await RecordActions.getRecordList(pageNumber, token);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        }\r\n        else {\r\n            try{\r\n                //console.log(\"startdate : \" + startdate);\r\n                //console.log(\"enddate : \" + enddate);\r\n                //console.log(\"name : \" + name);\r\n                //console.log(\"content : \" + content);\r\n                //console.log(\"recordType : \" + recordType);\r\n                //console.log(\"searchNo : \" + searchNo);\r\n                //console.log(\"read : \" + read);\r\n                //console.log(\"searchSelect : \" + searchSelect);\r\n\r\n                await RecordActions.getSearchRecordList(pageNumber, startdate, enddate, name, content, recordType, searchSelect, searchNo, read, token, language);\r\n            } catch(e){\r\n                console.log(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    handlePage = async() => {\r\n        const { PaginationActions } = this.props;\r\n        const { token } = this.props;\r\n\r\n        try{\r\n            await PaginationActions.getRecordTotal(token);\r\n        } catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        const { auth } = this.props;\r\n\r\n        if(auth === \"ROLE_ADMIN\"){\r\n            this.handlePage();\r\n        }\r\n        else{\r\n            this.handleList(1);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { PaginationActions } = this.props;\r\n\r\n        PaginationActions.initialize();\r\n    }\r\n\r\n    render() {\r\n        const {activePage, totalCount} = this.props;\r\n\r\n        return(\r\n            <div>\r\n                <Pagination activePage={activePage} totalCount={totalCount} onChange={this.handlePageChange}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        activePage: state.pagination.get('activePage'),\r\n        totalCount: state.pagination.get('totalCount'),\r\n        startdate: state.record.get('startdate'),\r\n        enddate: state.record.get('enddate'),\r\n        name: state.record.get('name'),\r\n        content: state.record.get('newContent'),\r\n        select: state.record.get('select'),\r\n        no: state.record.get('no'),\r\n        read: state.record.get('newRead'),\r\n        recordType: state.record.get('newRecordType'),\r\n        token: state.login.token,\r\n        auth: state.login.auth,\r\n        loginUserNo: state.login.no,\r\n        language: state.language.language\r\n    }),\r\n    (dispatch) => ({\r\n        PaginationActions: bindActionCreators(paginationActions, dispatch),\r\n        RecordActions: bindActionCreators(recordActions, dispatch)\r\n    })\r\n)(RecordPaginationContainer);"]},"metadata":{},"sourceType":"module"}