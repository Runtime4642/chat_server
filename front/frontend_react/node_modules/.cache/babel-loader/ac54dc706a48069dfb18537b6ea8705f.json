{"ast":null,"code":"import _classCallCheck from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\JAVA_WORKSPACE\\\\frontend_react-20191018T023535Z-001\\\\frontend_react\\\\src\\\\components\\\\record\\\\RecordList\\\\RecordList.js\";\nimport React, { Component } from 'react';\nimport { Badge } from 'react-bootstrap';\nimport { Grid, Table, TableRow, TableHead, TableBody, TableCell } from '@material-ui/core';\nimport { Button } from \"antd\";\nimport locale from 'locale';\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport \"../../list/TableList/TableList.css\";\nimport { withStyles } from \"@material-ui/core\";\n\nvar RecordList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RecordList, _Component);\n\n  function RecordList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RecordList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RecordList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleShowModal = function (table) {\n      //console.log(table);\n      var handleChangeInput = _this.props.handleChangeInput;\n      handleChangeInput({\n        name: 'no',\n        value: table.no\n      });\n      handleChangeInput({\n        name: 'modal',\n        value: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(RecordList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          tables = _this$props.tables,\n          language = _this$props.language,\n          classes = _this$props.classes; //console.log(tables);\n\n      var RecordList = tables.map(function (table, index) {\n        var _table$toJS = table.toJS(),\n            day = _table$toJS.day,\n            actor = _table$toJS.actor,\n            insertUserId = _table$toJS.insertUserId,\n            recordType = _table$toJS.recordType,\n            recordTypeEn = _table$toJS.recordTypeEn,\n            content = _table$toJS.content,\n            contentEn = _table$toJS.contentEn,\n            read = _table$toJS.read;\n\n        var badge = '';\n\n        if (read === true) {\n          badge = \"success\";\n        } else {\n          badge = \"danger\";\n        }\n\n        if (language === \"en\") {\n          recordType = recordTypeEn;\n          content = contentEn;\n        } else {\n          read === true ? read = '읽음' : read = '읽지않음';\n        }\n\n        return React.createElement(TableRow, {\n          className: classes.tableBody,\n          hover: true,\n          key: index,\n          onClick: function onClick(event) {\n            return _this2.handleShowModal(table.toJS());\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          className: \"pl-3 fw-normal\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, day), React.createElement(TableCell, {\n          id: \"actor\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, actor), React.createElement(TableCell, {\n          id: \"id\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, insertUserId), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, recordType), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, content), React.createElement(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"h6\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(Badge, {\n          variant: badge,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, String(read)))));\n      });\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: divWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"link\",\n        shape: \"round\",\n        icon: \"download\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(ReactHTMLTableToExcel, {\n        id: \"test-table-xls-button\",\n        className: \"css\",\n        table: \"recordTable\",\n        filename: \"recordTableXLS\",\n        sheet: \"recordTableXLS\",\n        buttonText: \"Download\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          marginTop: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Table, {\n        id: \"recordTable\",\n        className: \"mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        className: classes.tableHead,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, locale.Date[language])), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, locale.ActiveAgent[language])), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, locale.Id[language])), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, locale.Type[language])), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, locale.Contents[language])), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, locale.ReadCheck[language])))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, RecordList)))));\n    }\n  }]);\n\n  return RecordList;\n}(Component);\n\nvar divWrapper = {\n  height: \"100%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"flex-end\"\n};\n\nvar styles = function styles(theme) {\n  return {\n    tableHead: {\n      backgroundColor: '#fafafa',\n      borderTop: '2px solid rgba(224, 224, 224, .5)',\n      height: theme.spacing.unit * 6,\n      \"& th\": {\n        borderBottom: '2px solid rgba(224, 224, 224, .5)',\n        borderLeft: '1px solid rgba(224, 224, 224, .5)',\n        textAlign: 'center',\n        padding: '0px 0px 0px 0px',\n        width: '10%'\n      },\n      \"& th:first-of-type\": {\n        paddingLeft: theme.spacing.unit * 2,\n        borderLeft: 'none'\n      },\n      \"& th:nth-child(4)\": {\n        width: '15%'\n      },\n      \"& th:nth-child(5)\": {\n        width: '45%'\n      }\n    },\n    tableBody: {\n      padding: '0px 0px 0px 0px',\n      height: theme.spacing.unit * 5,\n      \"& td\": {\n        textAlign: 'center',\n        padding: '0px 0px 0px 0px',\n        borderLeft: '1px solid rgba(224, 224, 224, .5)'\n      },\n      \"& td:nth-child(5)\": {\n        paddingLeft: theme.spacing.unit * 2,\n        textAlign: 'left'\n      },\n      \"& td:first-of-type\": {\n        paddingLeft: theme.spacing.unit * 2,\n        borderLeft: 'none'\n      }\n    },\n    settingGrid: {\n      backgroundColor: 'antiquewhite'\n    }\n  };\n};\n\nexport default withStyles(styles)(RecordList);","map":{"version":3,"sources":["F:/JAVA_WORKSPACE/frontend_react-20191018T023535Z-001/frontend_react/src/components/record/RecordList/RecordList.js"],"names":["React","Component","Badge","Grid","Table","TableRow","TableHead","TableBody","TableCell","Button","locale","ReactHTMLTableToExcel","withStyles","RecordList","handleShowModal","table","handleChangeInput","props","name","value","no","tables","language","classes","map","index","toJS","day","actor","insertUserId","recordType","recordTypeEn","content","contentEn","read","badge","tableBody","event","String","divWrapper","marginTop","tableHead","Date","ActiveAgent","Id","Type","Contents","ReadCheck","height","display","flexDirection","justifyContent","alignItems","styles","theme","backgroundColor","borderTop","spacing","unit","borderBottom","borderLeft","textAlign","padding","width","paddingLeft","settingGrid"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Badge} from 'react-bootstrap';\r\nimport {Grid, Table, TableRow, TableHead, TableBody, TableCell} from '@material-ui/core';\r\nimport {Button} from \"antd\";\r\nimport locale from 'locale';\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\nimport \"../../list/TableList/TableList.css\";\r\n\r\n\r\nimport { withStyles } from \"@material-ui/core\";\r\n\r\nclass RecordList extends Component {\r\n\r\n    handleShowModal = (table) => {\r\n        //console.log(table);\r\n        const {handleChangeInput} = this.props;\r\n\r\n        handleChangeInput({name: 'no', value: table.no});\r\n        handleChangeInput({name: 'modal', value: true});\r\n    }\r\n\r\n    render() {\r\n        const {tables, language, classes} = this.props;\r\n\r\n        //console.log(tables);\r\n\r\n        const RecordList = tables.map(\r\n            (table, index) => {\r\n                let {day, actor, insertUserId, recordType, recordTypeEn, content, contentEn, read} = table.toJS();\r\n                let badge = '';\r\n\r\n                if (read === true) {\r\n                    badge = \"success\";\r\n                } else {\r\n                    badge = \"danger\";\r\n                }\r\n\r\n                if (language === \"en\") {\r\n                    recordType = recordTypeEn;\r\n                    content = contentEn;\r\n                } else {\r\n                    read === true ? read = '읽음' : read = '읽지않음';\r\n                }\r\n\r\n                return (\r\n                    <TableRow className={classes.tableBody} hover key={index} onClick={event => this.handleShowModal(table.toJS())}>\r\n                        <TableCell className=\"pl-3 fw-normal\">{day}</TableCell>\r\n                        <TableCell id=\"actor\">{actor}</TableCell>\r\n                        <TableCell id=\"id\">{insertUserId}</TableCell>\r\n                        <TableCell>{recordType}</TableCell>\r\n                        <TableCell>{content}</TableCell>\r\n                        <TableCell><h6><Badge variant={badge}>{String(read)}</Badge></h6></TableCell>\r\n                    </TableRow>\r\n                );\r\n            }\r\n        );\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div style={divWrapper}>\r\n                    <Button type=\"link\" shape=\"round\" icon=\"download\" size=\"large\">\r\n                        <ReactHTMLTableToExcel\r\n                            id=\"test-table-xls-button\"\r\n                            className=\"css\"\r\n                            table=\"recordTable\"\r\n                            filename=\"recordTableXLS\"\r\n                            sheet=\"recordTableXLS\"\r\n                            buttonText=\"Download\"\r\n                        />\r\n                    </Button>\r\n                </div>\r\n                <Grid item xs={12} style={{marginTop: '10px'}}>\r\n                    <div>\r\n                        <Table id=\"recordTable\" className=\"mb-0\">\r\n                            <TableHead>\r\n                                <TableRow className={classes.tableHead}>\r\n                                    <TableCell><b>{locale.Date[language]}</b></TableCell>\r\n                                    <TableCell><b>{locale.ActiveAgent[language]}</b></TableCell>\r\n                                    <TableCell><b>{locale.Id[language]}</b></TableCell>\r\n                                    <TableCell><b>{locale.Type[language]}</b></TableCell>\r\n                                    <TableCell><b>{locale.Contents[language]}</b></TableCell>\r\n                                    <TableCell><b>{locale.ReadCheck[language]}</b></TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {RecordList}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </div>\r\n                </Grid>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst divWrapper = {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"flex-end\",\r\n}\r\n\r\nconst styles = theme => ({\r\n    tableHead: {\r\n        backgroundColor: '#fafafa',\r\n        borderTop: '2px solid rgba(224, 224, 224, .5)',\r\n        height: theme.spacing.unit * 6,\r\n        \"& th\" : {\r\n            borderBottom: '2px solid rgba(224, 224, 224, .5)',\r\n            borderLeft: '1px solid rgba(224, 224, 224, .5)',\r\n            textAlign: 'center',\r\n            padding: '0px 0px 0px 0px',\r\n            width: '10%'\r\n        },\r\n        \"& th:first-of-type\" : {\r\n            paddingLeft: theme.spacing.unit * 2,\r\n            borderLeft: 'none'\r\n        },\r\n        \"& th:nth-child(4)\" : {\r\n            width: '15%'\r\n        },\r\n        \"& th:nth-child(5)\" : {\r\n            width: '45%'\r\n        }\r\n    },\r\n    tableBody: {\r\n        padding: '0px 0px 0px 0px',\r\n        height: theme.spacing.unit * 5,\r\n        \"& td\" : {\r\n            textAlign: 'center',\r\n            padding: '0px 0px 0px 0px',\r\n            borderLeft: '1px solid rgba(224, 224, 224, .5)',\r\n        },\r\n        \"& td:nth-child(5)\" : {\r\n            paddingLeft: theme.spacing.unit * 2,\r\n            textAlign: 'left'\r\n        },\r\n        \"& td:first-of-type\" : {\r\n            paddingLeft: theme.spacing.unit * 2,\r\n            borderLeft: 'none'\r\n        }\r\n    },\r\n    settingGrid: {\r\n        backgroundColor: 'antiquewhite'\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(RecordList);\r\n"]},"metadata":{},"sourceType":"module"}